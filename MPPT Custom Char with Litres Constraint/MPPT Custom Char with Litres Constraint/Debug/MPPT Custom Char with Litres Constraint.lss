
MPPT Custom Char with Litres Constraint.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000021c  00800100  00002070  00002104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002070  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  0080031c  0080031c  00002320  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002320  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002350  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00002390  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004388  00000000  00000000  000024a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000063d  00000000  00000000  00006830  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001679  00000000  00000000  00006e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000344  00000000  00000000  000084e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f5  00000000  00000000  0000882c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000302d  00000000  00000000  00008e21  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000be4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	de c0       	rjmp	.+444    	; 0x1c2 <__bad_interrupt>
       6:	00 00       	nop
       8:	dc c0       	rjmp	.+440    	; 0x1c2 <__bad_interrupt>
       a:	00 00       	nop
       c:	da c0       	rjmp	.+436    	; 0x1c2 <__bad_interrupt>
       e:	00 00       	nop
      10:	d8 c0       	rjmp	.+432    	; 0x1c2 <__bad_interrupt>
      12:	00 00       	nop
      14:	d6 c0       	rjmp	.+428    	; 0x1c2 <__bad_interrupt>
      16:	00 00       	nop
      18:	d4 c0       	rjmp	.+424    	; 0x1c2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d2 c0       	rjmp	.+420    	; 0x1c2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d0 c0       	rjmp	.+416    	; 0x1c2 <__bad_interrupt>
      22:	00 00       	nop
      24:	ce c0       	rjmp	.+412    	; 0x1c2 <__bad_interrupt>
      26:	00 00       	nop
      28:	cc c0       	rjmp	.+408    	; 0x1c2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	ca c0       	rjmp	.+404    	; 0x1c2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c8 c0       	rjmp	.+400    	; 0x1c2 <__bad_interrupt>
      32:	00 00       	nop
      34:	c6 c0       	rjmp	.+396    	; 0x1c2 <__bad_interrupt>
      36:	00 00       	nop
      38:	c4 c0       	rjmp	.+392    	; 0x1c2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0c 94 99 0b 	jmp	0x1732	; 0x1732 <__vector_15>
      40:	c0 c0       	rjmp	.+384    	; 0x1c2 <__bad_interrupt>
      42:	00 00       	nop
      44:	be c0       	rjmp	.+380    	; 0x1c2 <__bad_interrupt>
      46:	00 00       	nop
      48:	bc c0       	rjmp	.+376    	; 0x1c2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ba c0       	rjmp	.+372    	; 0x1c2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b8 c0       	rjmp	.+368    	; 0x1c2 <__bad_interrupt>
      52:	00 00       	nop
      54:	b6 c0       	rjmp	.+364    	; 0x1c2 <__bad_interrupt>
      56:	00 00       	nop
      58:	b4 c0       	rjmp	.+360    	; 0x1c2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b2 c0       	rjmp	.+356    	; 0x1c2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b0 c0       	rjmp	.+352    	; 0x1c2 <__bad_interrupt>
      62:	00 00       	nop
      64:	ae c0       	rjmp	.+348    	; 0x1c2 <__bad_interrupt>
      66:	00 00       	nop
      68:	ac c0       	rjmp	.+344    	; 0x1c2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	aa c0       	rjmp	.+340    	; 0x1c2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c1       	rjmp	.+600    	; 0x2ca <__vector_28>
      72:	00 00       	nop
      74:	a6 c0       	rjmp	.+332    	; 0x1c2 <__bad_interrupt>
      76:	00 00       	nop
      78:	a4 c0       	rjmp	.+328    	; 0x1c2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a2 c0       	rjmp	.+324    	; 0x1c2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a0 c0       	rjmp	.+320    	; 0x1c2 <__bad_interrupt>
      82:	00 00       	nop
      84:	9e c0       	rjmp	.+316    	; 0x1c2 <__bad_interrupt>
      86:	00 00       	nop
      88:	9c c0       	rjmp	.+312    	; 0x1c2 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	00 40       	sbci	r16, 0x00	; 0
      8e:	7a 10       	cpse	r7, r10
      90:	f3 5a       	subi	r31, 0xA3	; 163
      92:	00 a0       	ldd	r0, Z+32	; 0x20
      94:	72 4e       	sbci	r23, 0xE2	; 226
      96:	18 09       	sbc	r17, r8
      98:	00 10       	cpse	r0, r0
      9a:	a5 d4       	rcall	.+2378   	; 0x9e6 <main+0x350>
      9c:	e8 00       	.word	0x00e8	; ????
      9e:	00 e8       	ldi	r16, 0x80	; 128
      a0:	76 48       	sbci	r23, 0x86	; 134
      a2:	17 00       	.word	0x0017	; ????
      a4:	00 e4       	ldi	r16, 0x40	; 64
      a6:	0b 54       	subi	r16, 0x4B	; 75
      a8:	02 00       	.word	0x0002	; ????
      aa:	00 ca       	rjmp	.-3072   	; 0xfffff4ac <__eeprom_end+0xff7ef4ac>
      ac:	9a 3b       	cpi	r25, 0xBA	; 186
      ae:	00 00       	nop
      b0:	00 e1       	ldi	r16, 0x10	; 16
      b2:	f5 05       	cpc	r31, r5
      b4:	00 00       	nop
      b6:	80 96       	adiw	r24, 0x20	; 32
      b8:	98 00       	.word	0x0098	; ????
      ba:	00 00       	nop
      bc:	40 42       	sbci	r20, 0x20	; 32
      be:	0f 00       	.word	0x000f	; ????
      c0:	00 00       	nop
      c2:	a0 86       	std	Z+8, r10	; 0x08
      c4:	01 00       	.word	0x0001	; ????
      c6:	00 00       	nop
      c8:	10 27       	eor	r17, r16
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	e8 03       	fmulsu	r22, r16
      d0:	00 00       	nop
      d2:	00 00       	nop
      d4:	64 00       	.word	0x0064	; ????
      d6:	00 00       	nop
      d8:	00 00       	nop
      da:	0a 00       	.word	0x000a	; ????
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	01 00       	.word	0x0001	; ????
      e2:	00 00       	nop
      e4:	00 00       	nop
      e6:	2c 76       	andi	r18, 0x6C	; 108
      e8:	d8 88       	ldd	r13, Y+16	; 0x10
      ea:	dc 67       	ori	r29, 0x7C	; 124
      ec:	4f 08       	sbc	r4, r15
      ee:	23 df       	rcall	.-442    	; 0xffffff36 <__eeprom_end+0xff7eff36>
      f0:	c1 df       	rcall	.-126    	; 0x74 <__SREG__+0x35>
      f2:	ae 59       	subi	r26, 0x9E	; 158
      f4:	e1 b1       	in	r30, 0x01	; 1
      f6:	b7 96       	adiw	r30, 0x27	; 39
      f8:	e5 e3       	ldi	r30, 0x35	; 53
      fa:	e4 53       	subi	r30, 0x34	; 52
      fc:	c6 3a       	cpi	r28, 0xA6	; 166
      fe:	e6 51       	subi	r30, 0x16	; 22
     100:	99 76       	andi	r25, 0x69	; 105
     102:	96 e8       	ldi	r25, 0x86	; 134
     104:	e6 c2       	rjmp	.+1484   	; 0x6d2 <main+0x3c>
     106:	84 26       	eor	r8, r20
     108:	eb 89       	ldd	r30, Y+19	; 0x13
     10a:	8c 9b       	sbis	0x11, 4	; 17
     10c:	62 ed       	ldi	r22, 0xD2	; 210
     10e:	40 7c       	andi	r20, 0xC0	; 192
     110:	6f fc       	.word	0xfc6f	; ????
     112:	ef bc       	out	0x2f, r14	; 47
     114:	9c 9f       	mul	r25, r28
     116:	40 f2       	brcs	.-112    	; 0xa8 <__trampolines_end+0x1c>
     118:	ba a5       	ldd	r27, Y+42	; 0x2a
     11a:	6f a5       	ldd	r22, Y+47	; 0x2f
     11c:	f4 90       	lpm	r15, Z
     11e:	05 5a       	subi	r16, 0xA5	; 165
     120:	2a f7       	brpl	.-54     	; 0xec <__trampolines_end+0x60>
     122:	5c 93       	st	X, r21
     124:	6b 6c       	ori	r22, 0xCB	; 203
     126:	f9 67       	ori	r31, 0x79	; 121
     128:	6d c1       	rjmp	.+730    	; 0x404 <Input_Current+0xa6>
     12a:	1b fc       	.word	0xfc1b	; ????
     12c:	e0 e4       	ldi	r30, 0x40	; 64
     12e:	0d 47       	sbci	r16, 0x7D	; 125
     130:	fe f5       	brtc	.+126    	; 0x1b0 <__do_clear_bss+0x4>
     132:	20 e6       	ldi	r18, 0x60	; 96
     134:	b5 00       	.word	0x00b5	; ????
     136:	d0 ed       	ldi	r29, 0xD0	; 208
     138:	90 2e       	mov	r9, r16
     13a:	03 00       	.word	0x0003	; ????
     13c:	94 35       	cpi	r25, 0x54	; 84
     13e:	77 05       	cpc	r23, r7
     140:	00 80       	ld	r0, Z
     142:	84 1e       	adc	r8, r20
     144:	08 00       	.word	0x0008	; ????
     146:	00 20       	and	r0, r0
     148:	4e 0a       	sbc	r4, r30
     14a:	00 00       	nop
     14c:	00 c8       	rjmp	.-4096   	; 0xfffff14e <__eeprom_end+0xff7ef14e>
     14e:	0c 33       	cpi	r16, 0x3C	; 60
     150:	33 33       	cpi	r19, 0x33	; 51
     152:	33 0f       	add	r19, r19
     154:	98 6e       	ori	r25, 0xE8	; 232
     156:	12 83       	std	Z+2, r17	; 0x02
     158:	11 41       	sbci	r17, 0x11	; 17
     15a:	ef 8d       	ldd	r30, Y+31	; 0x1f
     15c:	21 14       	cp	r2, r1
     15e:	89 3b       	cpi	r24, 0xB9	; 185
     160:	e6 55       	subi	r30, 0x56	; 86
     162:	16 cf       	rjmp	.-468    	; 0xffffff90 <__eeprom_end+0xff7eff90>
     164:	fe e6       	ldi	r31, 0x6E	; 110
     166:	db 18       	sub	r13, r11
     168:	d1 84       	ldd	r13, Z+9	; 0x09
     16a:	4b 38       	cpi	r20, 0x8B	; 139
     16c:	1b f7       	brvc	.-58     	; 0x134 <__trampolines_end+0xa8>
     16e:	7c 1d       	adc	r23, r12
     170:	90 1d       	adc	r25, r0
     172:	a4 bb       	out	0x14, r26	; 20
     174:	e4 24       	eor	r14, r4
     176:	20 32       	cpi	r18, 0x20	; 32
     178:	84 72       	andi	r24, 0x24	; 36
     17a:	5e 22       	and	r5, r30
     17c:	81 00       	.word	0x0081	; ????
     17e:	c9 f1       	breq	.+114    	; 0x1f2 <LCDsendCommand+0x8>
     180:	24 ec       	ldi	r18, 0xC4	; 196
     182:	a1 e5       	ldi	r26, 0x51	; 81
     184:	3d 27       	eor	r19, r29

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d0 e4       	ldi	r29, 0x40	; 64
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61

00000192 <__do_copy_data>:
     192:	13 e0       	ldi	r17, 0x03	; 3
     194:	a0 e0       	ldi	r26, 0x00	; 0
     196:	b1 e0       	ldi	r27, 0x01	; 1
     198:	e0 e7       	ldi	r30, 0x70	; 112
     19a:	f0 e2       	ldi	r31, 0x20	; 32
     19c:	00 e0       	ldi	r16, 0x00	; 0
     19e:	0b bf       	out	0x3b, r16	; 59
     1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x14>
     1a2:	07 90       	elpm	r0, Z+
     1a4:	0d 92       	st	X+, r0
     1a6:	ac 31       	cpi	r26, 0x1C	; 28
     1a8:	b1 07       	cpc	r27, r17
     1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0x10>

000001ac <__do_clear_bss>:
     1ac:	23 e0       	ldi	r18, 0x03	; 3
     1ae:	ac e1       	ldi	r26, 0x1C	; 28
     1b0:	b3 e0       	ldi	r27, 0x03	; 3
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
     1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
     1b6:	ac 34       	cpi	r26, 0x4C	; 76
     1b8:	b2 07       	cpc	r27, r18
     1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
     1bc:	6c d2       	rcall	.+1240   	; 0x696 <main>
     1be:	0c 94 36 10 	jmp	0x206c	; 0x206c <_exit>

000001c2 <__bad_interrupt>:
     1c2:	1e cf       	rjmp	.-452    	; 0x0 <__vectors>

000001c4 <LCDtoggleEnable>:
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Char7
};

void LCDtoggleEnable(void)
{
	sbi(LCD_CONT_PORT,LCD_EN);
     1c4:	5d 9a       	sbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c6:	8d ee       	ldi	r24, 0xED	; 237
     1c8:	92 e0       	ldi	r25, 0x02	; 2
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <LCDtoggleEnable+0x6>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCDtoggleEnable+0xc>
     1d0:	00 00       	nop
	_delay_ms(3);
	cbi(LCD_CONT_PORT,LCD_EN);
     1d2:	5d 98       	cbi	0x0b, 5	; 11
     1d4:	08 95       	ret

000001d6 <LCDsendChar>:
}

void LCDsendChar(uint8_t data)
{
	sbi(LCD_CONT_PORT,LCD_RS);
     1d6:	5f 9a       	sbi	0x0b, 7	; 11
	
	LCD_DATA_PORT = data;
     1d8:	88 b9       	out	0x08, r24	; 8
	
	LCDtoggleEnable();
     1da:	f4 df       	rcall	.-24     	; 0x1c4 <LCDtoggleEnable>
     1dc:	83 ec       	ldi	r24, 0xC3	; 195
     1de:	99 e0       	ldi	r25, 0x09	; 9
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LCDsendChar+0xa>
     1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <LCDsendChar+0x10>
     1e6:	00 00       	nop
     1e8:	08 95       	ret

000001ea <LCDsendCommand>:
	_delay_ms(10);
}

void LCDsendCommand(uint8_t command)
{
	cbi(LCD_CONT_PORT,LCD_RS);
     1ea:	5f 98       	cbi	0x0b, 7	; 11
	
	LCD_DATA_PORT = command;
     1ec:	88 b9       	out	0x08, r24	; 8
	
	LCDtoggleEnable();
     1ee:	ea df       	rcall	.-44     	; 0x1c4 <LCDtoggleEnable>
     1f0:	83 ec       	ldi	r24, 0xC3	; 195
     1f2:	99 e0       	ldi	r25, 0x09	; 9
     1f4:	01 97       	sbiw	r24, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <LCDsendCommand+0xa>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <LCDsendCommand+0x10>
     1fa:	00 00       	nop
     1fc:	08 95       	ret

000001fe <LCDinit>:
	_delay_ms(10);
}

void LCDinit(void)//Initializes LCD
{
	LDDR = 0xFF;
     1fe:	8f ef       	ldi	r24, 0xFF	; 255
     200:	87 b9       	out	0x07, r24	; 7
	LCDR |= 1<<LCD_EN|1<<LCD_RS;
     202:	8a b1       	in	r24, 0x0a	; 10
     204:	80 6a       	ori	r24, 0xA0	; 160
     206:	8a b9       	out	0x0a, r24	; 10
	
	LCDsendCommand(0x38);
     208:	88 e3       	ldi	r24, 0x38	; 56
     20a:	ef df       	rcall	.-34     	; 0x1ea <LCDsendCommand>
     20c:	83 ec       	ldi	r24, 0xC3	; 195
     20e:	99 e0       	ldi	r25, 0x09	; 9
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <LCDinit+0x12>
     214:	00 c0       	rjmp	.+0      	; 0x216 <LCDinit+0x18>
     216:	00 00       	nop
	_delay_ms(10);
	
	LCDsendCommand(0x01);
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	e7 df       	rcall	.-50     	; 0x1ea <LCDsendCommand>
     21c:	83 ec       	ldi	r24, 0xC3	; 195
     21e:	99 e0       	ldi	r25, 0x09	; 9
     220:	01 97       	sbiw	r24, 0x01	; 1
     222:	f1 f7       	brne	.-4      	; 0x220 <LCDinit+0x22>
     224:	00 c0       	rjmp	.+0      	; 0x226 <LCDinit+0x28>
     226:	00 00       	nop
	_delay_ms(10);
	
	LCDsendCommand(0x06);
     228:	86 e0       	ldi	r24, 0x06	; 6
     22a:	df df       	rcall	.-66     	; 0x1ea <LCDsendCommand>
     22c:	83 ec       	ldi	r24, 0xC3	; 195
     22e:	99 e0       	ldi	r25, 0x09	; 9
     230:	01 97       	sbiw	r24, 0x01	; 1
     232:	f1 f7       	brne	.-4      	; 0x230 <LCDinit+0x32>
     234:	00 c0       	rjmp	.+0      	; 0x236 <LCDinit+0x38>
     236:	00 00       	nop
	_delay_ms(10);
	
	LCDsendCommand(0x0C);
     238:	8c e0       	ldi	r24, 0x0C	; 12
     23a:	d7 df       	rcall	.-82     	; 0x1ea <LCDsendCommand>
     23c:	83 ec       	ldi	r24, 0xC3	; 195
     23e:	99 e0       	ldi	r25, 0x09	; 9
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <LCDinit+0x42>
     244:	00 c0       	rjmp	.+0      	; 0x246 <LCDinit+0x48>
     246:	00 00       	nop
	_delay_ms(10);
	
	LCDsendCommand(0x80);
     248:	80 e8       	ldi	r24, 0x80	; 128
     24a:	cf df       	rcall	.-98     	; 0x1ea <LCDsendCommand>
     24c:	83 ec       	ldi	r24, 0xC3	; 195
     24e:	99 e0       	ldi	r25, 0x09	; 9
     250:	01 97       	sbiw	r24, 0x01	; 1
     252:	f1 f7       	brne	.-4      	; 0x250 <LCDinit+0x52>
     254:	00 c0       	rjmp	.+0      	; 0x256 <LCDinit+0x58>
     256:	00 00       	nop
     258:	08 95       	ret

0000025a <LCDclr>:

}	
		
void LCDclr(void)				//Clears LCD
{
	LCDsendCommand(0x01);
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	c6 cf       	rjmp	.-116    	; 0x1ea <LCDsendCommand>
     25e:	08 95       	ret

00000260 <LCDhome>:
}

void LCDhome(void)			//LCD cursor home
{
	LCDsendCommand(0x02);
     260:	82 e0       	ldi	r24, 0x02	; 2
     262:	c3 cf       	rjmp	.-122    	; 0x1ea <LCDsendCommand>
     264:	08 95       	ret

00000266 <LCDstring>:
}

void LCDstring(uint8_t *string, uint8_t nbytes)	//Outputs string to LCD
{
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	ec 01       	movw	r28, r24
	while (*string)
     26c:	88 81       	ld	r24, Y
     26e:	88 23       	and	r24, r24
     270:	29 f0       	breq	.+10     	; 0x27c <LCDstring+0x16>
     272:	21 96       	adiw	r28, 0x01	; 1
	LCDsendChar(*string++);
     274:	b0 df       	rcall	.-160    	; 0x1d6 <LCDsendChar>
	LCDsendCommand(0x02);
}

void LCDstring(uint8_t *string, uint8_t nbytes)	//Outputs string to LCD
{
	while (*string)
     276:	89 91       	ld	r24, Y+
     278:	81 11       	cpse	r24, r1
     27a:	fc cf       	rjmp	.-8      	; 0x274 <LCDstring+0xe>
	LCDsendChar(*string++);
}
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <LCDGotoXY>:

void LCDGotoXY(uint8_t x, uint8_t y)	//Cursor to X Y position
{
	register uint8_t DDRAMAddr;
	// remap lines into proper order
	switch(y)
     282:	62 30       	cpi	r22, 0x02	; 2
     284:	31 f0       	breq	.+12     	; 0x292 <LCDGotoXY+0x10>
     286:	63 30       	cpi	r22, 0x03	; 3
     288:	31 f0       	breq	.+12     	; 0x296 <LCDGotoXY+0x14>
     28a:	61 30       	cpi	r22, 0x01	; 1
     28c:	29 f4       	brne	.+10     	; 0x298 <LCDGotoXY+0x16>
	{
	case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
	case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     28e:	80 5c       	subi	r24, 0xC0	; 192
     290:	03 c0       	rjmp	.+6      	; 0x298 <LCDGotoXY+0x16>
	case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     292:	8c 5e       	subi	r24, 0xEC	; 236
     294:	01 c0       	rjmp	.+2      	; 0x298 <LCDGotoXY+0x16>
	case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     296:	8c 5a       	subi	r24, 0xAC	; 172
	default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
	}
	// set data address
	LCDsendCommand(1<<LCD_DDRAM | DDRAMAddr);
     298:	80 68       	ori	r24, 0x80	; 128
     29a:	a7 cf       	rjmp	.-178    	; 0x1ea <LCDsendCommand>
     29c:	08 95       	ret

0000029e <LCDcustom>:
	
}

void LCDcustom(void)
{
     29e:	0f 93       	push	r16
     2a0:	1f 93       	push	r17
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
	char i;
	LCDsendCommand(0x40);
     2a6:	80 e4       	ldi	r24, 0x40	; 64
     2a8:	a0 df       	rcall	.-192    	; 0x1ea <LCDsendCommand>
     2aa:	c7 e3       	ldi	r28, 0x37	; 55
     2ac:	d1 e0       	ldi	r29, 0x01	; 1
     2ae:	07 e7       	ldi	r16, 0x77	; 119
     2b0:	11 e0       	ldi	r17, 0x01	; 1
	
	for(i=0; i<64; i++)
	{
		LCDsendChar(LcdCustomChar[i]);
     2b2:	89 91       	ld	r24, Y+
     2b4:	90 df       	rcall	.-224    	; 0x1d6 <LCDsendChar>
void LCDcustom(void)
{
	char i;
	LCDsendCommand(0x40);
	
	for(i=0; i<64; i++)
     2b6:	c0 17       	cp	r28, r16
     2b8:	d1 07       	cpc	r29, r17
     2ba:	d9 f7       	brne	.-10     	; 0x2b2 <LCDcustom+0x14>
	{
		LCDsendChar(LcdCustomChar[i]);
	}
	
	LCDsendCommand(0x80);
     2bc:	80 e8       	ldi	r24, 0x80	; 128
     2be:	95 df       	rcall	.-214    	; 0x1ea <LCDsendCommand>
}	
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	1f 91       	pop	r17
     2c6:	0f 91       	pop	r16
     2c8:	08 95       	ret

000002ca <__vector_28>:
	*del_i	= di;
	*del_v	= dv;
	*del_i_v= dv/vdc;
	
	return New_Frq;
}
     2ca:	1f 92       	push	r1
     2cc:	0f 92       	push	r0
     2ce:	0f b6       	in	r0, 0x3f	; 63
     2d0:	0f 92       	push	r0
     2d2:	11 24       	eor	r1, r1
     2d4:	0b b6       	in	r0, 0x3b	; 59
     2d6:	0f 92       	push	r0
     2d8:	8f 93       	push	r24
     2da:	9f 93       	push	r25
     2dc:	ef 93       	push	r30
     2de:	ff 93       	push	r31
     2e0:	80 91 ce 00 	lds	r24, 0x00CE
     2e4:	80 93 28 03 	sts	0x0328, r24
     2e8:	8d 30       	cpi	r24, 0x0D	; 13
     2ea:	79 f4       	brne	.+30     	; 0x30a <__vector_28+0x40>
     2ec:	80 91 1f 03 	lds	r24, 0x031F
     2f0:	81 30       	cpi	r24, 0x01	; 1
     2f2:	19 f5       	brne	.+70     	; 0x33a <__vector_28+0x70>
     2f4:	80 93 1e 03 	sts	0x031E, r24
     2f8:	10 92 1f 03 	sts	0x031F, r1
     2fc:	e0 91 1c 03 	lds	r30, 0x031C
     300:	f0 e0       	ldi	r31, 0x00	; 0
     302:	e7 5d       	subi	r30, 0xD7	; 215
     304:	fc 4f       	sbci	r31, 0xFC	; 252
     306:	10 82       	st	Z, r1
     308:	18 c0       	rjmp	.+48     	; 0x33a <__vector_28+0x70>
     30a:	90 91 1f 03 	lds	r25, 0x031F
     30e:	91 30       	cpi	r25, 0x01	; 1
     310:	59 f4       	brne	.+22     	; 0x328 <__vector_28+0x5e>
     312:	90 91 1c 03 	lds	r25, 0x031C
     316:	e9 2f       	mov	r30, r25
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	e7 5d       	subi	r30, 0xD7	; 215
     31c:	fc 4f       	sbci	r31, 0xFC	; 252
     31e:	80 83       	st	Z, r24
     320:	9f 5f       	subi	r25, 0xFF	; 255
     322:	90 93 1c 03 	sts	0x031C, r25
     326:	09 c0       	rjmp	.+18     	; 0x33a <__vector_28+0x70>
     328:	8a 30       	cpi	r24, 0x0A	; 10
     32a:	39 f4       	brne	.+14     	; 0x33a <__vector_28+0x70>
     32c:	91 11       	cpse	r25, r1
     32e:	05 c0       	rjmp	.+10     	; 0x33a <__vector_28+0x70>
     330:	81 e0       	ldi	r24, 0x01	; 1
     332:	80 93 1f 03 	sts	0x031F, r24
     336:	10 92 1c 03 	sts	0x031C, r1
     33a:	ff 91       	pop	r31
     33c:	ef 91       	pop	r30
     33e:	9f 91       	pop	r25
     340:	8f 91       	pop	r24
     342:	0f 90       	pop	r0
     344:	0b be       	out	0x3b, r0	; 59
     346:	0f 90       	pop	r0
     348:	0f be       	out	0x3f, r0	; 63
     34a:	0f 90       	pop	r0
     34c:	1f 90       	pop	r1
     34e:	18 95       	reti

00000350 <Init_ADC>:
     350:	87 e8       	ldi	r24, 0x87	; 135
     352:	80 93 7a 00 	sts	0x007A, r24
     356:	80 e4       	ldi	r24, 0x40	; 64
     358:	80 93 7c 00 	sts	0x007C, r24
     35c:	08 95       	ret

0000035e <Input_Current>:
     35e:	af 92       	push	r10
     360:	bf 92       	push	r11
     362:	cf 92       	push	r12
     364:	df 92       	push	r13
     366:	ef 92       	push	r14
     368:	ff 92       	push	r15
     36a:	0f 93       	push	r16
     36c:	1f 93       	push	r17
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	c8 5c       	subi	r28, 0xC8	; 200
     378:	d1 09       	sbc	r29, r1
     37a:	0f b6       	in	r0, 0x3f	; 63
     37c:	f8 94       	cli
     37e:	de bf       	out	0x3e, r29	; 62
     380:	0f be       	out	0x3f, r0	; 63
     382:	cd bf       	out	0x3d, r28	; 61
     384:	be 01       	movw	r22, r28
     386:	6f 5f       	subi	r22, 0xFF	; 255
     388:	7f 4f       	sbci	r23, 0xFF	; 255
     38a:	ae 01       	movw	r20, r28
     38c:	47 53       	subi	r20, 0x37	; 55
     38e:	5f 4f       	sbci	r21, 0xFF	; 255
     390:	ea e7       	ldi	r30, 0x7A	; 122
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	28 e7       	ldi	r18, 0x78	; 120
     396:	30 e0       	ldi	r19, 0x00	; 0
     398:	85 e8       	ldi	r24, 0x85	; 133
     39a:	8a 95       	dec	r24
     39c:	f1 f7       	brne	.-4      	; 0x39a <Input_Current+0x3c>
     39e:	00 00       	nop
     3a0:	80 81       	ld	r24, Z
     3a2:	80 64       	ori	r24, 0x40	; 64
     3a4:	80 83       	st	Z, r24
     3a6:	80 81       	ld	r24, Z
     3a8:	84 ff       	sbrs	r24, 4
     3aa:	fd cf       	rjmp	.-6      	; 0x3a6 <Input_Current+0x48>
     3ac:	80 81       	ld	r24, Z
     3ae:	80 61       	ori	r24, 0x10	; 16
     3b0:	80 83       	st	Z, r24
     3b2:	d9 01       	movw	r26, r18
     3b4:	8d 91       	ld	r24, X+
     3b6:	9c 91       	ld	r25, X
     3b8:	db 01       	movw	r26, r22
     3ba:	8d 93       	st	X+, r24
     3bc:	9d 93       	st	X+, r25
     3be:	bd 01       	movw	r22, r26
     3c0:	a4 17       	cp	r26, r20
     3c2:	b5 07       	cpc	r27, r21
     3c4:	49 f7       	brne	.-46     	; 0x398 <Input_Current+0x3a>
     3c6:	63 e6       	ldi	r22, 0x63	; 99
     3c8:	70 e0       	ldi	r23, 0x00	; 0
     3ca:	e1 2c       	mov	r14, r1
     3cc:	f1 2c       	mov	r15, r1
     3ce:	a1 2c       	mov	r10, r1
     3d0:	34 c0       	rjmp	.+104    	; 0x43a <Input_Current+0xdc>
     3d2:	8e 2d       	mov	r24, r14
     3d4:	9f 2d       	mov	r25, r15
     3d6:	ba 2c       	mov	r11, r10
     3d8:	fc 01       	movw	r30, r24
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	cc 24       	eor	r12, r12
     3e0:	c3 94       	inc	r12
     3e2:	d1 2c       	mov	r13, r1
     3e4:	cc 0e       	add	r12, r28
     3e6:	dd 1e       	adc	r13, r29
     3e8:	ec 0d       	add	r30, r12
     3ea:	fd 1d       	adc	r31, r13
     3ec:	00 81       	ld	r16, Z
     3ee:	11 81       	ldd	r17, Z+1	; 0x01
     3f0:	9c 01       	movw	r18, r24
     3f2:	2f 5f       	subi	r18, 0xFF	; 255
     3f4:	3f 4f       	sbci	r19, 0xFF	; 255
     3f6:	f9 01       	movw	r30, r18
     3f8:	ee 0f       	add	r30, r30
     3fa:	ff 1f       	adc	r31, r31
     3fc:	ec 0d       	add	r30, r12
     3fe:	fd 1d       	adc	r31, r13
     400:	01 90       	ld	r0, Z+
     402:	f0 81       	ld	r31, Z
     404:	e0 2d       	mov	r30, r0
     406:	0e 17       	cp	r16, r30
     408:	1f 07       	cpc	r17, r31
     40a:	70 f0       	brcs	.+28     	; 0x428 <Input_Current+0xca>
     40c:	88 0f       	add	r24, r24
     40e:	99 1f       	adc	r25, r25
     410:	8c 0d       	add	r24, r12
     412:	9d 1d       	adc	r25, r13
     414:	dc 01       	movw	r26, r24
     416:	ed 93       	st	X+, r30
     418:	fc 93       	st	X, r31
     41a:	22 0f       	add	r18, r18
     41c:	33 1f       	adc	r19, r19
     41e:	f6 01       	movw	r30, r12
     420:	e2 0f       	add	r30, r18
     422:	f3 1f       	adc	r31, r19
     424:	11 83       	std	Z+1, r17	; 0x01
     426:	00 83       	st	Z, r16
     428:	b3 94       	inc	r11
     42a:	8b 2d       	mov	r24, r11
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	84 17       	cp	r24, r20
     430:	95 07       	cpc	r25, r21
     432:	94 f2       	brlt	.-92     	; 0x3d8 <Input_Current+0x7a>
     434:	61 50       	subi	r22, 0x01	; 1
     436:	71 09       	sbc	r23, r1
     438:	29 f0       	breq	.+10     	; 0x444 <Input_Current+0xe6>
     43a:	ab 01       	movw	r20, r22
     43c:	16 16       	cp	r1, r22
     43e:	17 06       	cpc	r1, r23
     440:	44 f2       	brlt	.-112    	; 0x3d2 <Input_Current+0x74>
     442:	f8 cf       	rjmp	.-16     	; 0x434 <Input_Current+0xd6>
     444:	fe 01       	movw	r30, r28
     446:	e5 5a       	subi	r30, 0xA5	; 165
     448:	ff 4f       	sbci	r31, 0xFF	; 255
     44a:	9e 01       	movw	r18, r28
     44c:	23 59       	subi	r18, 0x93	; 147
     44e:	3f 4f       	sbci	r19, 0xFF	; 255
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	81 91       	ld	r24, Z+
     456:	91 91       	ld	r25, Z+
     458:	68 0f       	add	r22, r24
     45a:	79 1f       	adc	r23, r25
     45c:	e2 17       	cp	r30, r18
     45e:	f3 07       	cpc	r31, r19
     460:	c9 f7       	brne	.-14     	; 0x454 <Input_Current+0xf6>
     462:	07 2e       	mov	r0, r23
     464:	00 0c       	add	r0, r0
     466:	88 0b       	sbc	r24, r24
     468:	99 0b       	sbc	r25, r25
     46a:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__floatsisf>
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	40 e2       	ldi	r20, 0x20	; 32
     474:	51 e4       	ldi	r21, 0x41	; 65
     476:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e8       	ldi	r19, 0x80	; 128
     47e:	45 ee       	ldi	r20, 0xE5	; 229
     480:	53 e4       	ldi	r21, 0x43	; 67
     482:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <__subsf3>
     486:	26 ef       	ldi	r18, 0xF6	; 246
     488:	38 e2       	ldi	r19, 0x28	; 40
     48a:	44 e9       	ldi	r20, 0x94	; 148
     48c:	51 e4       	ldi	r21, 0x41	; 65
     48e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     492:	c8 53       	subi	r28, 0x38	; 56
     494:	df 4f       	sbci	r29, 0xFF	; 255
     496:	0f b6       	in	r0, 0x3f	; 63
     498:	f8 94       	cli
     49a:	de bf       	out	0x3e, r29	; 62
     49c:	0f be       	out	0x3f, r0	; 63
     49e:	cd bf       	out	0x3d, r28	; 61
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	1f 91       	pop	r17
     4a6:	0f 91       	pop	r16
     4a8:	ff 90       	pop	r15
     4aa:	ef 90       	pop	r14
     4ac:	df 90       	pop	r13
     4ae:	cf 90       	pop	r12
     4b0:	bf 90       	pop	r11
     4b2:	af 90       	pop	r10
     4b4:	08 95       	ret

000004b6 <CRC16_2>:

uint16_t CRC16_2(uint8_t* buf, uint8_t len)
{
	uint16_t crc = 0xFFFF;

	for (uint8_t pos = 0; pos < len; pos++)
     4b6:	66 23       	and	r22, r22
     4b8:	19 f1       	breq	.+70     	; 0x500 <CRC16_2+0x4a>
     4ba:	fc 01       	movw	r30, r24
     4bc:	61 50       	subi	r22, 0x01	; 1
     4be:	26 2f       	mov	r18, r22
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	2f 5f       	subi	r18, 0xFF	; 255
     4c4:	3f 4f       	sbci	r19, 0xFF	; 255
     4c6:	ac 01       	movw	r20, r24
     4c8:	42 0f       	add	r20, r18
     4ca:	53 1f       	adc	r21, r19
     4cc:	8f ef       	ldi	r24, 0xFF	; 255
     4ce:	9f ef       	ldi	r25, 0xFF	; 255
	{
		crc ^= (uint16_t)buf[pos];          // XOR byte into least sig. byte of crc
     4d0:	78 e0       	ldi	r23, 0x08	; 8
     4d2:	60 e0       	ldi	r22, 0x00	; 0
     4d4:	21 91       	ld	r18, Z+
     4d6:	82 27       	eor	r24, r18
     4d8:	27 2f       	mov	r18, r23
     4da:	36 2f       	mov	r19, r22

		for (int i = 8; i != 0; i--) {		// Loop over each bit
			if ((crc & 0x0001) != 0) {      // If the LSB is set
     4dc:	80 ff       	sbrs	r24, 0
     4de:	07 c0       	rjmp	.+14     	; 0x4ee <CRC16_2+0x38>
				crc >>= 1;                  // Shift right and XOR 0xA001
     4e0:	96 95       	lsr	r25
     4e2:	87 95       	ror	r24
				crc ^= 0xA001;
     4e4:	a1 e0       	ldi	r26, 0x01	; 1
     4e6:	8a 27       	eor	r24, r26
     4e8:	a0 ea       	ldi	r26, 0xA0	; 160
     4ea:	9a 27       	eor	r25, r26
     4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <CRC16_2+0x3c>
			}
			else                            // Else LSB is not set
			crc >>= 1;						// Just shift right
     4ee:	96 95       	lsr	r25
     4f0:	87 95       	ror	r24
     4f2:	21 50       	subi	r18, 0x01	; 1
     4f4:	31 09       	sbc	r19, r1

	for (uint8_t pos = 0; pos < len; pos++)
	{
		crc ^= (uint16_t)buf[pos];          // XOR byte into least sig. byte of crc

		for (int i = 8; i != 0; i--) {		// Loop over each bit
     4f6:	91 f7       	brne	.-28     	; 0x4dc <CRC16_2+0x26>

uint16_t CRC16_2(uint8_t* buf, uint8_t len)
{
	uint16_t crc = 0xFFFF;

	for (uint8_t pos = 0; pos < len; pos++)
     4f8:	e4 17       	cp	r30, r20
     4fa:	f5 07       	cpc	r31, r21
     4fc:	59 f7       	brne	.-42     	; 0x4d4 <CRC16_2+0x1e>
     4fe:	08 95       	ret
	}
}

uint16_t CRC16_2(uint8_t* buf, uint8_t len)
{
	uint16_t crc = 0xFFFF;
     500:	8f ef       	ldi	r24, 0xFF	; 255
     502:	9f ef       	ldi	r25, 0xFF	; 255
			crc >>= 1;						// Just shift right
		}
	}
	// Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
	return crc;
}
     504:	08 95       	ret

00000506 <Send_Command>:
	
	return New_Frq;
}

void Send_Command(uint8_t* cmd, uint16_t* value, uint8_t read_count)
{
     506:	2f 92       	push	r2
     508:	3f 92       	push	r3
     50a:	4f 92       	push	r4
     50c:	5f 92       	push	r5
     50e:	6f 92       	push	r6
     510:	7f 92       	push	r7
     512:	8f 92       	push	r8
     514:	9f 92       	push	r9
     516:	af 92       	push	r10
     518:	bf 92       	push	r11
     51a:	cf 92       	push	r12
     51c:	df 92       	push	r13
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	00 d0       	rcall	.+0      	; 0x52c <Send_Command+0x26>
     52c:	00 d0       	rcall	.+0      	; 0x52e <Send_Command+0x28>
     52e:	cd b7       	in	r28, 0x3d	; 61
     530:	de b7       	in	r29, 0x3e	; 62
     532:	6c 01       	movw	r12, r24
     534:	7c 83       	std	Y+4, r23	; 0x04
     536:	6b 83       	std	Y+3, r22	; 0x03
     538:	24 2e       	mov	r2, r20
	uint8_t rx_try=9;
	uint16_t crc_sent=0, crc_received=0, crc_calculated=0;
	crc_sent = CRC16_2(cmd,6);
     53a:	66 e0       	ldi	r22, 0x06	; 6
     53c:	bc df       	rcall	.-136    	; 0x4b6 <CRC16_2>
     53e:	8a 83       	std	Y+2, r24	; 0x02
		UART_0_Putc(cmd[2]);
		UART_0_Putc(cmd[3]);
		UART_0_Putc(cmd[4]);
		UART_0_Putc(cmd[5]);
		UART_0_Putc(crc_sent);
		UART_0_Putc(crc_sent>>8);
     540:	99 83       	std	Y+1, r25	; 0x01
     542:	0f 2e       	mov	r0, r31
     544:	f9 e0       	ldi	r31, 0x09	; 9
     546:	3f 2e       	mov	r3, r31
     548:	f0 2d       	mov	r31, r0

		// Start Timer
		skip = 0;
		TCNT1 = 60000;
     54a:	0f 2e       	mov	r0, r31
     54c:	f0 e6       	ldi	r31, 0x60	; 96
     54e:	4f 2e       	mov	r4, r31
     550:	fa ee       	ldi	r31, 0xEA	; 234
     552:	5f 2e       	mov	r5, r31
     554:	f0 2d       	mov	r31, r0
		sbi(TCCR1B,CS12);
     556:	0f 2e       	mov	r0, r31
     558:	f1 e8       	ldi	r31, 0x81	; 129
     55a:	6f 2e       	mov	r6, r31
     55c:	71 2c       	mov	r7, r1
     55e:	f0 2d       	mov	r31, r0
			crc_received = (response[6]<<8) | response[5];
			crc_calculated = CRC16_2(&response,5);
		}
		else
		{
			crc_received = (response[7]<<8) | response[6];
     560:	0f 2e       	mov	r0, r31
     562:	f0 e2       	ldi	r31, 0x20	; 32
     564:	af 2e       	mov	r10, r31
     566:	f3 e0       	ldi	r31, 0x03	; 3
     568:	bf 2e       	mov	r11, r31
     56a:	f0 2d       	mov	r31, r0
     56c:	0f ef       	ldi	r16, 0xFF	; 255
     56e:	02 0d       	add	r16, r2
     570:	10 e0       	ldi	r17, 0x00	; 0
     572:	0f 5d       	subi	r16, 0xDF	; 223
     574:	1c 4f       	sbci	r17, 0xFC	; 252
				if (skip == 1)
				{
					break;
				}
			}
			response[read_byte] = UDR0;
     576:	0f 2e       	mov	r0, r31
     578:	f6 ec       	ldi	r31, 0xC6	; 198
     57a:	8f 2e       	mov	r8, r31
     57c:	91 2c       	mov	r9, r1
     57e:	f0 2d       	mov	r31, r0
	uint8_t rx_try=9;
	uint16_t crc_sent=0, crc_received=0, crc_calculated=0;
	crc_sent = CRC16_2(cmd,6);
	while (rx_try>0)
	{
		UART_0_Putc(cmd[0]);
     580:	d6 01       	movw	r26, r12
     582:	8c 91       	ld	r24, X
     584:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(cmd[1]);
     588:	f6 01       	movw	r30, r12
     58a:	81 81       	ldd	r24, Z+1	; 0x01
     58c:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(cmd[2]);
     590:	d6 01       	movw	r26, r12
     592:	12 96       	adiw	r26, 0x02	; 2
     594:	8c 91       	ld	r24, X
     596:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(cmd[3]);
     59a:	f6 01       	movw	r30, r12
     59c:	83 81       	ldd	r24, Z+3	; 0x03
     59e:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(cmd[4]);
     5a2:	d6 01       	movw	r26, r12
     5a4:	14 96       	adiw	r26, 0x04	; 4
     5a6:	8c 91       	ld	r24, X
     5a8:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(cmd[5]);
     5ac:	f6 01       	movw	r30, r12
     5ae:	85 81       	ldd	r24, Z+5	; 0x05
     5b0:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(crc_sent);
     5b4:	8a 81       	ldd	r24, Y+2	; 0x02
     5b6:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>
		UART_0_Putc(crc_sent>>8);
     5ba:	89 81       	ldd	r24, Y+1	; 0x01
     5bc:	0e 94 c5 0b 	call	0x178a	; 0x178a <UART_0_Putc>

		// Start Timer
		skip = 0;
     5c0:	10 92 1d 03 	sts	0x031D, r1
		TCNT1 = 60000;
     5c4:	a4 e8       	ldi	r26, 0x84	; 132
     5c6:	b0 e0       	ldi	r27, 0x00	; 0
     5c8:	11 96       	adiw	r26, 0x01	; 1
     5ca:	5c 92       	st	X, r5
     5cc:	4e 92       	st	-X, r4
		sbi(TCCR1B,CS12);
     5ce:	f3 01       	movw	r30, r6
     5d0:	80 81       	ld	r24, Z
     5d2:	84 60       	ori	r24, 0x04	; 4
     5d4:	80 83       	st	Z, r24
		
		//Response Read
		for( uint8_t read_byte=0; read_byte<read_count; read_byte++)
     5d6:	21 10       	cpse	r2, r1
     5d8:	0a c0       	rjmp	.+20     	; 0x5ee <Send_Command+0xe8>
     5da:	23 c0       	rjmp	.+70     	; 0x622 <Send_Command+0x11c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5dc:	8a e1       	ldi	r24, 0x1A	; 26
     5de:	8a 95       	dec	r24
     5e0:	f1 f7       	brne	.-4      	; 0x5de <Send_Command+0xd8>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <Send_Command+0xde>
		{
			while ( !(UCSR0A & (1<<RXC0)) )
			{
				_delay_us(10);
				if (skip == 1)
     5e4:	80 91 1d 03 	lds	r24, 0x031D
     5e8:	81 30       	cpi	r24, 0x01	; 1
     5ea:	11 f4       	brne	.+4      	; 0x5f0 <Send_Command+0xea>
     5ec:	06 c0       	rjmp	.+12     	; 0x5fa <Send_Command+0xf4>
     5ee:	f5 01       	movw	r30, r10
		sbi(TCCR1B,CS12);
		
		//Response Read
		for( uint8_t read_byte=0; read_byte<read_count; read_byte++)
		{
			while ( !(UCSR0A & (1<<RXC0)) )
     5f0:	a0 ec       	ldi	r26, 0xC0	; 192
     5f2:	b0 e0       	ldi	r27, 0x00	; 0
     5f4:	8c 91       	ld	r24, X
     5f6:	88 23       	and	r24, r24
     5f8:	8c f7       	brge	.-30     	; 0x5dc <Send_Command+0xd6>
				if (skip == 1)
				{
					break;
				}
			}
			response[read_byte] = UDR0;
     5fa:	d4 01       	movw	r26, r8
     5fc:	8c 91       	ld	r24, X
     5fe:	81 93       	st	Z+, r24
		skip = 0;
		TCNT1 = 60000;
		sbi(TCCR1B,CS12);
		
		//Response Read
		for( uint8_t read_byte=0; read_byte<read_count; read_byte++)
     600:	e0 17       	cp	r30, r16
     602:	f1 07       	cpc	r31, r17
     604:	a9 f7       	brne	.-22     	; 0x5f0 <Send_Command+0xea>
				}
			}
			response[read_byte] = UDR0;
		}
		
		if (read_count == read)
     606:	b7 e0       	ldi	r27, 0x07	; 7
     608:	2b 12       	cpse	r2, r27
     60a:	0b c0       	rjmp	.+22     	; 0x622 <Send_Command+0x11c>
		{
			crc_received = (response[6]<<8) | response[5];
     60c:	f5 01       	movw	r30, r10
     60e:	e6 80       	ldd	r14, Z+6	; 0x06
     610:	f1 2c       	mov	r15, r1
     612:	fe 2c       	mov	r15, r14
     614:	ee 24       	eor	r14, r14
     616:	85 81       	ldd	r24, Z+5	; 0x05
     618:	e8 2a       	or	r14, r24
			crc_calculated = CRC16_2(&response,5);
     61a:	65 e0       	ldi	r22, 0x05	; 5
     61c:	c5 01       	movw	r24, r10
     61e:	4b df       	rcall	.-362    	; 0x4b6 <CRC16_2>
     620:	0d c0       	rjmp	.+26     	; 0x63c <Send_Command+0x136>
		}
		else
		{
			crc_received = (response[7]<<8) | response[6];
     622:	d5 01       	movw	r26, r10
     624:	17 96       	adiw	r26, 0x07	; 7
     626:	ec 90       	ld	r14, X
     628:	17 97       	sbiw	r26, 0x07	; 7
     62a:	f1 2c       	mov	r15, r1
     62c:	fe 2c       	mov	r15, r14
     62e:	ee 24       	eor	r14, r14
     630:	16 96       	adiw	r26, 0x06	; 6
     632:	8c 91       	ld	r24, X
     634:	e8 2a       	or	r14, r24
			crc_calculated = CRC16_2(&response,6);
     636:	66 e0       	ldi	r22, 0x06	; 6
     638:	c5 01       	movw	r24, r10
     63a:	3d df       	rcall	.-390    	; 0x4b6 <CRC16_2>
		}
		
		if ( crc_calculated == crc_received)
     63c:	8e 15       	cp	r24, r14
     63e:	9f 05       	cpc	r25, r15
     640:	19 f0       	breq	.+6      	; 0x648 <Send_Command+0x142>
     642:	3a 94       	dec	r3
void Send_Command(uint8_t* cmd, uint16_t* value, uint8_t read_count)
{
	uint8_t rx_try=9;
	uint16_t crc_sent=0, crc_received=0, crc_calculated=0;
	crc_sent = CRC16_2(cmd,6);
	while (rx_try>0)
     644:	31 10       	cpse	r3, r1
     646:	9c cf       	rjmp	.-200    	; 0x580 <Send_Command+0x7a>
		
		rx_try--;
		
	}
	
	if (read_count == read)
     648:	b7 e0       	ldi	r27, 0x07	; 7
     64a:	2b 12       	cpse	r2, r27
     64c:	0d c0       	rjmp	.+26     	; 0x668 <Send_Command+0x162>
	{
		*value = response[4] + response[3]*256;
     64e:	e0 e2       	ldi	r30, 0x20	; 32
     650:	f3 e0       	ldi	r31, 0x03	; 3
     652:	24 81       	ldd	r18, Z+4	; 0x04
     654:	83 81       	ldd	r24, Z+3	; 0x03
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	98 2f       	mov	r25, r24
     65a:	88 27       	eor	r24, r24
     65c:	82 0f       	add	r24, r18
     65e:	91 1d       	adc	r25, r1
     660:	eb 81       	ldd	r30, Y+3	; 0x03
     662:	fc 81       	ldd	r31, Y+4	; 0x04
     664:	91 83       	std	Z+1, r25	; 0x01
     666:	80 83       	st	Z, r24
	}
}
     668:	0f 90       	pop	r0
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	1f 91       	pop	r17
     676:	0f 91       	pop	r16
     678:	ff 90       	pop	r15
     67a:	ef 90       	pop	r14
     67c:	df 90       	pop	r13
     67e:	cf 90       	pop	r12
     680:	bf 90       	pop	r11
     682:	af 90       	pop	r10
     684:	9f 90       	pop	r9
     686:	8f 90       	pop	r8
     688:	7f 90       	pop	r7
     68a:	6f 90       	pop	r6
     68c:	5f 90       	pop	r5
     68e:	4f 90       	pop	r4
     690:	3f 90       	pop	r3
     692:	2f 90       	pop	r2
     694:	08 95       	ret

00000696 <main>:
void Send_Command(uint8_t *cmd, uint16_t *value, uint8_t read_count);
void Init_ADC();
double Input_Current();

int main(void)
{
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	cd b7       	in	r28, 0x3d	; 61
     69c:	de b7       	in	r29, 0x3e	; 62
     69e:	cc 5c       	subi	r28, 0xCC	; 204
     6a0:	d1 09       	sbc	r29, r1
     6a2:	0f b6       	in	r0, 0x3f	; 63
     6a4:	f8 94       	cli
     6a6:	de bf       	out	0x3e, r29	; 62
     6a8:	0f be       	out	0x3f, r0	; 63
     6aa:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6ac:	2f ef       	ldi	r18, 0xFF	; 255
     6ae:	80 e7       	ldi	r24, 0x70	; 112
     6b0:	92 e0       	ldi	r25, 0x02	; 2
     6b2:	21 50       	subi	r18, 0x01	; 1
     6b4:	80 40       	sbci	r24, 0x00	; 0
     6b6:	90 40       	sbci	r25, 0x00	; 0
     6b8:	e1 f7       	brne	.-8      	; 0x6b2 <main+0x1c>
     6ba:	00 c0       	rjmp	.+0      	; 0x6bc <main+0x26>
     6bc:	00 00       	nop
	
	// To stabilize the Oscillator
	_delay_ms(100);
	
	// Port Declaration
	DDRB = 0x00;
     6be:	14 b8       	out	0x04, r1	; 4
	DDRD  = 0x0A;
     6c0:	8a e0       	ldi	r24, 0x0A	; 10
     6c2:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0xFF ;
     6c4:	8f ef       	ldi	r24, 0xFF	; 255
     6c6:	8b b9       	out	0x0b, r24	; 11
	DIDR0= 0xFF;
     6c8:	80 93 7e 00 	sts	0x007E, r24
	DDRA = 0xF0;
     6cc:	80 ef       	ldi	r24, 0xF0	; 240
     6ce:	81 b9       	out	0x01, r24	; 1

	cbi(PORTA,4);
     6d0:	14 98       	cbi	0x02, 4	; 2
	// InItilize UART Baud=9600,8 bit, 1 Stop bit, No Parity
	UART_0_Init();
     6d2:	0e 94 b5 0b 	call	0x176a	; 0x176a <UART_0_Init>
	UART_1_Init();
     6d6:	0e 94 cd 0b 	call	0x179a	; 0x179a <UART_1_Init>
	LCDinit();
     6da:	91 dd       	rcall	.-1246   	; 0x1fe <LCDinit>
	LCDcustom();
     6dc:	e0 dd       	rcall	.-1088   	; 0x29e <LCDcustom>
	Init_ADC();
     6de:	38 de       	rcall	.-912    	; 0x350 <Init_ADC>
     6e0:	ef e1       	ldi	r30, 0x1F	; 31
     6e2:	fe e4       	ldi	r31, 0x4E	; 78
     6e4:	31 97       	sbiw	r30, 0x01	; 1
     6e6:	f1 f7       	brne	.-4      	; 0x6e4 <main+0x4e>
     6e8:	00 c0       	rjmp	.+0      	; 0x6ea <main+0x54>
     6ea:	00 00       	nop
	
	LCDclr; _delay_ms(10);
	LCDhome(); _delay_ms(10);
     6ec:	b9 dd       	rcall	.-1166   	; 0x260 <LCDhome>
     6ee:	8f e1       	ldi	r24, 0x1F	; 31
     6f0:	9e e4       	ldi	r25, 0x4E	; 78
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	f1 f7       	brne	.-4      	; 0x6f2 <main+0x5c>
     6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <main+0x62>
     6f8:	00 00       	nop
	LCDGotoXY(0,0); _delay_ms(10);
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	80 e0       	ldi	r24, 0x00	; 0
     6fe:	c1 dd       	rcall	.-1150   	; 0x282 <LCDGotoXY>
     700:	ef e1       	ldi	r30, 0x1F	; 31
     702:	fe e4       	ldi	r31, 0x4E	; 78
     704:	31 97       	sbiw	r30, 0x01	; 1
     706:	f1 f7       	brne	.-4      	; 0x704 <main+0x6e>
     708:	00 c0       	rjmp	.+0      	; 0x70a <main+0x74>
     70a:	00 00       	nop
	LCDstring("  ecoZen        ",16); _delay_ms(10);
     70c:	60 e1       	ldi	r22, 0x10	; 16
     70e:	87 e7       	ldi	r24, 0x77	; 119
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	a9 dd       	rcall	.-1198   	; 0x266 <LCDstring>
     714:	8f e1       	ldi	r24, 0x1F	; 31
     716:	9e e4       	ldi	r25, 0x4E	; 78
     718:	01 97       	sbiw	r24, 0x01	; 1
     71a:	f1 f7       	brne	.-4      	; 0x718 <main+0x82>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <main+0x88>
     71e:	00 00       	nop
	LCDGotoXY(0,1); _delay_ms(10);
     720:	61 e0       	ldi	r22, 0x01	; 1
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	ae dd       	rcall	.-1188   	; 0x282 <LCDGotoXY>
     726:	ef e1       	ldi	r30, 0x1F	; 31
     728:	fe e4       	ldi	r31, 0x4E	; 78
     72a:	31 97       	sbiw	r30, 0x01	; 1
     72c:	f1 f7       	brne	.-4      	; 0x72a <main+0x94>
     72e:	00 c0       	rjmp	.+0      	; 0x730 <main+0x9a>
     730:	00 00       	nop
	LCDstring("    Solutions   ",16); _delay_ms(10);
     732:	60 e1       	ldi	r22, 0x10	; 16
     734:	88 e8       	ldi	r24, 0x88	; 136
     736:	91 e0       	ldi	r25, 0x01	; 1
     738:	96 dd       	rcall	.-1236   	; 0x266 <LCDstring>
     73a:	8f e1       	ldi	r24, 0x1F	; 31
     73c:	9e e4       	ldi	r25, 0x4E	; 78
     73e:	01 97       	sbiw	r24, 0x01	; 1
     740:	f1 f7       	brne	.-4      	; 0x73e <main+0xa8>
     742:	00 c0       	rjmp	.+0      	; 0x744 <main+0xae>
     744:	00 00       	nop
     746:	ef ec       	ldi	r30, 0xCF	; 207
     748:	f7 e0       	ldi	r31, 0x07	; 7
     74a:	31 97       	sbiw	r30, 0x01	; 1
     74c:	f1 f7       	brne	.-4      	; 0x74a <main+0xb4>
     74e:	00 c0       	rjmp	.+0      	; 0x750 <main+0xba>
     750:	00 00       	nop
	
	// Enable Timer Interrupt
	_delay_ms(1);
	sbi(TIMSK1,TOIE1);
     752:	ef e6       	ldi	r30, 0x6F	; 111
     754:	f0 e0       	ldi	r31, 0x00	; 0
     756:	80 81       	ld	r24, Z
     758:	81 60       	ori	r24, 0x01	; 1
     75a:	80 83       	st	Z, r24
     75c:	8f ec       	ldi	r24, 0xCF	; 207
     75e:	97 e0       	ldi	r25, 0x07	; 7
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <main+0xca>
     764:	00 c0       	rjmp	.+0      	; 0x766 <main+0xd0>
     766:	00 00       	nop

int main(void)
{
	char SmS_ShutOff,signal_strength,signal_status,user[30];
	uint8_t i=0;
	char initial[]={'0','0','0'};
     768:	20 e3       	ldi	r18, 0x30	; 48
     76a:	90 e3       	ldi	r25, 0x30	; 48
	//  Waiting for getting initial data (SMS off)
	i = 0;
	while(!(initial[0]==0x0D && initial[1]==0x0A && initial[2]==0x0A)){
		initial[0] = initial[1];
		initial[1] = initial[2];
		while (!(UCSR1A & (1<<RXC1)));
     76c:	e8 ec       	ldi	r30, 0xC8	; 200
     76e:	f0 e0       	ldi	r31, 0x00	; 0
		initial[2] = UDR1;
     770:	ae ec       	ldi	r26, 0xCE	; 206
     772:	b0 e0       	ldi	r27, 0x00	; 0
     774:	02 c0       	rjmp	.+4      	; 0x77a <main+0xe4>
void Send_Command(uint8_t *cmd, uint16_t *value, uint8_t read_count);
void Init_ADC();
double Input_Current();

int main(void)
{
     776:	29 2f       	mov	r18, r25
     778:	98 2f       	mov	r25, r24
	//  Waiting for getting initial data (SMS off)
	i = 0;
	while(!(initial[0]==0x0D && initial[1]==0x0A && initial[2]==0x0A)){
		initial[0] = initial[1];
		initial[1] = initial[2];
		while (!(UCSR1A & (1<<RXC1)));
     77a:	80 81       	ld	r24, Z
     77c:	88 23       	and	r24, r24
     77e:	ec f7       	brge	.-6      	; 0x77a <main+0xe4>
		initial[2] = UDR1;
     780:	8c 91       	ld	r24, X
	sbi(TIMSK1,TOIE1);
	_delay_ms(1);
	
	//  Waiting for getting initial data (SMS off)
	i = 0;
	while(!(initial[0]==0x0D && initial[1]==0x0A && initial[2]==0x0A)){
     782:	2d 30       	cpi	r18, 0x0D	; 13
     784:	c1 f7       	brne	.-16     	; 0x776 <main+0xe0>
     786:	9a 30       	cpi	r25, 0x0A	; 10
     788:	b1 f7       	brne	.-20     	; 0x776 <main+0xe0>
     78a:	8a 30       	cpi	r24, 0x0A	; 10
     78c:	a1 f7       	brne	.-24     	; 0x776 <main+0xe0>
		initial[0] = initial[1];
		initial[1] = initial[2];
		while (!(UCSR1A & (1<<RXC1)));
		initial[2] = UDR1;
	}
	while (!(UCSR1A & (1<<RXC1)));
     78e:	e8 ec       	ldi	r30, 0xC8	; 200
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	80 81       	ld	r24, Z
     794:	88 23       	and	r24, r24
     796:	ec f7       	brge	.-6      	; 0x792 <main+0xfc>
	com_data[0] = UDR1;
     798:	80 91 ce 00 	lds	r24, 0x00CE
     79c:	09 e2       	ldi	r16, 0x29	; 41
     79e:	13 e0       	ldi	r17, 0x03	; 3
     7a0:	f8 01       	movw	r30, r16
     7a2:	80 83       	st	Z, r24
	
	UART_1_Putc('*');
     7a4:	8a e2       	ldi	r24, 0x2A	; 42
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <UART_1_Putc>
	
	//  Enabling interrupts
	sei();
     7ac:	78 94       	sei
	
	// Initializing data
	SmS_ShutOff=com_data[0];
     7ae:	f8 01       	movw	r30, r16
     7b0:	30 80       	ld	r3, Z
	signal_status='1';
	signal_strength='0';
	com_data[1]='1';
     7b2:	81 e3       	ldi	r24, 0x31	; 49
     7b4:	81 83       	std	Z+1, r24	; 0x01
	com_data[2]='0';
     7b6:	80 e3       	ldi	r24, 0x30	; 48
     7b8:	82 83       	std	Z+2, r24	; 0x02
     7ba:	ff ef       	ldi	r31, 0xFF	; 255
     7bc:	21 e1       	ldi	r18, 0x11	; 17
     7be:	8a e7       	ldi	r24, 0x7A	; 122
     7c0:	f1 50       	subi	r31, 0x01	; 1
     7c2:	20 40       	sbci	r18, 0x00	; 0
     7c4:	80 40       	sbci	r24, 0x00	; 0
     7c6:	e1 f7       	brne	.-8      	; 0x7c0 <main+0x12a>
     7c8:	00 c0       	rjmp	.+0      	; 0x7ca <main+0x134>
     7ca:	00 00       	nop
	
	_delay_ms(5000);
	
	//Define variables
	uint8_t Dry_Run=0,toggle=0, DryRunCount=0, NoFault=1, MotorSwitch=0, MotorSwitchCount=0, uv=0, firsttime=1,flag_show=0,str_n=0;
	uint16_t DCV=0,OPW=0,OVO=0,OCU=0,FL1=0,FL2=0,FRQ=0,FRQ_previous=0,Dummy=0,FRQ_Write=0;
     7cc:	18 a2       	std	Y+32, r1	; 0x20
     7ce:	1f 8e       	std	Y+31, r1	; 0x1f
     7d0:	1a a2       	std	Y+34, r1	; 0x22
     7d2:	19 a2       	std	Y+33, r1	; 0x21
     7d4:	1c a2       	std	Y+36, r1	; 0x24
     7d6:	1b a2       	std	Y+35, r1	; 0x23
     7d8:	1e a2       	std	Y+38, r1	; 0x26
     7da:	1d a2       	std	Y+37, r1	; 0x25
     7dc:	18 a6       	std	Y+40, r1	; 0x28
     7de:	1f a2       	std	Y+39, r1	; 0x27
     7e0:	1a a6       	std	Y+42, r1	; 0x2a
     7e2:	19 a6       	std	Y+41, r1	; 0x29
     7e4:	1c a6       	std	Y+44, r1	; 0x2c
     7e6:	1b a6       	std	Y+43, r1	; 0x2b
     7e8:	1e a6       	std	Y+46, r1	; 0x2e
     7ea:	1d a6       	std	Y+45, r1	; 0x2d
	char ch1[6],ch2[6],ch3[6],ch4[6],ch5[6],ch6[16],ch7[16],ch8[8], ch9[6],ch10[6],ch11[6],ch12[6],ch13[6];
	double Frequency=0.0, I_current=0.0, VOC=0.0, FRQ_Float=0.0, OPW_Float=0.0, OCU_Float=0.0, New_FRQ=0.0, delta_i=0.0, delta_v=0.0, delta_i_v=0.0;
	
	//Read Commands
	uint8_t DCV_Read_CMD[]={0x01,0x03,0x00,0x6A,0x00,0x01};		// DC Bus Voltage
     7ec:	86 e0       	ldi	r24, 0x06	; 6
     7ee:	e1 e0       	ldi	r30, 0x01	; 1
     7f0:	f1 e0       	ldi	r31, 0x01	; 1
     7f2:	de 01       	movw	r26, r28
     7f4:	a3 57       	subi	r26, 0x73	; 115
     7f6:	bf 4f       	sbci	r27, 0xFF	; 255
     7f8:	01 90       	ld	r0, Z+
     7fa:	0d 92       	st	X+, r0
     7fc:	8a 95       	dec	r24
     7fe:	e1 f7       	brne	.-8      	; 0x7f8 <main+0x162>
	uint8_t FRQ_Read_CMD[]={0x01,0x03,0x00,0x66,0x00,0x01};		// Frequency
     800:	86 e0       	ldi	r24, 0x06	; 6
     802:	e7 e0       	ldi	r30, 0x07	; 7
     804:	f1 e0       	ldi	r31, 0x01	; 1
     806:	de 01       	movw	r26, r28
     808:	ad 56       	subi	r26, 0x6D	; 109
     80a:	bf 4f       	sbci	r27, 0xFF	; 255
     80c:	01 90       	ld	r0, Z+
     80e:	0d 92       	st	X+, r0
     810:	8a 95       	dec	r24
     812:	e1 f7       	brne	.-8      	; 0x80c <main+0x176>
	uint8_t OPW_Read_CMD[]={0x01,0x03,0x00,0x69,0x00,0x01};		// Output Power
     814:	86 e0       	ldi	r24, 0x06	; 6
     816:	ed e0       	ldi	r30, 0x0D	; 13
     818:	f1 e0       	ldi	r31, 0x01	; 1
     81a:	de 01       	movw	r26, r28
     81c:	a7 56       	subi	r26, 0x67	; 103
     81e:	bf 4f       	sbci	r27, 0xFF	; 255
     820:	01 90       	ld	r0, Z+
     822:	0d 92       	st	X+, r0
     824:	8a 95       	dec	r24
     826:	e1 f7       	brne	.-8      	; 0x820 <main+0x18a>
	uint8_t OCU_Read_CMD[]={0x01,0x03,0x00,0x67,0x00,0x01};		// Output Current
     828:	86 e0       	ldi	r24, 0x06	; 6
     82a:	e3 e1       	ldi	r30, 0x13	; 19
     82c:	f1 e0       	ldi	r31, 0x01	; 1
     82e:	de 01       	movw	r26, r28
     830:	a1 56       	subi	r26, 0x61	; 97
     832:	bf 4f       	sbci	r27, 0xFF	; 255
     834:	01 90       	ld	r0, Z+
     836:	0d 92       	st	X+, r0
     838:	8a 95       	dec	r24
     83a:	e1 f7       	brne	.-8      	; 0x834 <main+0x19e>
	uint8_t OVO_Read_CMD[]={0x01,0x03,0x00,0x6C,0x00,0x01};		// Output Voltage
     83c:	86 e0       	ldi	r24, 0x06	; 6
     83e:	e9 e1       	ldi	r30, 0x19	; 25
     840:	f1 e0       	ldi	r31, 0x01	; 1
     842:	de 01       	movw	r26, r28
     844:	ab 55       	subi	r26, 0x5B	; 91
     846:	bf 4f       	sbci	r27, 0xFF	; 255
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <main+0x1b2>
	uint8_t FL1_Read_CMD[]={0x01,0x03,0x01,0x30,0x00,0x01};		// Fault Register 1
     850:	86 e0       	ldi	r24, 0x06	; 6
     852:	ef e1       	ldi	r30, 0x1F	; 31
     854:	f1 e0       	ldi	r31, 0x01	; 1
     856:	de 01       	movw	r26, r28
     858:	a5 55       	subi	r26, 0x55	; 85
     85a:	bf 4f       	sbci	r27, 0xFF	; 255
     85c:	01 90       	ld	r0, Z+
     85e:	0d 92       	st	X+, r0
     860:	8a 95       	dec	r24
     862:	e1 f7       	brne	.-8      	; 0x85c <main+0x1c6>
	uint8_t FL2_Read_CMD[]={0x01,0x03,0x01,0x31,0x00,0x01};		// Fault Register 2
     864:	86 e0       	ldi	r24, 0x06	; 6
     866:	e5 e2       	ldi	r30, 0x25	; 37
     868:	f1 e0       	ldi	r31, 0x01	; 1
     86a:	de 01       	movw	r26, r28
     86c:	af 54       	subi	r26, 0x4F	; 79
     86e:	bf 4f       	sbci	r27, 0xFF	; 255
     870:	01 90       	ld	r0, Z+
     872:	0d 92       	st	X+, r0
     874:	8a 95       	dec	r24
     876:	e1 f7       	brne	.-8      	; 0x870 <main+0x1da>
	uint8_t DIP_Read_CMD[]={0x01,0x03,0x00,0x03,0x00,0x01};		// Digital Input Terminal
	
	// write Commands
	uint8_t FRQ_Write_CMD[]={0x01,0x06,0x00,0x01,0x1F,0x40};	// Frequency write in REF 1
	uint8_t SRT_Write_CMD[]={0x01,0x06,0x00,0x00,0xFF,0xFF};	// Start Motor
     878:	86 e0       	ldi	r24, 0x06	; 6
     87a:	eb e2       	ldi	r30, 0x2B	; 43
     87c:	f1 e0       	ldi	r31, 0x01	; 1
     87e:	de 01       	movw	r26, r28
     880:	a9 54       	subi	r26, 0x49	; 73
     882:	bf 4f       	sbci	r27, 0xFF	; 255
     884:	01 90       	ld	r0, Z+
     886:	0d 92       	st	X+, r0
     888:	8a 95       	dec	r24
     88a:	e1 f7       	brne	.-8      	; 0x884 <main+0x1ee>
	uint8_t STP_Write_CMD[]={0x01,0x06,0x00,0x00,0xFF,0xF0};	// Stop Motor
     88c:	86 e0       	ldi	r24, 0x06	; 6
     88e:	e1 e3       	ldi	r30, 0x31	; 49
     890:	f1 e0       	ldi	r31, 0x01	; 1
     892:	de 01       	movw	r26, r28
     894:	a3 54       	subi	r26, 0x43	; 67
     896:	bf 4f       	sbci	r27, 0xFF	; 255
     898:	01 90       	ld	r0, Z+
     89a:	0d 92       	st	X+, r0
     89c:	8a 95       	dec	r24
     89e:	e1 f7       	brne	.-8      	; 0x898 <main+0x202>
	
	Frequency=10.0;
	
	
	Send_Command(&SRT_Write_CMD,&Dummy,write);
     8a0:	48 e0       	ldi	r20, 0x08	; 8
     8a2:	be 01       	movw	r22, r28
     8a4:	63 5d       	subi	r22, 0xD3	; 211
     8a6:	7f 4f       	sbci	r23, 0xFF	; 255
     8a8:	ce 01       	movw	r24, r28
     8aa:	89 54       	subi	r24, 0x49	; 73
     8ac:	9f 4f       	sbci	r25, 0xFF	; 255
     8ae:	2b de       	rcall	.-938    	; 0x506 <Send_Command>
	
	
	_delay_ms(5000);
	
	//Define variables
	uint8_t Dry_Run=0,toggle=0, DryRunCount=0, NoFault=1, MotorSwitch=0, MotorSwitchCount=0, uv=0, firsttime=1,flag_show=0,str_n=0;
     8b0:	c4 53       	subi	r28, 0x34	; 52
     8b2:	df 4f       	sbci	r29, 0xFF	; 255
     8b4:	18 82       	st	Y, r1
     8b6:	cc 5c       	subi	r28, 0xCC	; 204
     8b8:	d0 40       	sbci	r29, 0x00	; 0
     8ba:	22 24       	eor	r2, r2
     8bc:	23 94       	inc	r2
     8be:	c8 53       	subi	r28, 0x38	; 56
     8c0:	df 4f       	sbci	r29, 0xFF	; 255
     8c2:	18 82       	st	Y, r1
     8c4:	c8 5c       	subi	r28, 0xC8	; 200
     8c6:	d0 40       	sbci	r29, 0x00	; 0
     8c8:	cd 53       	subi	r28, 0x3D	; 61
     8ca:	df 4f       	sbci	r29, 0xFF	; 255
     8cc:	18 82       	st	Y, r1
     8ce:	c3 5c       	subi	r28, 0xC3	; 195
     8d0:	d0 40       	sbci	r29, 0x00	; 0
     8d2:	c5 53       	subi	r28, 0x35	; 53
     8d4:	df 4f       	sbci	r29, 0xFF	; 255
     8d6:	18 82       	st	Y, r1
     8d8:	cb 5c       	subi	r28, 0xCB	; 203
     8da:	d0 40       	sbci	r29, 0x00	; 0
	//  Enabling interrupts
	sei();
	
	// Initializing data
	SmS_ShutOff=com_data[0];
	signal_status='1';
     8dc:	91 e3       	ldi	r25, 0x31	; 49
     8de:	c6 53       	subi	r28, 0x36	; 54
     8e0:	df 4f       	sbci	r29, 0xFF	; 255
     8e2:	98 83       	st	Y, r25
     8e4:	ca 5c       	subi	r28, 0xCA	; 202
     8e6:	d0 40       	sbci	r29, 0x00	; 0
	signal_strength='0';
     8e8:	e0 e3       	ldi	r30, 0x30	; 48
     8ea:	c7 53       	subi	r28, 0x37	; 55
     8ec:	df 4f       	sbci	r29, 0xFF	; 255
     8ee:	e8 83       	st	Y, r30
     8f0:	c9 5c       	subi	r28, 0xC9	; 201
     8f2:	d0 40       	sbci	r29, 0x00	; 0
     8f4:	ff ef       	ldi	r31, 0xFF	; 255
     8f6:	22 e5       	ldi	r18, 0x52	; 82
     8f8:	87 e0       	ldi	r24, 0x07	; 7
     8fa:	f1 50       	subi	r31, 0x01	; 1
     8fc:	20 40       	sbci	r18, 0x00	; 0
     8fe:	80 40       	sbci	r24, 0x00	; 0
     900:	e1 f7       	brne	.-8      	; 0x8fa <main+0x264>
     902:	00 c0       	rjmp	.+0      	; 0x904 <main+0x26e>
     904:	00 00       	nop
	while(1)
	{
		
		_delay_ms(300);
		//Read Output Frequency
		Send_Command(&FRQ_Read_CMD,&FRQ,read);
     906:	47 e0       	ldi	r20, 0x07	; 7
     908:	be 01       	movw	r22, r28
     90a:	65 5d       	subi	r22, 0xD5	; 213
     90c:	7f 4f       	sbci	r23, 0xFF	; 255
     90e:	ce 01       	movw	r24, r28
     910:	8d 56       	subi	r24, 0x6D	; 109
     912:	9f 4f       	sbci	r25, 0xFF	; 255
     914:	f8 dd       	rcall	.-1040   	; 0x506 <Send_Command>
		//Read Output Voltage
		Send_Command(&OVO_Read_CMD,&OVO,read);
     916:	47 e0       	ldi	r20, 0x07	; 7
     918:	be 01       	movw	r22, r28
     91a:	6d 5d       	subi	r22, 0xDD	; 221
     91c:	7f 4f       	sbci	r23, 0xFF	; 255
     91e:	ce 01       	movw	r24, r28
     920:	8b 55       	subi	r24, 0x5B	; 91
     922:	9f 4f       	sbci	r25, 0xFF	; 255
     924:	f0 dd       	rcall	.-1056   	; 0x506 <Send_Command>
		//Read Output Power
		Send_Command(&OPW_Read_CMD,&OPW,read);
     926:	47 e0       	ldi	r20, 0x07	; 7
     928:	be 01       	movw	r22, r28
     92a:	6f 5d       	subi	r22, 0xDF	; 223
     92c:	7f 4f       	sbci	r23, 0xFF	; 255
     92e:	ce 01       	movw	r24, r28
     930:	87 56       	subi	r24, 0x67	; 103
     932:	9f 4f       	sbci	r25, 0xFF	; 255
     934:	e8 dd       	rcall	.-1072   	; 0x506 <Send_Command>
		//Read Output Current
		Send_Command(&OCU_Read_CMD,&OCU,read);
     936:	47 e0       	ldi	r20, 0x07	; 7
     938:	be 01       	movw	r22, r28
     93a:	6b 5d       	subi	r22, 0xDB	; 219
     93c:	7f 4f       	sbci	r23, 0xFF	; 255
     93e:	ce 01       	movw	r24, r28
     940:	81 56       	subi	r24, 0x61	; 97
     942:	9f 4f       	sbci	r25, 0xFF	; 255
     944:	e0 dd       	rcall	.-1088   	; 0x506 <Send_Command>
		//Read Fault 1
		Send_Command(&FL1_Read_CMD,&FL1,read);
     946:	47 e0       	ldi	r20, 0x07	; 7
     948:	be 01       	movw	r22, r28
     94a:	69 5d       	subi	r22, 0xD9	; 217
     94c:	7f 4f       	sbci	r23, 0xFF	; 255
     94e:	ce 01       	movw	r24, r28
     950:	85 55       	subi	r24, 0x55	; 85
     952:	9f 4f       	sbci	r25, 0xFF	; 255
     954:	d8 dd       	rcall	.-1104   	; 0x506 <Send_Command>
		//Read Fault 2
		Send_Command(&FL2_Read_CMD,&FL2,read);
     956:	47 e0       	ldi	r20, 0x07	; 7
     958:	be 01       	movw	r22, r28
     95a:	67 5d       	subi	r22, 0xD7	; 215
     95c:	7f 4f       	sbci	r23, 0xFF	; 255
     95e:	ce 01       	movw	r24, r28
     960:	8f 54       	subi	r24, 0x4F	; 79
     962:	9f 4f       	sbci	r25, 0xFF	; 255
     964:	d0 dd       	rcall	.-1120   	; 0x506 <Send_Command>
		//Read DC bus Voltage
		Send_Command(&DCV_Read_CMD,&DCV,read);
     966:	47 e0       	ldi	r20, 0x07	; 7
     968:	be 01       	movw	r22, r28
     96a:	61 5e       	subi	r22, 0xE1	; 225
     96c:	7f 4f       	sbci	r23, 0xFF	; 255
     96e:	ce 01       	movw	r24, r28
     970:	83 57       	subi	r24, 0x73	; 115
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	c8 dd       	rcall	.-1136   	; 0x506 <Send_Command>
		//Input Current
		I_current=Input_Current();
     976:	f3 dc       	rcall	.-1562   	; 0x35e <Input_Current>
     978:	cc 53       	subi	r28, 0x3C	; 60
     97a:	df 4f       	sbci	r29, 0xFF	; 255
     97c:	68 83       	st	Y, r22
     97e:	79 83       	std	Y+1, r23	; 0x01
     980:	8a 83       	std	Y+2, r24	; 0x02
     982:	9b 83       	std	Y+3, r25	; 0x03
     984:	c4 5c       	subi	r28, 0xC4	; 196
     986:	d0 40       	sbci	r29, 0x00	; 0
		
		//Int to float
		FRQ_Float = (double)FRQ/10.0;
     988:	6b a5       	ldd	r22, Y+43	; 0x2b
     98a:	7c a5       	ldd	r23, Y+44	; 0x2c
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	f7 d7       	rcall	.+4078   	; 0x1980 <__floatunsisf>
     992:	20 e0       	ldi	r18, 0x00	; 0
     994:	30 e0       	ldi	r19, 0x00	; 0
     996:	40 e2       	ldi	r20, 0x20	; 32
     998:	51 e4       	ldi	r21, 0x41	; 65
     99a:	8a d7       	rcall	.+3860   	; 0x18b0 <__divsf3>
     99c:	2b 01       	movw	r4, r22
     99e:	3c 01       	movw	r6, r24
		OPW_Float = (double)OPW/10.0;
     9a0:	69 a1       	ldd	r22, Y+33	; 0x21
     9a2:	7a a1       	ldd	r23, Y+34	; 0x22
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	eb d7       	rcall	.+4054   	; 0x1980 <__floatunsisf>
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	40 e2       	ldi	r20, 0x20	; 32
     9b0:	51 e4       	ldi	r21, 0x41	; 65
     9b2:	7e d7       	rcall	.+3836   	; 0x18b0 <__divsf3>
     9b4:	4b 01       	movw	r8, r22
     9b6:	5c 01       	movw	r10, r24
		OCU_Float = (double)OCU/10.0;
     9b8:	6d a1       	ldd	r22, Y+37	; 0x25
     9ba:	7e a1       	ldd	r23, Y+38	; 0x26
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	df d7       	rcall	.+4030   	; 0x1980 <__floatunsisf>
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	40 e2       	ldi	r20, 0x20	; 32
     9c8:	51 e4       	ldi	r21, 0x41	; 65
     9ca:	72 d7       	rcall	.+3812   	; 0x18b0 <__divsf3>
     9cc:	6b 01       	movw	r12, r22
     9ce:	7c 01       	movw	r14, r24
		
		// Convert Values to ASCII
		itoa(DCV,ch1,10);
     9d0:	4a e0       	ldi	r20, 0x0A	; 10
     9d2:	50 e0       	ldi	r21, 0x00	; 0
     9d4:	be 01       	movw	r22, r28
     9d6:	61 5d       	subi	r22, 0xD1	; 209
     9d8:	7f 4f       	sbci	r23, 0xFF	; 255
     9da:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9dc:	98 a1       	ldd	r25, Y+32	; 0x20
     9de:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <itoa>
		dtostrf(FRQ_Float,3,1,ch2);
     9e2:	8e 01       	movw	r16, r28
     9e4:	0b 5c       	subi	r16, 0xCB	; 203
     9e6:	1f 4f       	sbci	r17, 0xFF	; 255
     9e8:	21 e0       	ldi	r18, 0x01	; 1
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	43 e0       	ldi	r20, 0x03	; 3
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	c3 01       	movw	r24, r6
     9f2:	b2 01       	movw	r22, r4
     9f4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		dtostrf(OPW_Float,3,2,ch4);
     9f8:	04 5f       	subi	r16, 0xF4	; 244
     9fa:	1f 4f       	sbci	r17, 0xFF	; 255
     9fc:	22 e0       	ldi	r18, 0x02	; 2
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	43 e0       	ldi	r20, 0x03	; 3
     a02:	50 e0       	ldi	r21, 0x00	; 0
     a04:	c5 01       	movw	r24, r10
     a06:	b4 01       	movw	r22, r8
     a08:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		dtostrf(OCU_Float,3,1,ch5);
     a0c:	0a 5f       	subi	r16, 0xFA	; 250
     a0e:	1f 4f       	sbci	r17, 0xFF	; 255
     a10:	21 e0       	ldi	r18, 0x01	; 1
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	43 e0       	ldi	r20, 0x03	; 3
     a16:	50 e0       	ldi	r21, 0x00	; 0
     a18:	c7 01       	movw	r24, r14
     a1a:	b6 01       	movw	r22, r12
     a1c:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		itoa(OVO,ch3,10);
     a20:	4a e0       	ldi	r20, 0x0A	; 10
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	be 01       	movw	r22, r28
     a26:	65 5c       	subi	r22, 0xC5	; 197
     a28:	7f 4f       	sbci	r23, 0xFF	; 255
     a2a:	8b a1       	ldd	r24, Y+35	; 0x23
     a2c:	9c a1       	ldd	r25, Y+36	; 0x24
     a2e:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <itoa>
		itoa(FL1,ch6,2);
     a32:	42 e0       	ldi	r20, 0x02	; 2
     a34:	50 e0       	ldi	r21, 0x00	; 0
     a36:	be 01       	movw	r22, r28
     a38:	63 5b       	subi	r22, 0xB3	; 179
     a3a:	7f 4f       	sbci	r23, 0xFF	; 255
     a3c:	8f a1       	ldd	r24, Y+39	; 0x27
     a3e:	98 a5       	ldd	r25, Y+40	; 0x28
     a40:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <itoa>
		itoa(FL2,ch7,2);
     a44:	42 e0       	ldi	r20, 0x02	; 2
     a46:	50 e0       	ldi	r21, 0x00	; 0
     a48:	be 01       	movw	r22, r28
     a4a:	63 5a       	subi	r22, 0xA3	; 163
     a4c:	7f 4f       	sbci	r23, 0xFF	; 255
     a4e:	89 a5       	ldd	r24, Y+41	; 0x29
     a50:	9a a5       	ldd	r25, Y+42	; 0x2a
     a52:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <itoa>
		dtostrf(I_current,3,2,ch8);
     a56:	0a 5d       	subi	r16, 0xDA	; 218
     a58:	1f 4f       	sbci	r17, 0xFF	; 255
     a5a:	22 e0       	ldi	r18, 0x02	; 2
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	43 e0       	ldi	r20, 0x03	; 3
     a60:	50 e0       	ldi	r21, 0x00	; 0
     a62:	cc 53       	subi	r28, 0x3C	; 60
     a64:	df 4f       	sbci	r29, 0xFF	; 255
     a66:	68 81       	ld	r22, Y
     a68:	79 81       	ldd	r23, Y+1	; 0x01
     a6a:	8a 81       	ldd	r24, Y+2	; 0x02
     a6c:	9b 81       	ldd	r25, Y+3	; 0x03
     a6e:	c4 5c       	subi	r28, 0xC4	; 196
     a70:	d0 40       	sbci	r29, 0x00	; 0
     a72:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		
		dtostrf(delta_i,6,3,ch9);
     a76:	08 5f       	subi	r16, 0xF8	; 248
     a78:	1f 4f       	sbci	r17, 0xFF	; 255
     a7a:	23 e0       	ldi	r18, 0x03	; 3
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	46 e0       	ldi	r20, 0x06	; 6
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	60 e0       	ldi	r22, 0x00	; 0
     a84:	70 e0       	ldi	r23, 0x00	; 0
     a86:	cb 01       	movw	r24, r22
     a88:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		dtostrf(delta_v,6,0,ch10);
     a8c:	0a 5f       	subi	r16, 0xFA	; 250
     a8e:	1f 4f       	sbci	r17, 0xFF	; 255
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	46 e0       	ldi	r20, 0x06	; 6
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	cb 01       	movw	r24, r22
     a9e:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		dtostrf(delta_i_v,6,3,ch11);
     aa2:	0a 5f       	subi	r16, 0xFA	; 250
     aa4:	1f 4f       	sbci	r17, 0xFF	; 255
     aa6:	23 e0       	ldi	r18, 0x03	; 3
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	46 e0       	ldi	r20, 0x06	; 6
     aac:	50 e0       	ldi	r21, 0x00	; 0
     aae:	60 e0       	ldi	r22, 0x00	; 0
     ab0:	70 e0       	ldi	r23, 0x00	; 0
     ab2:	cb 01       	movw	r24, r22
     ab4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		dtostrf(Frequency*10,3,0,ch12);
     ab8:	0a 5f       	subi	r16, 0xFA	; 250
     aba:	1f 4f       	sbci	r17, 0xFF	; 255
     abc:	20 e0       	ldi	r18, 0x00	; 0
     abe:	30 e0       	ldi	r19, 0x00	; 0
     ac0:	43 e0       	ldi	r20, 0x03	; 3
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	60 e0       	ldi	r22, 0x00	; 0
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	88 ec       	ldi	r24, 0xC8	; 200
     aca:	92 e4       	ldi	r25, 0x42	; 66
     acc:	0e 94 75 0d 	call	0x1aea	; 0x1aea <dtostrf>
		
		// LCD Display
		if (NoFault){   
     ad0:	22 20       	and	r2, r2
     ad2:	09 f4       	brne	.+2      	; 0xad6 <main+0x440>
     ad4:	de c2       	rjmp	.+1468   	; 0x1092 <main+0x9fc>
			if (toggle==0)
     ad6:	cd 53       	subi	r28, 0x3D	; 61
     ad8:	df 4f       	sbci	r29, 0xFF	; 255
     ada:	98 81       	ld	r25, Y
     adc:	c3 5c       	subi	r28, 0xC3	; 195
     ade:	d0 40       	sbci	r29, 0x00	; 0
     ae0:	91 11       	cpse	r25, r1
     ae2:	61 c0       	rjmp	.+194    	; 0xba6 <main+0x510>
			{
				LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     ae4:	ba db       	rcall	.-2188   	; 0x25a <LCDclr>
     ae6:	ef e1       	ldi	r30, 0x1F	; 31
     ae8:	fe e4       	ldi	r31, 0x4E	; 78
     aea:	31 97       	sbiw	r30, 0x01	; 1
     aec:	f1 f7       	brne	.-4      	; 0xaea <main+0x454>
     aee:	00 c0       	rjmp	.+0      	; 0xaf0 <main+0x45a>
     af0:	00 00       	nop
     af2:	b6 db       	rcall	.-2196   	; 0x260 <LCDhome>
     af4:	8f e1       	ldi	r24, 0x1F	; 31
     af6:	9e e4       	ldi	r25, 0x4E	; 78
     af8:	01 97       	sbiw	r24, 0x01	; 1
     afa:	f1 f7       	brne	.-4      	; 0xaf8 <main+0x462>
     afc:	00 c0       	rjmp	.+0      	; 0xafe <main+0x468>
     afe:	00 00       	nop
				LCDGotoXY(0,0); _delay_ms(10);	LCDstring("FREQUENCY   ",12);  _delay_ms(10);	LCDGotoXY(12,0); _delay_ms(10); LCDstring(ch2,4); _delay_ms(10);
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	be db       	rcall	.-2180   	; 0x282 <LCDGotoXY>
     b06:	ef e1       	ldi	r30, 0x1F	; 31
     b08:	fe e4       	ldi	r31, 0x4E	; 78
     b0a:	31 97       	sbiw	r30, 0x01	; 1
     b0c:	f1 f7       	brne	.-4      	; 0xb0a <main+0x474>
     b0e:	00 c0       	rjmp	.+0      	; 0xb10 <main+0x47a>
     b10:	00 00       	nop
     b12:	6c e0       	ldi	r22, 0x0C	; 12
     b14:	89 e9       	ldi	r24, 0x99	; 153
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	a6 db       	rcall	.-2228   	; 0x266 <LCDstring>
     b1a:	8f e1       	ldi	r24, 0x1F	; 31
     b1c:	9e e4       	ldi	r25, 0x4E	; 78
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	f1 f7       	brne	.-4      	; 0xb1e <main+0x488>
     b22:	00 c0       	rjmp	.+0      	; 0xb24 <main+0x48e>
     b24:	00 00       	nop
     b26:	60 e0       	ldi	r22, 0x00	; 0
     b28:	8c e0       	ldi	r24, 0x0C	; 12
     b2a:	ab db       	rcall	.-2218   	; 0x282 <LCDGotoXY>
     b2c:	ef e1       	ldi	r30, 0x1F	; 31
     b2e:	fe e4       	ldi	r31, 0x4E	; 78
     b30:	31 97       	sbiw	r30, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <main+0x49a>
     b34:	00 c0       	rjmp	.+0      	; 0xb36 <main+0x4a0>
     b36:	00 00       	nop
     b38:	64 e0       	ldi	r22, 0x04	; 4
     b3a:	ce 01       	movw	r24, r28
     b3c:	c5 96       	adiw	r24, 0x35	; 53
     b3e:	93 db       	rcall	.-2266   	; 0x266 <LCDstring>
     b40:	8f e1       	ldi	r24, 0x1F	; 31
     b42:	9e e4       	ldi	r25, 0x4E	; 78
     b44:	01 97       	sbiw	r24, 0x01	; 1
     b46:	f1 f7       	brne	.-4      	; 0xb44 <main+0x4ae>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <main+0x4b4>
     b4a:	00 00       	nop
				LCDGotoXY(0,1); _delay_ms(10);	LCDstring("DC VOLTAGE   ",13); _delay_ms(10);	LCDGotoXY(13,1); _delay_ms(10); LCDstring(ch1,3); _delay_ms(10);
     b4c:	61 e0       	ldi	r22, 0x01	; 1
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	98 db       	rcall	.-2256   	; 0x282 <LCDGotoXY>
     b52:	ef e1       	ldi	r30, 0x1F	; 31
     b54:	fe e4       	ldi	r31, 0x4E	; 78
     b56:	31 97       	sbiw	r30, 0x01	; 1
     b58:	f1 f7       	brne	.-4      	; 0xb56 <main+0x4c0>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <main+0x4c6>
     b5c:	00 00       	nop
     b5e:	6d e0       	ldi	r22, 0x0D	; 13
     b60:	86 ea       	ldi	r24, 0xA6	; 166
     b62:	91 e0       	ldi	r25, 0x01	; 1
     b64:	80 db       	rcall	.-2304   	; 0x266 <LCDstring>
     b66:	8f e1       	ldi	r24, 0x1F	; 31
     b68:	9e e4       	ldi	r25, 0x4E	; 78
     b6a:	01 97       	sbiw	r24, 0x01	; 1
     b6c:	f1 f7       	brne	.-4      	; 0xb6a <main+0x4d4>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <main+0x4da>
     b70:	00 00       	nop
     b72:	61 e0       	ldi	r22, 0x01	; 1
     b74:	8d e0       	ldi	r24, 0x0D	; 13
     b76:	85 db       	rcall	.-2294   	; 0x282 <LCDGotoXY>
     b78:	ef e1       	ldi	r30, 0x1F	; 31
     b7a:	fe e4       	ldi	r31, 0x4E	; 78
     b7c:	31 97       	sbiw	r30, 0x01	; 1
     b7e:	f1 f7       	brne	.-4      	; 0xb7c <main+0x4e6>
     b80:	00 c0       	rjmp	.+0      	; 0xb82 <main+0x4ec>
     b82:	00 00       	nop
     b84:	63 e0       	ldi	r22, 0x03	; 3
     b86:	ce 01       	movw	r24, r28
     b88:	8f 96       	adiw	r24, 0x2f	; 47
     b8a:	6d db       	rcall	.-2342   	; 0x266 <LCDstring>
     b8c:	8f e1       	ldi	r24, 0x1F	; 31
     b8e:	9e e4       	ldi	r25, 0x4E	; 78
     b90:	01 97       	sbiw	r24, 0x01	; 1
     b92:	f1 f7       	brne	.-4      	; 0xb90 <main+0x4fa>
     b94:	00 c0       	rjmp	.+0      	; 0xb96 <main+0x500>
     b96:	00 00       	nop
				toggle=(toggle+1)%5;
     b98:	91 e0       	ldi	r25, 0x01	; 1
     b9a:	cd 53       	subi	r28, 0x3D	; 61
     b9c:	df 4f       	sbci	r29, 0xFF	; 255
     b9e:	98 83       	st	Y, r25
     ba0:	c3 5c       	subi	r28, 0xC3	; 195
     ba2:	d0 40       	sbci	r29, 0x00	; 0
     ba4:	76 c2       	rjmp	.+1260   	; 0x1092 <main+0x9fc>
			}
			else if (toggle<2 && toggle>0)
     ba6:	cd 53       	subi	r28, 0x3D	; 61
     ba8:	df 4f       	sbci	r29, 0xFF	; 255
     baa:	e8 81       	ld	r30, Y
     bac:	c3 5c       	subi	r28, 0xC3	; 195
     bae:	d0 40       	sbci	r29, 0x00	; 0
     bb0:	e1 30       	cpi	r30, 0x01	; 1
     bb2:	69 f5       	brne	.+90     	; 0xc0e <main+0x578>
			{
				LCDGotoXY(12,0); _delay_ms(10); LCDstring(ch2,4); _delay_ms(10);
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	8c e0       	ldi	r24, 0x0C	; 12
     bb8:	64 db       	rcall	.-2360   	; 0x282 <LCDGotoXY>
     bba:	8f e1       	ldi	r24, 0x1F	; 31
     bbc:	9e e4       	ldi	r25, 0x4E	; 78
     bbe:	01 97       	sbiw	r24, 0x01	; 1
     bc0:	f1 f7       	brne	.-4      	; 0xbbe <main+0x528>
     bc2:	00 c0       	rjmp	.+0      	; 0xbc4 <main+0x52e>
     bc4:	00 00       	nop
     bc6:	64 e0       	ldi	r22, 0x04	; 4
     bc8:	ce 01       	movw	r24, r28
     bca:	c5 96       	adiw	r24, 0x35	; 53
     bcc:	4c db       	rcall	.-2408   	; 0x266 <LCDstring>
     bce:	ef e1       	ldi	r30, 0x1F	; 31
     bd0:	fe e4       	ldi	r31, 0x4E	; 78
     bd2:	31 97       	sbiw	r30, 0x01	; 1
     bd4:	f1 f7       	brne	.-4      	; 0xbd2 <main+0x53c>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <main+0x542>
     bd8:	00 00       	nop
				LCDGotoXY(13,1); _delay_ms(10); LCDstring(ch1,3); _delay_ms(10);
     bda:	61 e0       	ldi	r22, 0x01	; 1
     bdc:	8d e0       	ldi	r24, 0x0D	; 13
     bde:	51 db       	rcall	.-2398   	; 0x282 <LCDGotoXY>
     be0:	8f e1       	ldi	r24, 0x1F	; 31
     be2:	9e e4       	ldi	r25, 0x4E	; 78
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <main+0x54e>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <main+0x554>
     bea:	00 00       	nop
     bec:	63 e0       	ldi	r22, 0x03	; 3
     bee:	ce 01       	movw	r24, r28
     bf0:	8f 96       	adiw	r24, 0x2f	; 47
     bf2:	39 db       	rcall	.-2446   	; 0x266 <LCDstring>
     bf4:	ef e1       	ldi	r30, 0x1F	; 31
     bf6:	fe e4       	ldi	r31, 0x4E	; 78
     bf8:	31 97       	sbiw	r30, 0x01	; 1
     bfa:	f1 f7       	brne	.-4      	; 0xbf8 <main+0x562>
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <main+0x568>
     bfe:	00 00       	nop
				toggle=(toggle+1)%5;
     c00:	f2 e0       	ldi	r31, 0x02	; 2
     c02:	cd 53       	subi	r28, 0x3D	; 61
     c04:	df 4f       	sbci	r29, 0xFF	; 255
     c06:	f8 83       	st	Y, r31
     c08:	c3 5c       	subi	r28, 0xC3	; 195
     c0a:	d0 40       	sbci	r29, 0x00	; 0
     c0c:	42 c2       	rjmp	.+1156   	; 0x1092 <main+0x9fc>
			}
			else if (toggle==2)
     c0e:	cd 53       	subi	r28, 0x3D	; 61
     c10:	df 4f       	sbci	r29, 0xFF	; 255
     c12:	28 81       	ld	r18, Y
     c14:	c3 5c       	subi	r28, 0xC3	; 195
     c16:	d0 40       	sbci	r29, 0x00	; 0
     c18:	22 30       	cpi	r18, 0x02	; 2
     c1a:	09 f0       	breq	.+2      	; 0xc1e <main+0x588>
     c1c:	63 c0       	rjmp	.+198    	; 0xce4 <main+0x64e>
			{
				LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     c1e:	1d db       	rcall	.-2502   	; 0x25a <LCDclr>
     c20:	8f e1       	ldi	r24, 0x1F	; 31
     c22:	9e e4       	ldi	r25, 0x4E	; 78
     c24:	01 97       	sbiw	r24, 0x01	; 1
     c26:	f1 f7       	brne	.-4      	; 0xc24 <main+0x58e>
     c28:	00 c0       	rjmp	.+0      	; 0xc2a <main+0x594>
     c2a:	00 00       	nop
     c2c:	19 db       	rcall	.-2510   	; 0x260 <LCDhome>
     c2e:	ef e1       	ldi	r30, 0x1F	; 31
     c30:	fe e4       	ldi	r31, 0x4E	; 78
     c32:	31 97       	sbiw	r30, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <main+0x59c>
     c36:	00 c0       	rjmp	.+0      	; 0xc38 <main+0x5a2>
     c38:	00 00       	nop
				LCDGotoXY(0,0); _delay_ms(10);	LCDstring("O/P POWER   ",12); _delay_ms(10);	LCDGotoXY(12,0); _delay_ms(10); LCDstring(ch4,4); _delay_ms(10);
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	21 db       	rcall	.-2494   	; 0x282 <LCDGotoXY>
     c40:	8f e1       	ldi	r24, 0x1F	; 31
     c42:	9e e4       	ldi	r25, 0x4E	; 78
     c44:	01 97       	sbiw	r24, 0x01	; 1
     c46:	f1 f7       	brne	.-4      	; 0xc44 <main+0x5ae>
     c48:	00 c0       	rjmp	.+0      	; 0xc4a <main+0x5b4>
     c4a:	00 00       	nop
     c4c:	6c e0       	ldi	r22, 0x0C	; 12
     c4e:	84 eb       	ldi	r24, 0xB4	; 180
     c50:	91 e0       	ldi	r25, 0x01	; 1
     c52:	09 db       	rcall	.-2542   	; 0x266 <LCDstring>
     c54:	ef e1       	ldi	r30, 0x1F	; 31
     c56:	fe e4       	ldi	r31, 0x4E	; 78
     c58:	31 97       	sbiw	r30, 0x01	; 1
     c5a:	f1 f7       	brne	.-4      	; 0xc58 <main+0x5c2>
     c5c:	00 c0       	rjmp	.+0      	; 0xc5e <main+0x5c8>
     c5e:	00 00       	nop
     c60:	60 e0       	ldi	r22, 0x00	; 0
     c62:	8c e0       	ldi	r24, 0x0C	; 12
     c64:	0e db       	rcall	.-2532   	; 0x282 <LCDGotoXY>
     c66:	8f e1       	ldi	r24, 0x1F	; 31
     c68:	9e e4       	ldi	r25, 0x4E	; 78
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	f1 f7       	brne	.-4      	; 0xc6a <main+0x5d4>
     c6e:	00 c0       	rjmp	.+0      	; 0xc70 <main+0x5da>
     c70:	00 00       	nop
     c72:	64 e0       	ldi	r22, 0x04	; 4
     c74:	ce 01       	movw	r24, r28
     c76:	8f 5b       	subi	r24, 0xBF	; 191
     c78:	9f 4f       	sbci	r25, 0xFF	; 255
     c7a:	f5 da       	rcall	.-2582   	; 0x266 <LCDstring>
     c7c:	ef e1       	ldi	r30, 0x1F	; 31
     c7e:	fe e4       	ldi	r31, 0x4E	; 78
     c80:	31 97       	sbiw	r30, 0x01	; 1
     c82:	f1 f7       	brne	.-4      	; 0xc80 <main+0x5ea>
     c84:	00 c0       	rjmp	.+0      	; 0xc86 <main+0x5f0>
     c86:	00 00       	nop
				LCDGotoXY(0,1); _delay_ms(10);	LCDstring("O/P CURRENT  ",13); _delay_ms(10);	LCDGotoXY(13,1); _delay_ms(10); LCDstring(ch5,3); _delay_ms(10);
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	fa da       	rcall	.-2572   	; 0x282 <LCDGotoXY>
     c8e:	8f e1       	ldi	r24, 0x1F	; 31
     c90:	9e e4       	ldi	r25, 0x4E	; 78
     c92:	01 97       	sbiw	r24, 0x01	; 1
     c94:	f1 f7       	brne	.-4      	; 0xc92 <main+0x5fc>
     c96:	00 c0       	rjmp	.+0      	; 0xc98 <main+0x602>
     c98:	00 00       	nop
     c9a:	6d e0       	ldi	r22, 0x0D	; 13
     c9c:	81 ec       	ldi	r24, 0xC1	; 193
     c9e:	91 e0       	ldi	r25, 0x01	; 1
     ca0:	e2 da       	rcall	.-2620   	; 0x266 <LCDstring>
     ca2:	ef e1       	ldi	r30, 0x1F	; 31
     ca4:	fe e4       	ldi	r31, 0x4E	; 78
     ca6:	31 97       	sbiw	r30, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <main+0x610>
     caa:	00 c0       	rjmp	.+0      	; 0xcac <main+0x616>
     cac:	00 00       	nop
     cae:	61 e0       	ldi	r22, 0x01	; 1
     cb0:	8d e0       	ldi	r24, 0x0D	; 13
     cb2:	e7 da       	rcall	.-2610   	; 0x282 <LCDGotoXY>
     cb4:	8f e1       	ldi	r24, 0x1F	; 31
     cb6:	9e e4       	ldi	r25, 0x4E	; 78
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	f1 f7       	brne	.-4      	; 0xcb8 <main+0x622>
     cbc:	00 c0       	rjmp	.+0      	; 0xcbe <main+0x628>
     cbe:	00 00       	nop
     cc0:	63 e0       	ldi	r22, 0x03	; 3
     cc2:	ce 01       	movw	r24, r28
     cc4:	89 5b       	subi	r24, 0xB9	; 185
     cc6:	9f 4f       	sbci	r25, 0xFF	; 255
     cc8:	ce da       	rcall	.-2660   	; 0x266 <LCDstring>
     cca:	ef e1       	ldi	r30, 0x1F	; 31
     ccc:	fe e4       	ldi	r31, 0x4E	; 78
     cce:	31 97       	sbiw	r30, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <main+0x638>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <main+0x63e>
     cd4:	00 00       	nop
				toggle=(toggle+1)%5;
     cd6:	f3 e0       	ldi	r31, 0x03	; 3
     cd8:	cd 53       	subi	r28, 0x3D	; 61
     cda:	df 4f       	sbci	r29, 0xFF	; 255
     cdc:	f8 83       	st	Y, r31
     cde:	c3 5c       	subi	r28, 0xC3	; 195
     ce0:	d0 40       	sbci	r29, 0x00	; 0
     ce2:	d7 c1       	rjmp	.+942    	; 0x1092 <main+0x9fc>
			}
			else if (toggle<4 && toggle>2){
     ce4:	cd 53       	subi	r28, 0x3D	; 61
     ce6:	df 4f       	sbci	r29, 0xFF	; 255
     ce8:	28 81       	ld	r18, Y
     cea:	c3 5c       	subi	r28, 0xC3	; 195
     cec:	d0 40       	sbci	r29, 0x00	; 0
     cee:	23 30       	cpi	r18, 0x03	; 3
     cf0:	79 f5       	brne	.+94     	; 0xd50 <main+0x6ba>
				LCDGotoXY(12,0); _delay_ms(10); LCDstring(ch4,4); _delay_ms(10);
     cf2:	60 e0       	ldi	r22, 0x00	; 0
     cf4:	8c e0       	ldi	r24, 0x0C	; 12
     cf6:	c5 da       	rcall	.-2678   	; 0x282 <LCDGotoXY>
     cf8:	8f e1       	ldi	r24, 0x1F	; 31
     cfa:	9e e4       	ldi	r25, 0x4E	; 78
     cfc:	01 97       	sbiw	r24, 0x01	; 1
     cfe:	f1 f7       	brne	.-4      	; 0xcfc <main+0x666>
     d00:	00 c0       	rjmp	.+0      	; 0xd02 <main+0x66c>
     d02:	00 00       	nop
     d04:	64 e0       	ldi	r22, 0x04	; 4
     d06:	ce 01       	movw	r24, r28
     d08:	8f 5b       	subi	r24, 0xBF	; 191
     d0a:	9f 4f       	sbci	r25, 0xFF	; 255
     d0c:	ac da       	rcall	.-2728   	; 0x266 <LCDstring>
     d0e:	ef e1       	ldi	r30, 0x1F	; 31
     d10:	fe e4       	ldi	r31, 0x4E	; 78
     d12:	31 97       	sbiw	r30, 0x01	; 1
     d14:	f1 f7       	brne	.-4      	; 0xd12 <main+0x67c>
     d16:	00 c0       	rjmp	.+0      	; 0xd18 <main+0x682>
     d18:	00 00       	nop
				LCDGotoXY(13,1); _delay_ms(10); LCDstring(ch5,3); _delay_ms(10);
     d1a:	61 e0       	ldi	r22, 0x01	; 1
     d1c:	8d e0       	ldi	r24, 0x0D	; 13
     d1e:	b1 da       	rcall	.-2718   	; 0x282 <LCDGotoXY>
     d20:	8f e1       	ldi	r24, 0x1F	; 31
     d22:	9e e4       	ldi	r25, 0x4E	; 78
     d24:	01 97       	sbiw	r24, 0x01	; 1
     d26:	f1 f7       	brne	.-4      	; 0xd24 <main+0x68e>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <main+0x694>
     d2a:	00 00       	nop
     d2c:	63 e0       	ldi	r22, 0x03	; 3
     d2e:	ce 01       	movw	r24, r28
     d30:	89 5b       	subi	r24, 0xB9	; 185
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	98 da       	rcall	.-2768   	; 0x266 <LCDstring>
     d36:	ef e1       	ldi	r30, 0x1F	; 31
     d38:	fe e4       	ldi	r31, 0x4E	; 78
     d3a:	31 97       	sbiw	r30, 0x01	; 1
     d3c:	f1 f7       	brne	.-4      	; 0xd3a <main+0x6a4>
     d3e:	00 c0       	rjmp	.+0      	; 0xd40 <main+0x6aa>
     d40:	00 00       	nop
				toggle=(toggle+1)%5;
     d42:	f4 e0       	ldi	r31, 0x04	; 4
     d44:	cd 53       	subi	r28, 0x3D	; 61
     d46:	df 4f       	sbci	r29, 0xFF	; 255
     d48:	f8 83       	st	Y, r31
     d4a:	c3 5c       	subi	r28, 0xC3	; 195
     d4c:	d0 40       	sbci	r29, 0x00	; 0
     d4e:	a1 c1       	rjmp	.+834    	; 0x1092 <main+0x9fc>
			}
			else if (toggle>=4 && signal_status=='1'){
     d50:	cd 53       	subi	r28, 0x3D	; 61
     d52:	df 4f       	sbci	r29, 0xFF	; 255
     d54:	28 81       	ld	r18, Y
     d56:	c3 5c       	subi	r28, 0xC3	; 195
     d58:	d0 40       	sbci	r29, 0x00	; 0
     d5a:	24 30       	cpi	r18, 0x04	; 4
     d5c:	08 f4       	brcc	.+2      	; 0xd60 <main+0x6ca>
     d5e:	99 c1       	rjmp	.+818    	; 0x1092 <main+0x9fc>
     d60:	c6 53       	subi	r28, 0x36	; 54
     d62:	df 4f       	sbci	r29, 0xFF	; 255
     d64:	88 81       	ld	r24, Y
     d66:	ca 5c       	subi	r28, 0xCA	; 202
     d68:	d0 40       	sbci	r29, 0x00	; 0
     d6a:	81 33       	cpi	r24, 0x31	; 49
     d6c:	09 f0       	breq	.+2      	; 0xd70 <main+0x6da>
     d6e:	45 c0       	rjmp	.+138    	; 0xdfa <main+0x764>
				LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     d70:	74 da       	rcall	.-2840   	; 0x25a <LCDclr>
     d72:	ef e1       	ldi	r30, 0x1F	; 31
     d74:	fe e4       	ldi	r31, 0x4E	; 78
     d76:	31 97       	sbiw	r30, 0x01	; 1
     d78:	f1 f7       	brne	.-4      	; 0xd76 <main+0x6e0>
     d7a:	00 c0       	rjmp	.+0      	; 0xd7c <main+0x6e6>
     d7c:	00 00       	nop
     d7e:	70 da       	rcall	.-2848   	; 0x260 <LCDhome>
     d80:	8f e1       	ldi	r24, 0x1F	; 31
     d82:	9e e4       	ldi	r25, 0x4E	; 78
     d84:	01 97       	sbiw	r24, 0x01	; 1
     d86:	f1 f7       	brne	.-4      	; 0xd84 <main+0x6ee>
     d88:	00 c0       	rjmp	.+0      	; 0xd8a <main+0x6f4>
     d8a:	00 00       	nop
				LCDGotoXY(0,0); _delay_ms(10);	LCDstring(" Searching for  ",16); _delay_ms(10);
     d8c:	60 e0       	ldi	r22, 0x00	; 0
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	78 da       	rcall	.-2832   	; 0x282 <LCDGotoXY>
     d92:	ef e1       	ldi	r30, 0x1F	; 31
     d94:	fe e4       	ldi	r31, 0x4E	; 78
     d96:	31 97       	sbiw	r30, 0x01	; 1
     d98:	f1 f7       	brne	.-4      	; 0xd96 <main+0x700>
     d9a:	00 c0       	rjmp	.+0      	; 0xd9c <main+0x706>
     d9c:	00 00       	nop
     d9e:	60 e1       	ldi	r22, 0x10	; 16
     da0:	8f ec       	ldi	r24, 0xCF	; 207
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	60 da       	rcall	.-2880   	; 0x266 <LCDstring>
     da6:	8f e1       	ldi	r24, 0x1F	; 31
     da8:	9e e4       	ldi	r25, 0x4E	; 78
     daa:	01 97       	sbiw	r24, 0x01	; 1
     dac:	f1 f7       	brne	.-4      	; 0xdaa <main+0x714>
     dae:	00 c0       	rjmp	.+0      	; 0xdb0 <main+0x71a>
     db0:	00 00       	nop
				LCDGotoXY(0,1); _delay_ms(10);	LCDstring("     Network... ",16); _delay_ms(10);
     db2:	61 e0       	ldi	r22, 0x01	; 1
     db4:	80 e0       	ldi	r24, 0x00	; 0
     db6:	65 da       	rcall	.-2870   	; 0x282 <LCDGotoXY>
     db8:	ef e1       	ldi	r30, 0x1F	; 31
     dba:	fe e4       	ldi	r31, 0x4E	; 78
     dbc:	31 97       	sbiw	r30, 0x01	; 1
     dbe:	f1 f7       	brne	.-4      	; 0xdbc <main+0x726>
     dc0:	00 c0       	rjmp	.+0      	; 0xdc2 <main+0x72c>
     dc2:	00 00       	nop
     dc4:	60 e1       	ldi	r22, 0x10	; 16
     dc6:	80 ee       	ldi	r24, 0xE0	; 224
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	4d da       	rcall	.-2918   	; 0x266 <LCDstring>
     dcc:	8f e1       	ldi	r24, 0x1F	; 31
     dce:	9e e4       	ldi	r25, 0x4E	; 78
     dd0:	01 97       	sbiw	r24, 0x01	; 1
     dd2:	f1 f7       	brne	.-4      	; 0xdd0 <main+0x73a>
     dd4:	00 c0       	rjmp	.+0      	; 0xdd6 <main+0x740>
     dd6:	00 00       	nop
				toggle=(toggle+1)%5;
     dd8:	cd 53       	subi	r28, 0x3D	; 61
     dda:	df 4f       	sbci	r29, 0xFF	; 255
     ddc:	e8 81       	ld	r30, Y
     dde:	c3 5c       	subi	r28, 0xC3	; 195
     de0:	d0 40       	sbci	r29, 0x00	; 0
     de2:	8e 2f       	mov	r24, r30
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	65 e0       	ldi	r22, 0x05	; 5
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	57 d6       	rcall	.+3246   	; 0x1a9c <__divmodhi4>
     dee:	cd 53       	subi	r28, 0x3D	; 61
     df0:	df 4f       	sbci	r29, 0xFF	; 255
     df2:	88 83       	st	Y, r24
     df4:	c3 5c       	subi	r28, 0xC3	; 195
     df6:	d0 40       	sbci	r29, 0x00	; 0
     df8:	4c c1       	rjmp	.+664    	; 0x1092 <main+0x9fc>
			} else if (toggle>=4){
				switch (signal_strength){
     dfa:	c7 53       	subi	r28, 0x37	; 55
     dfc:	df 4f       	sbci	r29, 0xFF	; 255
     dfe:	f8 81       	ld	r31, Y
     e00:	c9 5c       	subi	r28, 0xC9	; 201
     e02:	d0 40       	sbci	r29, 0x00	; 0
     e04:	f1 33       	cpi	r31, 0x31	; 49
     e06:	09 f4       	brne	.+2      	; 0xe0a <main+0x774>
     e08:	47 c0       	rjmp	.+142    	; 0xe98 <main+0x802>
     e0a:	18 f4       	brcc	.+6      	; 0xe12 <main+0x77c>
     e0c:	f0 33       	cpi	r31, 0x30	; 48
     e0e:	69 f0       	breq	.+26     	; 0xe2a <main+0x794>
     e10:	ff c0       	rjmp	.+510    	; 0x1010 <main+0x97a>
     e12:	c7 53       	subi	r28, 0x37	; 55
     e14:	df 4f       	sbci	r29, 0xFF	; 255
     e16:	28 81       	ld	r18, Y
     e18:	c9 5c       	subi	r28, 0xC9	; 201
     e1a:	d0 40       	sbci	r29, 0x00	; 0
     e1c:	22 33       	cpi	r18, 0x32	; 50
     e1e:	09 f4       	brne	.+2      	; 0xe22 <main+0x78c>
     e20:	7a c0       	rjmp	.+244    	; 0xf16 <main+0x880>
     e22:	23 33       	cpi	r18, 0x33	; 51
     e24:	09 f4       	brne	.+2      	; 0xe28 <main+0x792>
     e26:	b6 c0       	rjmp	.+364    	; 0xf94 <main+0x8fe>
     e28:	f3 c0       	rjmp	.+486    	; 0x1010 <main+0x97a>
					case '0':
					LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     e2a:	17 da       	rcall	.-3026   	; 0x25a <LCDclr>
     e2c:	8f e1       	ldi	r24, 0x1F	; 31
     e2e:	9e e4       	ldi	r25, 0x4E	; 78
     e30:	01 97       	sbiw	r24, 0x01	; 1
     e32:	f1 f7       	brne	.-4      	; 0xe30 <main+0x79a>
     e34:	00 c0       	rjmp	.+0      	; 0xe36 <main+0x7a0>
     e36:	00 00       	nop
     e38:	13 da       	rcall	.-3034   	; 0x260 <LCDhome>
     e3a:	ef e1       	ldi	r30, 0x1F	; 31
     e3c:	fe e4       	ldi	r31, 0x4E	; 78
     e3e:	31 97       	sbiw	r30, 0x01	; 1
     e40:	f1 f7       	brne	.-4      	; 0xe3e <main+0x7a8>
     e42:	00 c0       	rjmp	.+0      	; 0xe44 <main+0x7ae>
     e44:	00 00       	nop
					LCDGotoXY(0,0); _delay_ms(10);	LCDsendChar(0);_delay_ms(10);
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	1b da       	rcall	.-3018   	; 0x282 <LCDGotoXY>
     e4c:	8f e1       	ldi	r24, 0x1F	; 31
     e4e:	9e e4       	ldi	r25, 0x4E	; 78
     e50:	01 97       	sbiw	r24, 0x01	; 1
     e52:	f1 f7       	brne	.-4      	; 0xe50 <main+0x7ba>
     e54:	00 c0       	rjmp	.+0      	; 0xe56 <main+0x7c0>
     e56:	00 00       	nop
     e58:	80 e0       	ldi	r24, 0x00	; 0
     e5a:	bd d9       	rcall	.-3206   	; 0x1d6 <LCDsendChar>
     e5c:	ef e1       	ldi	r30, 0x1F	; 31
     e5e:	fe e4       	ldi	r31, 0x4E	; 78
     e60:	31 97       	sbiw	r30, 0x01	; 1
     e62:	f1 f7       	brne	.-4      	; 0xe60 <main+0x7ca>
     e64:	00 c0       	rjmp	.+0      	; 0xe66 <main+0x7d0>
     e66:	00 00       	nop
					LCDGotoXY(4,0); _delay_ms(10);	LCDstring(user,str_n); _delay_ms(10);
     e68:	60 e0       	ldi	r22, 0x00	; 0
     e6a:	84 e0       	ldi	r24, 0x04	; 4
     e6c:	0a da       	rcall	.-3052   	; 0x282 <LCDGotoXY>
     e6e:	8f e1       	ldi	r24, 0x1F	; 31
     e70:	9e e4       	ldi	r25, 0x4E	; 78
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	f1 f7       	brne	.-4      	; 0xe72 <main+0x7dc>
     e76:	00 c0       	rjmp	.+0      	; 0xe78 <main+0x7e2>
     e78:	00 00       	nop
     e7a:	c4 53       	subi	r28, 0x34	; 52
     e7c:	df 4f       	sbci	r29, 0xFF	; 255
     e7e:	68 81       	ld	r22, Y
     e80:	cc 5c       	subi	r28, 0xCC	; 204
     e82:	d0 40       	sbci	r29, 0x00	; 0
     e84:	ce 01       	movw	r24, r28
     e86:	01 96       	adiw	r24, 0x01	; 1
     e88:	ee d9       	rcall	.-3108   	; 0x266 <LCDstring>
     e8a:	ef e1       	ldi	r30, 0x1F	; 31
     e8c:	fe e4       	ldi	r31, 0x4E	; 78
     e8e:	31 97       	sbiw	r30, 0x01	; 1
     e90:	f1 f7       	brne	.-4      	; 0xe8e <main+0x7f8>
     e92:	00 c0       	rjmp	.+0      	; 0xe94 <main+0x7fe>
     e94:	00 00       	nop
     e96:	bc c0       	rjmp	.+376    	; 0x1010 <main+0x97a>
					break;
					
					case '1':
					LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     e98:	e0 d9       	rcall	.-3136   	; 0x25a <LCDclr>
     e9a:	8f e1       	ldi	r24, 0x1F	; 31
     e9c:	9e e4       	ldi	r25, 0x4E	; 78
     e9e:	01 97       	sbiw	r24, 0x01	; 1
     ea0:	f1 f7       	brne	.-4      	; 0xe9e <main+0x808>
     ea2:	00 c0       	rjmp	.+0      	; 0xea4 <main+0x80e>
     ea4:	00 00       	nop
     ea6:	dc d9       	rcall	.-3144   	; 0x260 <LCDhome>
     ea8:	ef e1       	ldi	r30, 0x1F	; 31
     eaa:	fe e4       	ldi	r31, 0x4E	; 78
     eac:	31 97       	sbiw	r30, 0x01	; 1
     eae:	f1 f7       	brne	.-4      	; 0xeac <main+0x816>
     eb0:	00 c0       	rjmp	.+0      	; 0xeb2 <main+0x81c>
     eb2:	00 00       	nop
					LCDGotoXY(0,0); _delay_ms(10);	LCDsendChar(0);_delay_ms(10);LCDsendChar(1);_delay_ms(10);
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	e4 d9       	rcall	.-3128   	; 0x282 <LCDGotoXY>
     eba:	8f e1       	ldi	r24, 0x1F	; 31
     ebc:	9e e4       	ldi	r25, 0x4E	; 78
     ebe:	01 97       	sbiw	r24, 0x01	; 1
     ec0:	f1 f7       	brne	.-4      	; 0xebe <main+0x828>
     ec2:	00 c0       	rjmp	.+0      	; 0xec4 <main+0x82e>
     ec4:	00 00       	nop
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	86 d9       	rcall	.-3316   	; 0x1d6 <LCDsendChar>
     eca:	ef e1       	ldi	r30, 0x1F	; 31
     ecc:	fe e4       	ldi	r31, 0x4E	; 78
     ece:	31 97       	sbiw	r30, 0x01	; 1
     ed0:	f1 f7       	brne	.-4      	; 0xece <main+0x838>
     ed2:	00 c0       	rjmp	.+0      	; 0xed4 <main+0x83e>
     ed4:	00 00       	nop
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	7e d9       	rcall	.-3332   	; 0x1d6 <LCDsendChar>
     eda:	8f e1       	ldi	r24, 0x1F	; 31
     edc:	9e e4       	ldi	r25, 0x4E	; 78
     ede:	01 97       	sbiw	r24, 0x01	; 1
     ee0:	f1 f7       	brne	.-4      	; 0xede <main+0x848>
     ee2:	00 c0       	rjmp	.+0      	; 0xee4 <main+0x84e>
     ee4:	00 00       	nop
					LCDGotoXY(4,0); _delay_ms(10);	LCDstring(user,str_n); _delay_ms(10);
     ee6:	60 e0       	ldi	r22, 0x00	; 0
     ee8:	84 e0       	ldi	r24, 0x04	; 4
     eea:	cb d9       	rcall	.-3178   	; 0x282 <LCDGotoXY>
     eec:	ef e1       	ldi	r30, 0x1F	; 31
     eee:	fe e4       	ldi	r31, 0x4E	; 78
     ef0:	31 97       	sbiw	r30, 0x01	; 1
     ef2:	f1 f7       	brne	.-4      	; 0xef0 <main+0x85a>
     ef4:	00 c0       	rjmp	.+0      	; 0xef6 <main+0x860>
     ef6:	00 00       	nop
     ef8:	c4 53       	subi	r28, 0x34	; 52
     efa:	df 4f       	sbci	r29, 0xFF	; 255
     efc:	68 81       	ld	r22, Y
     efe:	cc 5c       	subi	r28, 0xCC	; 204
     f00:	d0 40       	sbci	r29, 0x00	; 0
     f02:	ce 01       	movw	r24, r28
     f04:	01 96       	adiw	r24, 0x01	; 1
     f06:	af d9       	rcall	.-3234   	; 0x266 <LCDstring>
     f08:	8f e1       	ldi	r24, 0x1F	; 31
     f0a:	9e e4       	ldi	r25, 0x4E	; 78
     f0c:	01 97       	sbiw	r24, 0x01	; 1
     f0e:	f1 f7       	brne	.-4      	; 0xf0c <main+0x876>
     f10:	00 c0       	rjmp	.+0      	; 0xf12 <main+0x87c>
     f12:	00 00       	nop
     f14:	7d c0       	rjmp	.+250    	; 0x1010 <main+0x97a>
					break;
					
					case '2':
					LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     f16:	a1 d9       	rcall	.-3262   	; 0x25a <LCDclr>
     f18:	ef e1       	ldi	r30, 0x1F	; 31
     f1a:	fe e4       	ldi	r31, 0x4E	; 78
     f1c:	31 97       	sbiw	r30, 0x01	; 1
     f1e:	f1 f7       	brne	.-4      	; 0xf1c <main+0x886>
     f20:	00 c0       	rjmp	.+0      	; 0xf22 <main+0x88c>
     f22:	00 00       	nop
     f24:	9d d9       	rcall	.-3270   	; 0x260 <LCDhome>
     f26:	8f e1       	ldi	r24, 0x1F	; 31
     f28:	9e e4       	ldi	r25, 0x4E	; 78
     f2a:	01 97       	sbiw	r24, 0x01	; 1
     f2c:	f1 f7       	brne	.-4      	; 0xf2a <main+0x894>
     f2e:	00 c0       	rjmp	.+0      	; 0xf30 <main+0x89a>
     f30:	00 00       	nop
					LCDGotoXY(0,0); _delay_ms(10);	LCDsendChar(0);_delay_ms(10);LCDsendChar(2);_delay_ms(10);
     f32:	60 e0       	ldi	r22, 0x00	; 0
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	a5 d9       	rcall	.-3254   	; 0x282 <LCDGotoXY>
     f38:	ef e1       	ldi	r30, 0x1F	; 31
     f3a:	fe e4       	ldi	r31, 0x4E	; 78
     f3c:	31 97       	sbiw	r30, 0x01	; 1
     f3e:	f1 f7       	brne	.-4      	; 0xf3c <main+0x8a6>
     f40:	00 c0       	rjmp	.+0      	; 0xf42 <main+0x8ac>
     f42:	00 00       	nop
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	47 d9       	rcall	.-3442   	; 0x1d6 <LCDsendChar>
     f48:	8f e1       	ldi	r24, 0x1F	; 31
     f4a:	9e e4       	ldi	r25, 0x4E	; 78
     f4c:	01 97       	sbiw	r24, 0x01	; 1
     f4e:	f1 f7       	brne	.-4      	; 0xf4c <main+0x8b6>
     f50:	00 c0       	rjmp	.+0      	; 0xf52 <main+0x8bc>
     f52:	00 00       	nop
     f54:	82 e0       	ldi	r24, 0x02	; 2
     f56:	3f d9       	rcall	.-3458   	; 0x1d6 <LCDsendChar>
     f58:	ef e1       	ldi	r30, 0x1F	; 31
     f5a:	fe e4       	ldi	r31, 0x4E	; 78
     f5c:	31 97       	sbiw	r30, 0x01	; 1
     f5e:	f1 f7       	brne	.-4      	; 0xf5c <main+0x8c6>
     f60:	00 c0       	rjmp	.+0      	; 0xf62 <main+0x8cc>
     f62:	00 00       	nop
					LCDGotoXY(4,0); _delay_ms(10);	LCDstring(user,str_n); _delay_ms(10);
     f64:	60 e0       	ldi	r22, 0x00	; 0
     f66:	84 e0       	ldi	r24, 0x04	; 4
     f68:	8c d9       	rcall	.-3304   	; 0x282 <LCDGotoXY>
     f6a:	8f e1       	ldi	r24, 0x1F	; 31
     f6c:	9e e4       	ldi	r25, 0x4E	; 78
     f6e:	01 97       	sbiw	r24, 0x01	; 1
     f70:	f1 f7       	brne	.-4      	; 0xf6e <main+0x8d8>
     f72:	00 c0       	rjmp	.+0      	; 0xf74 <main+0x8de>
     f74:	00 00       	nop
     f76:	c4 53       	subi	r28, 0x34	; 52
     f78:	df 4f       	sbci	r29, 0xFF	; 255
     f7a:	68 81       	ld	r22, Y
     f7c:	cc 5c       	subi	r28, 0xCC	; 204
     f7e:	d0 40       	sbci	r29, 0x00	; 0
     f80:	ce 01       	movw	r24, r28
     f82:	01 96       	adiw	r24, 0x01	; 1
     f84:	70 d9       	rcall	.-3360   	; 0x266 <LCDstring>
     f86:	ef e1       	ldi	r30, 0x1F	; 31
     f88:	fe e4       	ldi	r31, 0x4E	; 78
     f8a:	31 97       	sbiw	r30, 0x01	; 1
     f8c:	f1 f7       	brne	.-4      	; 0xf8a <main+0x8f4>
     f8e:	00 c0       	rjmp	.+0      	; 0xf90 <main+0x8fa>
     f90:	00 00       	nop
     f92:	3e c0       	rjmp	.+124    	; 0x1010 <main+0x97a>
					break;
					
					case '3':
					LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
     f94:	62 d9       	rcall	.-3388   	; 0x25a <LCDclr>
     f96:	8f e1       	ldi	r24, 0x1F	; 31
     f98:	9e e4       	ldi	r25, 0x4E	; 78
     f9a:	01 97       	sbiw	r24, 0x01	; 1
     f9c:	f1 f7       	brne	.-4      	; 0xf9a <main+0x904>
     f9e:	00 c0       	rjmp	.+0      	; 0xfa0 <main+0x90a>
     fa0:	00 00       	nop
     fa2:	5e d9       	rcall	.-3396   	; 0x260 <LCDhome>
     fa4:	ef e1       	ldi	r30, 0x1F	; 31
     fa6:	fe e4       	ldi	r31, 0x4E	; 78
     fa8:	31 97       	sbiw	r30, 0x01	; 1
     faa:	f1 f7       	brne	.-4      	; 0xfa8 <main+0x912>
     fac:	00 c0       	rjmp	.+0      	; 0xfae <main+0x918>
     fae:	00 00       	nop
					LCDGotoXY(0,0); _delay_ms(10);	LCDsendChar(0);_delay_ms(10);LCDsendChar(3);_delay_ms(10);
     fb0:	60 e0       	ldi	r22, 0x00	; 0
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	66 d9       	rcall	.-3380   	; 0x282 <LCDGotoXY>
     fb6:	8f e1       	ldi	r24, 0x1F	; 31
     fb8:	9e e4       	ldi	r25, 0x4E	; 78
     fba:	01 97       	sbiw	r24, 0x01	; 1
     fbc:	f1 f7       	brne	.-4      	; 0xfba <main+0x924>
     fbe:	00 c0       	rjmp	.+0      	; 0xfc0 <main+0x92a>
     fc0:	00 00       	nop
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	08 d9       	rcall	.-3568   	; 0x1d6 <LCDsendChar>
     fc6:	ef e1       	ldi	r30, 0x1F	; 31
     fc8:	fe e4       	ldi	r31, 0x4E	; 78
     fca:	31 97       	sbiw	r30, 0x01	; 1
     fcc:	f1 f7       	brne	.-4      	; 0xfca <main+0x934>
     fce:	00 c0       	rjmp	.+0      	; 0xfd0 <main+0x93a>
     fd0:	00 00       	nop
     fd2:	83 e0       	ldi	r24, 0x03	; 3
     fd4:	00 d9       	rcall	.-3584   	; 0x1d6 <LCDsendChar>
     fd6:	8f e1       	ldi	r24, 0x1F	; 31
     fd8:	9e e4       	ldi	r25, 0x4E	; 78
     fda:	01 97       	sbiw	r24, 0x01	; 1
     fdc:	f1 f7       	brne	.-4      	; 0xfda <main+0x944>
     fde:	00 c0       	rjmp	.+0      	; 0xfe0 <main+0x94a>
     fe0:	00 00       	nop
					LCDGotoXY(4,0); _delay_ms(10);	LCDstring(user,str_n); _delay_ms(10);
     fe2:	60 e0       	ldi	r22, 0x00	; 0
     fe4:	84 e0       	ldi	r24, 0x04	; 4
     fe6:	4d d9       	rcall	.-3430   	; 0x282 <LCDGotoXY>
     fe8:	ef e1       	ldi	r30, 0x1F	; 31
     fea:	fe e4       	ldi	r31, 0x4E	; 78
     fec:	31 97       	sbiw	r30, 0x01	; 1
     fee:	f1 f7       	brne	.-4      	; 0xfec <main+0x956>
     ff0:	00 c0       	rjmp	.+0      	; 0xff2 <main+0x95c>
     ff2:	00 00       	nop
     ff4:	c4 53       	subi	r28, 0x34	; 52
     ff6:	df 4f       	sbci	r29, 0xFF	; 255
     ff8:	68 81       	ld	r22, Y
     ffa:	cc 5c       	subi	r28, 0xCC	; 204
     ffc:	d0 40       	sbci	r29, 0x00	; 0
     ffe:	ce 01       	movw	r24, r28
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	31 d9       	rcall	.-3486   	; 0x266 <LCDstring>
    1004:	8f e1       	ldi	r24, 0x1F	; 31
    1006:	9e e4       	ldi	r25, 0x4E	; 78
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	f1 f7       	brne	.-4      	; 0x1008 <main+0x972>
    100c:	00 c0       	rjmp	.+0      	; 0x100e <main+0x978>
    100e:	00 00       	nop
					break;
				}
				switch(signal_status){
    1010:	c6 53       	subi	r28, 0x36	; 54
    1012:	df 4f       	sbci	r29, 0xFF	; 255
    1014:	98 81       	ld	r25, Y
    1016:	ca 5c       	subi	r28, 0xCA	; 202
    1018:	d0 40       	sbci	r29, 0x00	; 0
    101a:	92 33       	cpi	r25, 0x32	; 50
    101c:	19 f0       	breq	.+6      	; 0x1024 <main+0x98e>
    101e:	93 33       	cpi	r25, 0x33	; 51
    1020:	a9 f0       	breq	.+42     	; 0x104c <main+0x9b6>
    1022:	27 c0       	rjmp	.+78     	; 0x1072 <main+0x9dc>
					case '2':
					LCDGotoXY(0,1); _delay_ms(10);	LCDstring("Searching GPRS..",16); _delay_ms(10);
    1024:	61 e0       	ldi	r22, 0x01	; 1
    1026:	80 e0       	ldi	r24, 0x00	; 0
    1028:	2c d9       	rcall	.-3496   	; 0x282 <LCDGotoXY>
    102a:	ef e1       	ldi	r30, 0x1F	; 31
    102c:	fe e4       	ldi	r31, 0x4E	; 78
    102e:	31 97       	sbiw	r30, 0x01	; 1
    1030:	f1 f7       	brne	.-4      	; 0x102e <main+0x998>
    1032:	00 c0       	rjmp	.+0      	; 0x1034 <main+0x99e>
    1034:	00 00       	nop
    1036:	60 e1       	ldi	r22, 0x10	; 16
    1038:	81 ef       	ldi	r24, 0xF1	; 241
    103a:	91 e0       	ldi	r25, 0x01	; 1
    103c:	14 d9       	rcall	.-3544   	; 0x266 <LCDstring>
    103e:	8f e1       	ldi	r24, 0x1F	; 31
    1040:	9e e4       	ldi	r25, 0x4E	; 78
    1042:	01 97       	sbiw	r24, 0x01	; 1
    1044:	f1 f7       	brne	.-4      	; 0x1042 <main+0x9ac>
    1046:	00 c0       	rjmp	.+0      	; 0x1048 <main+0x9b2>
    1048:	00 00       	nop
    104a:	13 c0       	rjmp	.+38     	; 0x1072 <main+0x9dc>
					break;
					
					case '3':
					LCDGotoXY(0,1); _delay_ms(10);	LCDstring("    GPRS OK     ",16); _delay_ms(10);
    104c:	61 e0       	ldi	r22, 0x01	; 1
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	18 d9       	rcall	.-3536   	; 0x282 <LCDGotoXY>
    1052:	ef e1       	ldi	r30, 0x1F	; 31
    1054:	fe e4       	ldi	r31, 0x4E	; 78
    1056:	31 97       	sbiw	r30, 0x01	; 1
    1058:	f1 f7       	brne	.-4      	; 0x1056 <main+0x9c0>
    105a:	00 c0       	rjmp	.+0      	; 0x105c <main+0x9c6>
    105c:	00 00       	nop
    105e:	60 e1       	ldi	r22, 0x10	; 16
    1060:	82 e0       	ldi	r24, 0x02	; 2
    1062:	92 e0       	ldi	r25, 0x02	; 2
    1064:	00 d9       	rcall	.-3584   	; 0x266 <LCDstring>
    1066:	8f e1       	ldi	r24, 0x1F	; 31
    1068:	9e e4       	ldi	r25, 0x4E	; 78
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	f1 f7       	brne	.-4      	; 0x106a <main+0x9d4>
    106e:	00 c0       	rjmp	.+0      	; 0x1070 <main+0x9da>
    1070:	00 00       	nop
					break;
				}
				toggle=(toggle+1)%5;
    1072:	cd 53       	subi	r28, 0x3D	; 61
    1074:	df 4f       	sbci	r29, 0xFF	; 255
    1076:	e8 81       	ld	r30, Y
    1078:	c3 5c       	subi	r28, 0xC3	; 195
    107a:	d0 40       	sbci	r29, 0x00	; 0
    107c:	8e 2f       	mov	r24, r30
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	01 96       	adiw	r24, 0x01	; 1
    1082:	65 e0       	ldi	r22, 0x05	; 5
    1084:	70 e0       	ldi	r23, 0x00	; 0
    1086:	0a d5       	rcall	.+2580   	; 0x1a9c <__divmodhi4>
    1088:	cd 53       	subi	r28, 0x3D	; 61
    108a:	df 4f       	sbci	r29, 0xFF	; 255
    108c:	88 83       	st	Y, r24
    108e:	c3 5c       	subi	r28, 0xC3	; 195
    1090:	d0 40       	sbci	r29, 0x00	; 0
		}
		
		
		/* Data log */
		//   Initializing ISR variables
		com_data[3]='$';
    1092:	e9 e2       	ldi	r30, 0x29	; 41
    1094:	f3 e0       	ldi	r31, 0x03	; 3
    1096:	84 e2       	ldi	r24, 0x24	; 36
    1098:	83 83       	std	Z+3, r24	; 0x03
		com_data[4]='#';
    109a:	83 e2       	ldi	r24, 0x23	; 35
    109c:	84 83       	std	Z+4, r24	; 0x04
		
		// Input Current
		UART_1_Putc('$');
    109e:	84 e2       	ldi	r24, 0x24	; 36
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	8b d3       	rcall	.+1814   	; 0x17ba <UART_1_Putc>
		UART_1_Puts("A01=");
    10a4:	83 e1       	ldi	r24, 0x13	; 19
    10a6:	92 e0       	ldi	r25, 0x02	; 2
    10a8:	90 d3       	rcall	.+1824   	; 0x17ca <UART_1_Puts>
		UART_1_Puts(ch8);
    10aa:	ce 01       	movw	r24, r28
    10ac:	83 59       	subi	r24, 0x93	; 147
    10ae:	9f 4f       	sbci	r25, 0xFF	; 255
    10b0:	8c d3       	rcall	.+1816   	; 0x17ca <UART_1_Puts>
		// DC Voltage
		UART_1_Puts("&A02=");
    10b2:	88 e1       	ldi	r24, 0x18	; 24
    10b4:	92 e0       	ldi	r25, 0x02	; 2
    10b6:	89 d3       	rcall	.+1810   	; 0x17ca <UART_1_Puts>
		UART_1_Puts(ch1);
    10b8:	ce 01       	movw	r24, r28
    10ba:	8f 96       	adiw	r24, 0x2f	; 47
    10bc:	86 d3       	rcall	.+1804   	; 0x17ca <UART_1_Puts>
		// Output Power
		UART_1_Puts("&A03=");
    10be:	8e e1       	ldi	r24, 0x1E	; 30
    10c0:	92 e0       	ldi	r25, 0x02	; 2
    10c2:	83 d3       	rcall	.+1798   	; 0x17ca <UART_1_Puts>
		UART_1_Puts(ch4);
    10c4:	ce 01       	movw	r24, r28
    10c6:	8f 5b       	subi	r24, 0xBF	; 191
    10c8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ca:	7f d3       	rcall	.+1790   	; 0x17ca <UART_1_Puts>
		// Actual Frequency
		UART_1_Puts("&A04=");
    10cc:	84 e2       	ldi	r24, 0x24	; 36
    10ce:	92 e0       	ldi	r25, 0x02	; 2
    10d0:	7c d3       	rcall	.+1784   	; 0x17ca <UART_1_Puts>
		UART_1_Puts(ch2);
    10d2:	ce 01       	movw	r24, r28
    10d4:	c5 96       	adiw	r24, 0x35	; 53
    10d6:	79 d3       	rcall	.+1778   	; 0x17ca <UART_1_Puts>
		//vg Output Current
		UART_1_Puts("&A19=");
    10d8:	8a e2       	ldi	r24, 0x2A	; 42
    10da:	92 e0       	ldi	r25, 0x02	; 2
    10dc:	76 d3       	rcall	.+1772   	; 0x17ca <UART_1_Puts>
		UART_1_Puts(ch5);
    10de:	ce 01       	movw	r24, r28
    10e0:	89 5b       	subi	r24, 0xB9	; 185
    10e2:	9f 4f       	sbci	r25, 0xFF	; 255
    10e4:	72 d3       	rcall	.+1764   	; 0x17ca <UART_1_Puts>
		
		// Over Current
		UART_1_Puts("&A05=");
    10e6:	80 e3       	ldi	r24, 0x30	; 48
    10e8:	92 e0       	ldi	r25, 0x02	; 2
    10ea:	6f d3       	rcall	.+1758   	; 0x17ca <UART_1_Puts>
		if ((FL1 & 0x0001)==0x0001)
    10ec:	8f a1       	ldd	r24, Y+39	; 0x27
    10ee:	80 ff       	sbrs	r24, 0
    10f0:	40 c0       	rjmp	.+128    	; 0x1172 <main+0xadc>
		{
			UART_1_Putc('1');
    10f2:	81 e3       	ldi	r24, 0x31	; 49
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	61 d3       	rcall	.+1730   	; 0x17ba <UART_1_Putc>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    10f8:	82 d8       	rcall	.-3836   	; 0x1fe <LCDinit>
    10fa:	8f e1       	ldi	r24, 0x1F	; 31
    10fc:	9e e4       	ldi	r25, 0x4E	; 78
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	f1 f7       	brne	.-4      	; 0x10fe <main+0xa68>
    1102:	00 c0       	rjmp	.+0      	; 0x1104 <main+0xa6e>
    1104:	00 00       	nop
    1106:	a9 d8       	rcall	.-3758   	; 0x25a <LCDclr>
    1108:	ef e1       	ldi	r30, 0x1F	; 31
    110a:	fe e4       	ldi	r31, 0x4E	; 78
    110c:	31 97       	sbiw	r30, 0x01	; 1
    110e:	f1 f7       	brne	.-4      	; 0x110c <main+0xa76>
    1110:	00 c0       	rjmp	.+0      	; 0x1112 <main+0xa7c>
    1112:	00 00       	nop
    1114:	a5 d8       	rcall	.-3766   	; 0x260 <LCDhome>
    1116:	8f e1       	ldi	r24, 0x1F	; 31
    1118:	9e e4       	ldi	r25, 0x4E	; 78
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	f1 f7       	brne	.-4      	; 0x111a <main+0xa84>
    111e:	00 c0       	rjmp	.+0      	; 0x1120 <main+0xa8a>
    1120:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("   OVERCURRENT  ",16); _delay_ms(10);
    1122:	60 e0       	ldi	r22, 0x00	; 0
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	ad d8       	rcall	.-3750   	; 0x282 <LCDGotoXY>
    1128:	ef e1       	ldi	r30, 0x1F	; 31
    112a:	fe e4       	ldi	r31, 0x4E	; 78
    112c:	31 97       	sbiw	r30, 0x01	; 1
    112e:	f1 f7       	brne	.-4      	; 0x112c <main+0xa96>
    1130:	00 c0       	rjmp	.+0      	; 0x1132 <main+0xa9c>
    1132:	00 00       	nop
    1134:	60 e1       	ldi	r22, 0x10	; 16
    1136:	86 e3       	ldi	r24, 0x36	; 54
    1138:	92 e0       	ldi	r25, 0x02	; 2
    113a:	95 d8       	rcall	.-3798   	; 0x266 <LCDstring>
    113c:	8f e1       	ldi	r24, 0x1F	; 31
    113e:	9e e4       	ldi	r25, 0x4E	; 78
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	f1 f7       	brne	.-4      	; 0x1140 <main+0xaaa>
    1144:	00 c0       	rjmp	.+0      	; 0x1146 <main+0xab0>
    1146:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    1148:	61 e0       	ldi	r22, 0x01	; 1
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	9a d8       	rcall	.-3788   	; 0x282 <LCDGotoXY>
    114e:	ef e1       	ldi	r30, 0x1F	; 31
    1150:	fe e4       	ldi	r31, 0x4E	; 78
    1152:	31 97       	sbiw	r30, 0x01	; 1
    1154:	f1 f7       	brne	.-4      	; 0x1152 <main+0xabc>
    1156:	00 c0       	rjmp	.+0      	; 0x1158 <main+0xac2>
    1158:	00 00       	nop
    115a:	60 e1       	ldi	r22, 0x10	; 16
    115c:	87 e4       	ldi	r24, 0x47	; 71
    115e:	92 e0       	ldi	r25, 0x02	; 2
    1160:	82 d8       	rcall	.-3836   	; 0x266 <LCDstring>
    1162:	8f e1       	ldi	r24, 0x1F	; 31
    1164:	9e e4       	ldi	r25, 0x4E	; 78
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	f1 f7       	brne	.-4      	; 0x1166 <main+0xad0>
    116a:	00 c0       	rjmp	.+0      	; 0x116c <main+0xad6>
    116c:	00 00       	nop
		// Over Current
		UART_1_Puts("&A05=");
		if ((FL1 & 0x0001)==0x0001)
		{
			UART_1_Putc('1');
			NoFault = 0;
    116e:	21 2c       	mov	r2, r1
    1170:	03 c0       	rjmp	.+6      	; 0x1178 <main+0xae2>
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("   OVERCURRENT  ",16); _delay_ms(10);
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
		}
		else
		{
			UART_1_Putc('0');
    1172:	80 e3       	ldi	r24, 0x30	; 48
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	21 d3       	rcall	.+1602   	; 0x17ba <UART_1_Putc>
		}
		
		// DC Over Voltage
		UART_1_Puts("&A06=");
    1178:	88 e5       	ldi	r24, 0x58	; 88
    117a:	92 e0       	ldi	r25, 0x02	; 2
    117c:	26 d3       	rcall	.+1612   	; 0x17ca <UART_1_Puts>
		if ((FL1 & 0x0002)==0x0002)
    117e:	8f a1       	ldd	r24, Y+39	; 0x27
    1180:	81 ff       	sbrs	r24, 1
    1182:	40 c0       	rjmp	.+128    	; 0x1204 <main+0xb6e>
		{
			UART_1_Putc('1');
    1184:	81 e3       	ldi	r24, 0x31	; 49
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	18 d3       	rcall	.+1584   	; 0x17ba <UART_1_Putc>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    118a:	39 d8       	rcall	.-3982   	; 0x1fe <LCDinit>
    118c:	ef e1       	ldi	r30, 0x1F	; 31
    118e:	fe e4       	ldi	r31, 0x4E	; 78
    1190:	31 97       	sbiw	r30, 0x01	; 1
    1192:	f1 f7       	brne	.-4      	; 0x1190 <main+0xafa>
    1194:	00 c0       	rjmp	.+0      	; 0x1196 <main+0xb00>
    1196:	00 00       	nop
    1198:	60 d8       	rcall	.-3904   	; 0x25a <LCDclr>
    119a:	8f e1       	ldi	r24, 0x1F	; 31
    119c:	9e e4       	ldi	r25, 0x4E	; 78
    119e:	01 97       	sbiw	r24, 0x01	; 1
    11a0:	f1 f7       	brne	.-4      	; 0x119e <main+0xb08>
    11a2:	00 c0       	rjmp	.+0      	; 0x11a4 <main+0xb0e>
    11a4:	00 00       	nop
    11a6:	5c d8       	rcall	.-3912   	; 0x260 <LCDhome>
    11a8:	ef e1       	ldi	r30, 0x1F	; 31
    11aa:	fe e4       	ldi	r31, 0x4E	; 78
    11ac:	31 97       	sbiw	r30, 0x01	; 1
    11ae:	f1 f7       	brne	.-4      	; 0x11ac <main+0xb16>
    11b0:	00 c0       	rjmp	.+0      	; 0x11b2 <main+0xb1c>
    11b2:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("   OVERVOLTAGE  ",16); _delay_ms(10);
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	64 d8       	rcall	.-3896   	; 0x282 <LCDGotoXY>
    11ba:	8f e1       	ldi	r24, 0x1F	; 31
    11bc:	9e e4       	ldi	r25, 0x4E	; 78
    11be:	01 97       	sbiw	r24, 0x01	; 1
    11c0:	f1 f7       	brne	.-4      	; 0x11be <main+0xb28>
    11c2:	00 c0       	rjmp	.+0      	; 0x11c4 <main+0xb2e>
    11c4:	00 00       	nop
    11c6:	60 e1       	ldi	r22, 0x10	; 16
    11c8:	8e e5       	ldi	r24, 0x5E	; 94
    11ca:	92 e0       	ldi	r25, 0x02	; 2
    11cc:	4c d8       	rcall	.-3944   	; 0x266 <LCDstring>
    11ce:	ef e1       	ldi	r30, 0x1F	; 31
    11d0:	fe e4       	ldi	r31, 0x4E	; 78
    11d2:	31 97       	sbiw	r30, 0x01	; 1
    11d4:	f1 f7       	brne	.-4      	; 0x11d2 <main+0xb3c>
    11d6:	00 c0       	rjmp	.+0      	; 0x11d8 <main+0xb42>
    11d8:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    11da:	61 e0       	ldi	r22, 0x01	; 1
    11dc:	80 e0       	ldi	r24, 0x00	; 0
    11de:	51 d8       	rcall	.-3934   	; 0x282 <LCDGotoXY>
    11e0:	8f e1       	ldi	r24, 0x1F	; 31
    11e2:	9e e4       	ldi	r25, 0x4E	; 78
    11e4:	01 97       	sbiw	r24, 0x01	; 1
    11e6:	f1 f7       	brne	.-4      	; 0x11e4 <main+0xb4e>
    11e8:	00 c0       	rjmp	.+0      	; 0x11ea <main+0xb54>
    11ea:	00 00       	nop
    11ec:	60 e1       	ldi	r22, 0x10	; 16
    11ee:	87 e4       	ldi	r24, 0x47	; 71
    11f0:	92 e0       	ldi	r25, 0x02	; 2
    11f2:	39 d8       	rcall	.-3982   	; 0x266 <LCDstring>
    11f4:	ef e1       	ldi	r30, 0x1F	; 31
    11f6:	fe e4       	ldi	r31, 0x4E	; 78
    11f8:	31 97       	sbiw	r30, 0x01	; 1
    11fa:	f1 f7       	brne	.-4      	; 0x11f8 <main+0xb62>
    11fc:	00 c0       	rjmp	.+0      	; 0x11fe <main+0xb68>
    11fe:	00 00       	nop
		// DC Over Voltage
		UART_1_Puts("&A06=");
		if ((FL1 & 0x0002)==0x0002)
		{
			UART_1_Putc('1');
			NoFault = 0;
    1200:	21 2c       	mov	r2, r1
    1202:	03 c0       	rjmp	.+6      	; 0x120a <main+0xb74>
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("   OVERVOLTAGE  ",16); _delay_ms(10);
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
		}
		else
		{
			UART_1_Putc('0');
    1204:	80 e3       	ldi	r24, 0x30	; 48
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	d8 d2       	rcall	.+1456   	; 0x17ba <UART_1_Putc>
		}
		
		// Short Circuit
		UART_1_Puts("&A07=");
    120a:	8f e6       	ldi	r24, 0x6F	; 111
    120c:	92 e0       	ldi	r25, 0x02	; 2
    120e:	dd d2       	rcall	.+1466   	; 0x17ca <UART_1_Puts>
		if ((FL1 & 0x0008)==0x0008)
    1210:	8f a1       	ldd	r24, Y+39	; 0x27
    1212:	83 ff       	sbrs	r24, 3
    1214:	42 c0       	rjmp	.+132    	; 0x129a <main+0xc04>
		{
			UART_1_Putc('1');
    1216:	81 e3       	ldi	r24, 0x31	; 49
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	cf d2       	rcall	.+1438   	; 0x17ba <UART_1_Putc>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    121c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    1220:	8f e1       	ldi	r24, 0x1F	; 31
    1222:	9e e4       	ldi	r25, 0x4E	; 78
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	f1 f7       	brne	.-4      	; 0x1224 <main+0xb8e>
    1228:	00 c0       	rjmp	.+0      	; 0x122a <main+0xb94>
    122a:	00 00       	nop
    122c:	16 d8       	rcall	.-4052   	; 0x25a <LCDclr>
    122e:	ef e1       	ldi	r30, 0x1F	; 31
    1230:	fe e4       	ldi	r31, 0x4E	; 78
    1232:	31 97       	sbiw	r30, 0x01	; 1
    1234:	f1 f7       	brne	.-4      	; 0x1232 <main+0xb9c>
    1236:	00 c0       	rjmp	.+0      	; 0x1238 <main+0xba2>
    1238:	00 00       	nop
    123a:	12 d8       	rcall	.-4060   	; 0x260 <LCDhome>
    123c:	8f e1       	ldi	r24, 0x1F	; 31
    123e:	9e e4       	ldi	r25, 0x4E	; 78
    1240:	01 97       	sbiw	r24, 0x01	; 1
    1242:	f1 f7       	brne	.-4      	; 0x1240 <main+0xbaa>
    1244:	00 c0       	rjmp	.+0      	; 0x1246 <main+0xbb0>
    1246:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("  SHORT CIRCUIT ",16); _delay_ms(10);
    1248:	60 e0       	ldi	r22, 0x00	; 0
    124a:	80 e0       	ldi	r24, 0x00	; 0
    124c:	1a d8       	rcall	.-4044   	; 0x282 <LCDGotoXY>
    124e:	ef e1       	ldi	r30, 0x1F	; 31
    1250:	fe e4       	ldi	r31, 0x4E	; 78
    1252:	31 97       	sbiw	r30, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <main+0xbbc>
    1256:	00 c0       	rjmp	.+0      	; 0x1258 <main+0xbc2>
    1258:	00 00       	nop
    125a:	60 e1       	ldi	r22, 0x10	; 16
    125c:	85 e7       	ldi	r24, 0x75	; 117
    125e:	92 e0       	ldi	r25, 0x02	; 2
    1260:	02 d8       	rcall	.-4092   	; 0x266 <LCDstring>
    1262:	8f e1       	ldi	r24, 0x1F	; 31
    1264:	9e e4       	ldi	r25, 0x4E	; 78
    1266:	01 97       	sbiw	r24, 0x01	; 1
    1268:	f1 f7       	brne	.-4      	; 0x1266 <main+0xbd0>
    126a:	00 c0       	rjmp	.+0      	; 0x126c <main+0xbd6>
    126c:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    126e:	61 e0       	ldi	r22, 0x01	; 1
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	07 d8       	rcall	.-4082   	; 0x282 <LCDGotoXY>
    1274:	ef e1       	ldi	r30, 0x1F	; 31
    1276:	fe e4       	ldi	r31, 0x4E	; 78
    1278:	31 97       	sbiw	r30, 0x01	; 1
    127a:	f1 f7       	brne	.-4      	; 0x1278 <main+0xbe2>
    127c:	00 c0       	rjmp	.+0      	; 0x127e <main+0xbe8>
    127e:	00 00       	nop
    1280:	60 e1       	ldi	r22, 0x10	; 16
    1282:	87 e4       	ldi	r24, 0x47	; 71
    1284:	92 e0       	ldi	r25, 0x02	; 2
    1286:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    128a:	8f e1       	ldi	r24, 0x1F	; 31
    128c:	9e e4       	ldi	r25, 0x4E	; 78
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <main+0xbf8>
    1292:	00 c0       	rjmp	.+0      	; 0x1294 <main+0xbfe>
    1294:	00 00       	nop
		// Short Circuit
		UART_1_Puts("&A07=");
		if ((FL1 & 0x0008)==0x0008)
		{
			UART_1_Putc('1');
			NoFault = 0;
    1296:	21 2c       	mov	r2, r1
    1298:	03 c0       	rjmp	.+6      	; 0x12a0 <main+0xc0a>
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("  SHORT CIRCUIT ",16); _delay_ms(10);
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
		}
		else
		{
			UART_1_Putc('0');
    129a:	80 e3       	ldi	r24, 0x30	; 48
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	8d d2       	rcall	.+1306   	; 0x17ba <UART_1_Putc>
		}
		
		// DC bus under voltage
		UART_1_Puts("&A12=");
    12a0:	86 e8       	ldi	r24, 0x86	; 134
    12a2:	92 e0       	ldi	r25, 0x02	; 2
    12a4:	92 d2       	rcall	.+1316   	; 0x17ca <UART_1_Puts>
		if ((FL1 & 0x0020)==0x0020)
    12a6:	8f a1       	ldd	r24, Y+39	; 0x27
    12a8:	85 ff       	sbrs	r24, 5
    12aa:	47 c0       	rjmp	.+142    	; 0x133a <main+0xca4>
		{
			UART_1_Putc('1');
    12ac:	81 e3       	ldi	r24, 0x31	; 49
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	84 d2       	rcall	.+1288   	; 0x17ba <UART_1_Putc>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    12b2:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    12b6:	ef e1       	ldi	r30, 0x1F	; 31
    12b8:	fe e4       	ldi	r31, 0x4E	; 78
    12ba:	31 97       	sbiw	r30, 0x01	; 1
    12bc:	f1 f7       	brne	.-4      	; 0x12ba <main+0xc24>
    12be:	00 c0       	rjmp	.+0      	; 0x12c0 <main+0xc2a>
    12c0:	00 00       	nop
    12c2:	0e 94 2d 01 	call	0x25a	; 0x25a <LCDclr>
    12c6:	8f e1       	ldi	r24, 0x1F	; 31
    12c8:	9e e4       	ldi	r25, 0x4E	; 78
    12ca:	01 97       	sbiw	r24, 0x01	; 1
    12cc:	f1 f7       	brne	.-4      	; 0x12ca <main+0xc34>
    12ce:	00 c0       	rjmp	.+0      	; 0x12d0 <main+0xc3a>
    12d0:	00 00       	nop
    12d2:	0e 94 30 01 	call	0x260	; 0x260 <LCDhome>
    12d6:	ef e1       	ldi	r30, 0x1F	; 31
    12d8:	fe e4       	ldi	r31, 0x4E	; 78
    12da:	31 97       	sbiw	r30, 0x01	; 1
    12dc:	f1 f7       	brne	.-4      	; 0x12da <main+0xc44>
    12de:	00 c0       	rjmp	.+0      	; 0x12e0 <main+0xc4a>
    12e0:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("  UNDERVOLTAGE  ",16); _delay_ms(10);
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	80 e0       	ldi	r24, 0x00	; 0
    12e6:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    12ea:	8f e1       	ldi	r24, 0x1F	; 31
    12ec:	9e e4       	ldi	r25, 0x4E	; 78
    12ee:	01 97       	sbiw	r24, 0x01	; 1
    12f0:	f1 f7       	brne	.-4      	; 0x12ee <main+0xc58>
    12f2:	00 c0       	rjmp	.+0      	; 0x12f4 <main+0xc5e>
    12f4:	00 00       	nop
    12f6:	60 e1       	ldi	r22, 0x10	; 16
    12f8:	8c e8       	ldi	r24, 0x8C	; 140
    12fa:	92 e0       	ldi	r25, 0x02	; 2
    12fc:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    1300:	ef e1       	ldi	r30, 0x1F	; 31
    1302:	fe e4       	ldi	r31, 0x4E	; 78
    1304:	31 97       	sbiw	r30, 0x01	; 1
    1306:	f1 f7       	brne	.-4      	; 0x1304 <main+0xc6e>
    1308:	00 c0       	rjmp	.+0      	; 0x130a <main+0xc74>
    130a:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    130c:	61 e0       	ldi	r22, 0x01	; 1
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    1314:	8f e1       	ldi	r24, 0x1F	; 31
    1316:	9e e4       	ldi	r25, 0x4E	; 78
    1318:	01 97       	sbiw	r24, 0x01	; 1
    131a:	f1 f7       	brne	.-4      	; 0x1318 <main+0xc82>
    131c:	00 c0       	rjmp	.+0      	; 0x131e <main+0xc88>
    131e:	00 00       	nop
    1320:	60 e1       	ldi	r22, 0x10	; 16
    1322:	87 e4       	ldi	r24, 0x47	; 71
    1324:	92 e0       	ldi	r25, 0x02	; 2
    1326:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    132a:	ef e1       	ldi	r30, 0x1F	; 31
    132c:	fe e4       	ldi	r31, 0x4E	; 78
    132e:	31 97       	sbiw	r30, 0x01	; 1
    1330:	f1 f7       	brne	.-4      	; 0x132e <main+0xc98>
    1332:	00 c0       	rjmp	.+0      	; 0x1334 <main+0xc9e>
    1334:	00 00       	nop
		// DC bus under voltage
		UART_1_Puts("&A12=");
		if ((FL1 & 0x0020)==0x0020)
		{
			UART_1_Putc('1');
			NoFault = 0;
    1336:	21 2c       	mov	r2, r1
    1338:	03 c0       	rjmp	.+6      	; 0x1340 <main+0xcaa>
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("  UNDERVOLTAGE  ",16); _delay_ms(10);
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
		}
		else
		{
			UART_1_Putc('0');
    133a:	80 e3       	ldi	r24, 0x30	; 48
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	3d d2       	rcall	.+1146   	; 0x17ba <UART_1_Putc>
		}
		
		// I/P Phase Loss
		UART_1_Puts("&A10=");
    1340:	8d e9       	ldi	r24, 0x9D	; 157
    1342:	92 e0       	ldi	r25, 0x02	; 2
    1344:	42 d2       	rcall	.+1156   	; 0x17ca <UART_1_Puts>
		if ((FL2 & 0x0020)==0x0020)
    1346:	89 a5       	ldd	r24, Y+41	; 0x29
    1348:	85 ff       	sbrs	r24, 5
    134a:	04 c0       	rjmp	.+8      	; 0x1354 <main+0xcbe>
		{
			UART_1_Putc('1');
    134c:	81 e3       	ldi	r24, 0x31	; 49
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	34 d2       	rcall	.+1128   	; 0x17ba <UART_1_Putc>
    1352:	03 c0       	rjmp	.+6      	; 0x135a <main+0xcc4>
		}
		else
		{
			UART_1_Putc('0');
    1354:	80 e3       	ldi	r24, 0x30	; 48
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	30 d2       	rcall	.+1120   	; 0x17ba <UART_1_Putc>
		}
		
		// Motor Phase Loss
		UART_1_Puts("&A13=");
    135a:	83 ea       	ldi	r24, 0xA3	; 163
    135c:	92 e0       	ldi	r25, 0x02	; 2
    135e:	35 d2       	rcall	.+1130   	; 0x17ca <UART_1_Puts>
		if ((FL2 & 0x4000)==0x4000)
    1360:	89 a5       	ldd	r24, Y+41	; 0x29
    1362:	9a a5       	ldd	r25, Y+42	; 0x2a
    1364:	96 ff       	sbrs	r25, 6
    1366:	47 c0       	rjmp	.+142    	; 0x13f6 <main+0xd60>
		{
			UART_1_Putc('1');
    1368:	81 e3       	ldi	r24, 0x31	; 49
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	26 d2       	rcall	.+1100   	; 0x17ba <UART_1_Putc>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    136e:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    1372:	8f e1       	ldi	r24, 0x1F	; 31
    1374:	9e e4       	ldi	r25, 0x4E	; 78
    1376:	01 97       	sbiw	r24, 0x01	; 1
    1378:	f1 f7       	brne	.-4      	; 0x1376 <main+0xce0>
    137a:	00 c0       	rjmp	.+0      	; 0x137c <main+0xce6>
    137c:	00 00       	nop
    137e:	0e 94 2d 01 	call	0x25a	; 0x25a <LCDclr>
    1382:	ef e1       	ldi	r30, 0x1F	; 31
    1384:	fe e4       	ldi	r31, 0x4E	; 78
    1386:	31 97       	sbiw	r30, 0x01	; 1
    1388:	f1 f7       	brne	.-4      	; 0x1386 <main+0xcf0>
    138a:	00 c0       	rjmp	.+0      	; 0x138c <main+0xcf6>
    138c:	00 00       	nop
    138e:	0e 94 30 01 	call	0x260	; 0x260 <LCDhome>
    1392:	8f e1       	ldi	r24, 0x1F	; 31
    1394:	9e e4       	ldi	r25, 0x4E	; 78
    1396:	01 97       	sbiw	r24, 0x01	; 1
    1398:	f1 f7       	brne	.-4      	; 0x1396 <main+0xd00>
    139a:	00 c0       	rjmp	.+0      	; 0x139c <main+0xd06>
    139c:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring(" MTR PHASE LOSS ",16); _delay_ms(10);
    139e:	60 e0       	ldi	r22, 0x00	; 0
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    13a6:	ef e1       	ldi	r30, 0x1F	; 31
    13a8:	fe e4       	ldi	r31, 0x4E	; 78
    13aa:	31 97       	sbiw	r30, 0x01	; 1
    13ac:	f1 f7       	brne	.-4      	; 0x13aa <main+0xd14>
    13ae:	00 c0       	rjmp	.+0      	; 0x13b0 <main+0xd1a>
    13b0:	00 00       	nop
    13b2:	60 e1       	ldi	r22, 0x10	; 16
    13b4:	89 ea       	ldi	r24, 0xA9	; 169
    13b6:	92 e0       	ldi	r25, 0x02	; 2
    13b8:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    13bc:	8f e1       	ldi	r24, 0x1F	; 31
    13be:	9e e4       	ldi	r25, 0x4E	; 78
    13c0:	01 97       	sbiw	r24, 0x01	; 1
    13c2:	f1 f7       	brne	.-4      	; 0x13c0 <main+0xd2a>
    13c4:	00 c0       	rjmp	.+0      	; 0x13c6 <main+0xd30>
    13c6:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    13c8:	61 e0       	ldi	r22, 0x01	; 1
    13ca:	80 e0       	ldi	r24, 0x00	; 0
    13cc:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    13d0:	ef e1       	ldi	r30, 0x1F	; 31
    13d2:	fe e4       	ldi	r31, 0x4E	; 78
    13d4:	31 97       	sbiw	r30, 0x01	; 1
    13d6:	f1 f7       	brne	.-4      	; 0x13d4 <main+0xd3e>
    13d8:	00 c0       	rjmp	.+0      	; 0x13da <main+0xd44>
    13da:	00 00       	nop
    13dc:	60 e1       	ldi	r22, 0x10	; 16
    13de:	87 e4       	ldi	r24, 0x47	; 71
    13e0:	92 e0       	ldi	r25, 0x02	; 2
    13e2:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    13e6:	8f e1       	ldi	r24, 0x1F	; 31
    13e8:	9e e4       	ldi	r25, 0x4E	; 78
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	f1 f7       	brne	.-4      	; 0x13ea <main+0xd54>
    13ee:	00 c0       	rjmp	.+0      	; 0x13f0 <main+0xd5a>
    13f0:	00 00       	nop
		// Motor Phase Loss
		UART_1_Puts("&A13=");
		if ((FL2 & 0x4000)==0x4000)
		{
			UART_1_Putc('1');
			NoFault = 0;
    13f2:	21 2c       	mov	r2, r1
    13f4:	03 c0       	rjmp	.+6      	; 0x13fc <main+0xd66>
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring(" MTR PHASE LOSS ",16); _delay_ms(10);
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
		}
		else
		{
			UART_1_Putc('0');
    13f6:	80 e3       	ldi	r24, 0x30	; 48
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	df d1       	rcall	.+958    	; 0x17ba <UART_1_Putc>
		}
		
		// Motor Dry Run
		UART_1_Puts("&A15=");
    13fc:	8a eb       	ldi	r24, 0xBA	; 186
    13fe:	92 e0       	ldi	r25, 0x02	; 2
    1400:	e4 d1       	rcall	.+968    	; 0x17ca <UART_1_Puts>
		if (Dry_Run==1)
    1402:	c5 53       	subi	r28, 0x35	; 53
    1404:	df 4f       	sbci	r29, 0xFF	; 255
    1406:	98 81       	ld	r25, Y
    1408:	cb 5c       	subi	r28, 0xCB	; 203
    140a:	d0 40       	sbci	r29, 0x00	; 0
    140c:	91 30       	cpi	r25, 0x01	; 1
    140e:	21 f4       	brne	.+8      	; 0x1418 <main+0xd82>
		{
			UART_1_Putc('1');
    1410:	81 e3       	ldi	r24, 0x31	; 49
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	d2 d1       	rcall	.+932    	; 0x17ba <UART_1_Putc>
    1416:	03 c0       	rjmp	.+6      	; 0x141e <main+0xd88>
		}
		else
		{
			UART_1_Putc('0');
    1418:	80 e3       	ldi	r24, 0x30	; 48
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	ce d1       	rcall	.+924    	; 0x17ba <UART_1_Putc>
		{
			UART_1_Putc('0');
		}
	*/	
		//vg Remote On/Off
		UART_1_Puts("&A11=");
    141e:	80 ec       	ldi	r24, 0xC0	; 192
    1420:	92 e0       	ldi	r25, 0x02	; 2
    1422:	d3 d1       	rcall	.+934    	; 0x17ca <UART_1_Puts>
		UART_1_Putc(SmS_ShutOff);
    1424:	83 2d       	mov	r24, r3
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	c8 d1       	rcall	.+912    	; 0x17ba <UART_1_Putc>
		
		UART_1_Putc('#');
    142a:	83 e2       	ldi	r24, 0x23	; 35
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	c5 d1       	rcall	.+906    	; 0x17ba <UART_1_Putc>
		
		//  Reception Enable
		sbi(UCSR1B,RXEN1);
    1430:	e9 ec       	ldi	r30, 0xC9	; 201
    1432:	f0 e0       	ldi	r31, 0x00	; 0
    1434:	80 81       	ld	r24, Z
    1436:	80 61       	ori	r24, 0x10	; 16
    1438:	80 83       	st	Z, r24
    143a:	2f ef       	ldi	r18, 0xFF	; 255
    143c:	89 e6       	ldi	r24, 0x69	; 105
    143e:	98 e1       	ldi	r25, 0x18	; 24
    1440:	21 50       	subi	r18, 0x01	; 1
    1442:	80 40       	sbci	r24, 0x00	; 0
    1444:	90 40       	sbci	r25, 0x00	; 0
    1446:	e1 f7       	brne	.-8      	; 0x1440 <main+0xdaa>
    1448:	00 c0       	rjmp	.+0      	; 0x144a <main+0xdb4>
    144a:	00 00       	nop
		
		//Waiting for Interrupt Reception
		_delay_ms(1000);
		
		//  Reception disable
		cbi(UCSR1B,RXEN1);
    144c:	80 81       	ld	r24, Z
    144e:	8f 7e       	andi	r24, 0xEF	; 239
    1450:	80 83       	st	Z, r24
		
		SmS_ShutOff = com_data[0];
    1452:	e9 e2       	ldi	r30, 0x29	; 41
    1454:	f3 e0       	ldi	r31, 0x03	; 3
    1456:	30 80       	ld	r3, Z
		signal_status = com_data[1];
    1458:	21 81       	ldd	r18, Z+1	; 0x01
    145a:	c6 53       	subi	r28, 0x36	; 54
    145c:	df 4f       	sbci	r29, 0xFF	; 255
    145e:	28 83       	st	Y, r18
    1460:	ca 5c       	subi	r28, 0xCA	; 202
    1462:	d0 40       	sbci	r29, 0x00	; 0
		signal_strength = com_data[2];
    1464:	82 81       	ldd	r24, Z+2	; 0x02
    1466:	c7 53       	subi	r28, 0x37	; 55
    1468:	df 4f       	sbci	r29, 0xFF	; 255
    146a:	88 83       	st	Y, r24
    146c:	c9 5c       	subi	r28, 0xC9	; 201
    146e:	d0 40       	sbci	r29, 0x00	; 0
		
		//  Parsing network provider
		if (com_data[4]!='#'){
    1470:	24 81       	ldd	r18, Z+4	; 0x04
    1472:	23 32       	cpi	r18, 0x23	; 35
    1474:	19 f1       	breq	.+70     	; 0x14bc <main+0xe26>
    1476:	84 e0       	ldi	r24, 0x04	; 4
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	44 e0       	ldi	r20, 0x04	; 4
    147c:	01 c0       	rjmp	.+2      	; 0x1480 <main+0xdea>
			i = 4;
			while(com_data[i]!='#'){
				user[i-4] = com_data[i];
				i++;
    147e:	43 2f       	mov	r20, r19
		
		//  Parsing network provider
		if (com_data[4]!='#'){
			i = 4;
			while(com_data[i]!='#'){
				user[i-4] = com_data[i];
    1480:	ed ef       	ldi	r30, 0xFD	; 253
    1482:	ff ef       	ldi	r31, 0xFF	; 255
    1484:	ec 0f       	add	r30, r28
    1486:	fd 1f       	adc	r31, r29
    1488:	e8 0f       	add	r30, r24
    148a:	f9 1f       	adc	r31, r25
    148c:	20 83       	st	Z, r18
				i++;
    148e:	31 e0       	ldi	r19, 0x01	; 1
    1490:	34 0f       	add	r19, r20
		signal_strength = com_data[2];
		
		//  Parsing network provider
		if (com_data[4]!='#'){
			i = 4;
			while(com_data[i]!='#'){
    1492:	83 2f       	mov	r24, r19
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	fc 01       	movw	r30, r24
    1498:	e7 5d       	subi	r30, 0xD7	; 215
    149a:	fc 4f       	sbci	r31, 0xFC	; 252
    149c:	20 81       	ld	r18, Z
    149e:	23 32       	cpi	r18, 0x23	; 35
    14a0:	71 f7       	brne	.-36     	; 0x147e <main+0xde8>
				user[i-4] = com_data[i];
				i++;
			}
			user[i-4]='\0';
    14a2:	ed ef       	ldi	r30, 0xFD	; 253
    14a4:	ff ef       	ldi	r31, 0xFF	; 255
    14a6:	ec 0f       	add	r30, r28
    14a8:	fd 1f       	adc	r31, r29
    14aa:	e8 0f       	add	r30, r24
    14ac:	f9 1f       	adc	r31, r25
    14ae:	10 82       	st	Z, r1
			str_n = i-4;
    14b0:	43 50       	subi	r20, 0x03	; 3
    14b2:	c4 53       	subi	r28, 0x34	; 52
    14b4:	df 4f       	sbci	r29, 0xFF	; 255
    14b6:	48 83       	st	Y, r20
    14b8:	cc 5c       	subi	r28, 0xCC	; 204
    14ba:	d0 40       	sbci	r29, 0x00	; 0
			MotorSwitch = 1;
			MotorSwitchCount = 0;
		}
		*/
		//vg Dry Run
		if (FRQ>350 && OPW<4){
    14bc:	8b a5       	ldd	r24, Y+43	; 0x2b
    14be:	9c a5       	ldd	r25, Y+44	; 0x2c
    14c0:	8f 35       	cpi	r24, 0x5F	; 95
    14c2:	91 40       	sbci	r25, 0x01	; 1
    14c4:	08 f4       	brcc	.+2      	; 0x14c8 <main+0xe32>
    14c6:	6c c0       	rjmp	.+216    	; 0x15a0 <main+0xf0a>
    14c8:	89 a1       	ldd	r24, Y+33	; 0x21
    14ca:	9a a1       	ldd	r25, Y+34	; 0x22
    14cc:	04 97       	sbiw	r24, 0x04	; 4
    14ce:	08 f0       	brcs	.+2      	; 0x14d2 <main+0xe3c>
    14d0:	6d c0       	rjmp	.+218    	; 0x15ac <main+0xf16>
			DryRunCount++;
    14d2:	c8 53       	subi	r28, 0x38	; 56
    14d4:	df 4f       	sbci	r29, 0xFF	; 255
    14d6:	f8 81       	ld	r31, Y
    14d8:	c8 5c       	subi	r28, 0xC8	; 200
    14da:	d0 40       	sbci	r29, 0x00	; 0
    14dc:	ff 5f       	subi	r31, 0xFF	; 255
    14de:	c8 53       	subi	r28, 0x38	; 56
    14e0:	df 4f       	sbci	r29, 0xFF	; 255
    14e2:	f8 83       	st	Y, r31
    14e4:	c8 5c       	subi	r28, 0xC8	; 200
    14e6:	d0 40       	sbci	r29, 0x00	; 0
			if (DryRunCount>=3){
    14e8:	f3 30       	cpi	r31, 0x03	; 3
    14ea:	08 f4       	brcc	.+2      	; 0x14ee <main+0xe58>
    14ec:	64 c0       	rjmp	.+200    	; 0x15b6 <main+0xf20>
				DryRunCount = 4;
				Dry_Run = 1;
				NoFault = 0;
				LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    14ee:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    14f2:	8f e1       	ldi	r24, 0x1F	; 31
    14f4:	9e e4       	ldi	r25, 0x4E	; 78
    14f6:	01 97       	sbiw	r24, 0x01	; 1
    14f8:	f1 f7       	brne	.-4      	; 0x14f6 <main+0xe60>
    14fa:	00 c0       	rjmp	.+0      	; 0x14fc <main+0xe66>
    14fc:	00 00       	nop
    14fe:	0e 94 2d 01 	call	0x25a	; 0x25a <LCDclr>
    1502:	ef e1       	ldi	r30, 0x1F	; 31
    1504:	fe e4       	ldi	r31, 0x4E	; 78
    1506:	31 97       	sbiw	r30, 0x01	; 1
    1508:	f1 f7       	brne	.-4      	; 0x1506 <main+0xe70>
    150a:	00 c0       	rjmp	.+0      	; 0x150c <main+0xe76>
    150c:	00 00       	nop
    150e:	0e 94 30 01 	call	0x260	; 0x260 <LCDhome>
    1512:	8f e1       	ldi	r24, 0x1F	; 31
    1514:	9e e4       	ldi	r25, 0x4E	; 78
    1516:	01 97       	sbiw	r24, 0x01	; 1
    1518:	f1 f7       	brne	.-4      	; 0x1516 <main+0xe80>
    151a:	00 c0       	rjmp	.+0      	; 0x151c <main+0xe86>
    151c:	00 00       	nop
				LCDGotoXY(0,0); _delay_ms(10);		LCDstring("     DRY RUN    ",16); _delay_ms(10);
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	80 e0       	ldi	r24, 0x00	; 0
    1522:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    1526:	ef e1       	ldi	r30, 0x1F	; 31
    1528:	fe e4       	ldi	r31, 0x4E	; 78
    152a:	31 97       	sbiw	r30, 0x01	; 1
    152c:	f1 f7       	brne	.-4      	; 0x152a <main+0xe94>
    152e:	00 c0       	rjmp	.+0      	; 0x1530 <main+0xe9a>
    1530:	00 00       	nop
    1532:	60 e1       	ldi	r22, 0x10	; 16
    1534:	86 ec       	ldi	r24, 0xC6	; 198
    1536:	92 e0       	ldi	r25, 0x02	; 2
    1538:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    153c:	8f e1       	ldi	r24, 0x1F	; 31
    153e:	9e e4       	ldi	r25, 0x4E	; 78
    1540:	01 97       	sbiw	r24, 0x01	; 1
    1542:	f1 f7       	brne	.-4      	; 0x1540 <main+0xeaa>
    1544:	00 c0       	rjmp	.+0      	; 0x1546 <main+0xeb0>
    1546:	00 00       	nop
				LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
    1548:	61 e0       	ldi	r22, 0x01	; 1
    154a:	80 e0       	ldi	r24, 0x00	; 0
    154c:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    1550:	ef e1       	ldi	r30, 0x1F	; 31
    1552:	fe e4       	ldi	r31, 0x4E	; 78
    1554:	31 97       	sbiw	r30, 0x01	; 1
    1556:	f1 f7       	brne	.-4      	; 0x1554 <main+0xebe>
    1558:	00 c0       	rjmp	.+0      	; 0x155a <main+0xec4>
    155a:	00 00       	nop
    155c:	60 e1       	ldi	r22, 0x10	; 16
    155e:	87 e4       	ldi	r24, 0x47	; 71
    1560:	92 e0       	ldi	r25, 0x02	; 2
    1562:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    1566:	8f e1       	ldi	r24, 0x1F	; 31
    1568:	9e e4       	ldi	r25, 0x4E	; 78
    156a:	01 97       	sbiw	r24, 0x01	; 1
    156c:	f1 f7       	brne	.-4      	; 0x156a <main+0xed4>
    156e:	00 c0       	rjmp	.+0      	; 0x1570 <main+0xeda>
    1570:	00 00       	nop
				Send_Command(&STP_Write_CMD,&Dummy,write);
    1572:	48 e0       	ldi	r20, 0x08	; 8
    1574:	be 01       	movw	r22, r28
    1576:	63 5d       	subi	r22, 0xD3	; 211
    1578:	7f 4f       	sbci	r23, 0xFF	; 255
    157a:	ce 01       	movw	r24, r28
    157c:	83 54       	subi	r24, 0x43	; 67
    157e:	9f 4f       	sbci	r25, 0xFF	; 255
    1580:	0e 94 83 02 	call	0x506	; 0x506 <Send_Command>
		if (FRQ>350 && OPW<4){
			DryRunCount++;
			if (DryRunCount>=3){
				DryRunCount = 4;
				Dry_Run = 1;
				NoFault = 0;
    1584:	21 2c       	mov	r2, r1
		*/
		//vg Dry Run
		if (FRQ>350 && OPW<4){
			DryRunCount++;
			if (DryRunCount>=3){
				DryRunCount = 4;
    1586:	94 e0       	ldi	r25, 0x04	; 4
    1588:	c8 53       	subi	r28, 0x38	; 56
    158a:	df 4f       	sbci	r29, 0xFF	; 255
    158c:	98 83       	st	Y, r25
    158e:	c8 5c       	subi	r28, 0xC8	; 200
    1590:	d0 40       	sbci	r29, 0x00	; 0
				Dry_Run = 1;
    1592:	e1 e0       	ldi	r30, 0x01	; 1
    1594:	c5 53       	subi	r28, 0x35	; 53
    1596:	df 4f       	sbci	r29, 0xFF	; 255
    1598:	e8 83       	st	Y, r30
    159a:	cb 5c       	subi	r28, 0xCB	; 203
    159c:	d0 40       	sbci	r29, 0x00	; 0
    159e:	0b c0       	rjmp	.+22     	; 0x15b6 <main+0xf20>
				LCDGotoXY(0,1); _delay_ms(10);		LCDstring(" PLEASE RESTART ",16); _delay_ms(10);
				Send_Command(&STP_Write_CMD,&Dummy,write);
				
			}
			}else {
			DryRunCount = 0;
    15a0:	c8 53       	subi	r28, 0x38	; 56
    15a2:	df 4f       	sbci	r29, 0xFF	; 255
    15a4:	18 82       	st	Y, r1
    15a6:	c8 5c       	subi	r28, 0xC8	; 200
    15a8:	d0 40       	sbci	r29, 0x00	; 0
    15aa:	05 c0       	rjmp	.+10     	; 0x15b6 <main+0xf20>
    15ac:	c8 53       	subi	r28, 0x38	; 56
    15ae:	df 4f       	sbci	r29, 0xFF	; 255
    15b0:	18 82       	st	Y, r1
    15b2:	c8 5c       	subi	r28, 0xC8	; 200
    15b4:	d0 40       	sbci	r29, 0x00	; 0
		
		if (FRQ>100 && uv==0){
			FRQ_previous = FRQ;
		}
		
		if (SmS_ShutOff==0x30){
    15b6:	f0 e3       	ldi	r31, 0x30	; 48
    15b8:	3f 12       	cpse	r3, r31
    15ba:	59 c0       	rjmp	.+178    	; 0x166e <main+0xfd8>
			NoFault = 0;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    15bc:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    15c0:	8f e1       	ldi	r24, 0x1F	; 31
    15c2:	9e e4       	ldi	r25, 0x4E	; 78
    15c4:	01 97       	sbiw	r24, 0x01	; 1
    15c6:	f1 f7       	brne	.-4      	; 0x15c4 <main+0xf2e>
    15c8:	00 c0       	rjmp	.+0      	; 0x15ca <main+0xf34>
    15ca:	00 00       	nop
    15cc:	0e 94 2d 01 	call	0x25a	; 0x25a <LCDclr>
    15d0:	ef e1       	ldi	r30, 0x1F	; 31
    15d2:	fe e4       	ldi	r31, 0x4E	; 78
    15d4:	31 97       	sbiw	r30, 0x01	; 1
    15d6:	f1 f7       	brne	.-4      	; 0x15d4 <main+0xf3e>
    15d8:	00 c0       	rjmp	.+0      	; 0x15da <main+0xf44>
    15da:	00 00       	nop
    15dc:	0e 94 30 01 	call	0x260	; 0x260 <LCDhome>
    15e0:	8f e1       	ldi	r24, 0x1F	; 31
    15e2:	9e e4       	ldi	r25, 0x4E	; 78
    15e4:	01 97       	sbiw	r24, 0x01	; 1
    15e6:	f1 f7       	brne	.-4      	; 0x15e4 <main+0xf4e>
    15e8:	00 c0       	rjmp	.+0      	; 0x15ea <main+0xf54>
    15ea:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("     SYSTEM     ",16); _delay_ms(10);
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    15f4:	ef e1       	ldi	r30, 0x1F	; 31
    15f6:	fe e4       	ldi	r31, 0x4E	; 78
    15f8:	31 97       	sbiw	r30, 0x01	; 1
    15fa:	f1 f7       	brne	.-4      	; 0x15f8 <main+0xf62>
    15fc:	00 c0       	rjmp	.+0      	; 0x15fe <main+0xf68>
    15fe:	00 00       	nop
    1600:	60 e1       	ldi	r22, 0x10	; 16
    1602:	87 ed       	ldi	r24, 0xD7	; 215
    1604:	92 e0       	ldi	r25, 0x02	; 2
    1606:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    160a:	8f e1       	ldi	r24, 0x1F	; 31
    160c:	9e e4       	ldi	r25, 0x4E	; 78
    160e:	01 97       	sbiw	r24, 0x01	; 1
    1610:	f1 f7       	brne	.-4      	; 0x160e <main+0xf78>
    1612:	00 c0       	rjmp	.+0      	; 0x1614 <main+0xf7e>
    1614:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring("REMOTELY SHUTOFF",16); _delay_ms(10);
    1616:	61 e0       	ldi	r22, 0x01	; 1
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    161e:	ef e1       	ldi	r30, 0x1F	; 31
    1620:	fe e4       	ldi	r31, 0x4E	; 78
    1622:	31 97       	sbiw	r30, 0x01	; 1
    1624:	f1 f7       	brne	.-4      	; 0x1622 <main+0xf8c>
    1626:	00 c0       	rjmp	.+0      	; 0x1628 <main+0xf92>
    1628:	00 00       	nop
    162a:	60 e1       	ldi	r22, 0x10	; 16
    162c:	88 ee       	ldi	r24, 0xE8	; 232
    162e:	92 e0       	ldi	r25, 0x02	; 2
    1630:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    1634:	8f e1       	ldi	r24, 0x1F	; 31
    1636:	9e e4       	ldi	r25, 0x4E	; 78
    1638:	01 97       	sbiw	r24, 0x01	; 1
    163a:	f1 f7       	brne	.-4      	; 0x1638 <main+0xfa2>
    163c:	00 c0       	rjmp	.+0      	; 0x163e <main+0xfa8>
    163e:	00 00       	nop
			//  Stop command
			Send_Command(&STP_Write_CMD,&Dummy,write);
    1640:	48 e0       	ldi	r20, 0x08	; 8
    1642:	be 01       	movw	r22, r28
    1644:	63 5d       	subi	r22, 0xD3	; 211
    1646:	7f 4f       	sbci	r23, 0xFF	; 255
    1648:	ce 01       	movw	r24, r28
    164a:	83 54       	subi	r24, 0x43	; 67
    164c:	9f 4f       	sbci	r25, 0xFF	; 255
    164e:	0e 94 83 02 	call	0x506	; 0x506 <Send_Command>
			flag_sms=0;
    1652:	10 92 00 01 	sts	0x0100, r1
    1656:	9f ef       	ldi	r25, 0xFF	; 255
    1658:	e1 e1       	ldi	r30, 0x11	; 17
    165a:	fa e7       	ldi	r31, 0x7A	; 122
    165c:	91 50       	subi	r25, 0x01	; 1
    165e:	e0 40       	sbci	r30, 0x00	; 0
    1660:	f0 40       	sbci	r31, 0x00	; 0
    1662:	e1 f7       	brne	.-8      	; 0x165c <main+0xfc6>
    1664:	00 c0       	rjmp	.+0      	; 0x1666 <main+0xfd0>
    1666:	00 00       	nop
			_delay_ms(5000);
			sbi(PORTA,4);
    1668:	14 9a       	sbi	0x02, 4	; 2
		if (FRQ>100 && uv==0){
			FRQ_previous = FRQ;
		}
		
		if (SmS_ShutOff==0x30){
			NoFault = 0;
    166a:	21 2c       	mov	r2, r1
    166c:	43 c9       	rjmp	.-3450   	; 0x8f4 <main+0x25e>
			Send_Command(&STP_Write_CMD,&Dummy,write);
			flag_sms=0;
			_delay_ms(5000);
			sbi(PORTA,4);
		}
		else if((SmS_ShutOff==0x31) && (flag_sms==0))
    166e:	21 e3       	ldi	r18, 0x31	; 49
    1670:	32 12       	cpse	r3, r18
    1672:	40 c9       	rjmp	.-3456   	; 0x8f4 <main+0x25e>
    1674:	80 91 00 01 	lds	r24, 0x0100
    1678:	81 11       	cpse	r24, r1
    167a:	3c c9       	rjmp	.-3464   	; 0x8f4 <main+0x25e>
		{
			NoFault=1;
			LCDinit(); _delay_ms(10); LCDclr(); _delay_ms(10); LCDhome(); _delay_ms(10);
    167c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LCDinit>
    1680:	8f e1       	ldi	r24, 0x1F	; 31
    1682:	9e e4       	ldi	r25, 0x4E	; 78
    1684:	01 97       	sbiw	r24, 0x01	; 1
    1686:	f1 f7       	brne	.-4      	; 0x1684 <main+0xfee>
    1688:	00 c0       	rjmp	.+0      	; 0x168a <main+0xff4>
    168a:	00 00       	nop
    168c:	0e 94 2d 01 	call	0x25a	; 0x25a <LCDclr>
    1690:	ef e1       	ldi	r30, 0x1F	; 31
    1692:	fe e4       	ldi	r31, 0x4E	; 78
    1694:	31 97       	sbiw	r30, 0x01	; 1
    1696:	f1 f7       	brne	.-4      	; 0x1694 <main+0xffe>
    1698:	00 c0       	rjmp	.+0      	; 0x169a <main+0x1004>
    169a:	00 00       	nop
    169c:	0e 94 30 01 	call	0x260	; 0x260 <LCDhome>
    16a0:	8f e1       	ldi	r24, 0x1F	; 31
    16a2:	9e e4       	ldi	r25, 0x4E	; 78
    16a4:	01 97       	sbiw	r24, 0x01	; 1
    16a6:	f1 f7       	brne	.-4      	; 0x16a4 <main+0x100e>
    16a8:	00 c0       	rjmp	.+0      	; 0x16aa <main+0x1014>
    16aa:	00 00       	nop
			LCDGotoXY(0,0); _delay_ms(10);		LCDstring("   SYSTEM       ",16); _delay_ms(10);
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    16b4:	ef e1       	ldi	r30, 0x1F	; 31
    16b6:	fe e4       	ldi	r31, 0x4E	; 78
    16b8:	31 97       	sbiw	r30, 0x01	; 1
    16ba:	f1 f7       	brne	.-4      	; 0x16b8 <main+0x1022>
    16bc:	00 c0       	rjmp	.+0      	; 0x16be <main+0x1028>
    16be:	00 00       	nop
    16c0:	60 e1       	ldi	r22, 0x10	; 16
    16c2:	89 ef       	ldi	r24, 0xF9	; 249
    16c4:	92 e0       	ldi	r25, 0x02	; 2
    16c6:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    16ca:	8f e1       	ldi	r24, 0x1F	; 31
    16cc:	9e e4       	ldi	r25, 0x4E	; 78
    16ce:	01 97       	sbiw	r24, 0x01	; 1
    16d0:	f1 f7       	brne	.-4      	; 0x16ce <main+0x1038>
    16d2:	00 c0       	rjmp	.+0      	; 0x16d4 <main+0x103e>
    16d4:	00 00       	nop
			LCDGotoXY(0,1); _delay_ms(10);		LCDstring("REMOTELY STARTED",16); _delay_ms(10);
    16d6:	61 e0       	ldi	r22, 0x01	; 1
    16d8:	80 e0       	ldi	r24, 0x00	; 0
    16da:	0e 94 41 01 	call	0x282	; 0x282 <LCDGotoXY>
    16de:	ef e1       	ldi	r30, 0x1F	; 31
    16e0:	fe e4       	ldi	r31, 0x4E	; 78
    16e2:	31 97       	sbiw	r30, 0x01	; 1
    16e4:	f1 f7       	brne	.-4      	; 0x16e2 <main+0x104c>
    16e6:	00 c0       	rjmp	.+0      	; 0x16e8 <main+0x1052>
    16e8:	00 00       	nop
    16ea:	60 e1       	ldi	r22, 0x10	; 16
    16ec:	8a e0       	ldi	r24, 0x0A	; 10
    16ee:	93 e0       	ldi	r25, 0x03	; 3
    16f0:	0e 94 33 01 	call	0x266	; 0x266 <LCDstring>
    16f4:	8f e1       	ldi	r24, 0x1F	; 31
    16f6:	9e e4       	ldi	r25, 0x4E	; 78
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	f1 f7       	brne	.-4      	; 0x16f8 <main+0x1062>
    16fc:	00 c0       	rjmp	.+0      	; 0x16fe <main+0x1068>
    16fe:	00 00       	nop
			cbi(PORTA,4);
    1700:	14 98       	cbi	0x02, 4	; 2
    1702:	9f ef       	ldi	r25, 0xFF	; 255
    1704:	e1 e1       	ldi	r30, 0x11	; 17
    1706:	fa e7       	ldi	r31, 0x7A	; 122
    1708:	91 50       	subi	r25, 0x01	; 1
    170a:	e0 40       	sbci	r30, 0x00	; 0
    170c:	f0 40       	sbci	r31, 0x00	; 0
    170e:	e1 f7       	brne	.-8      	; 0x1708 <main+0x1072>
    1710:	00 c0       	rjmp	.+0      	; 0x1712 <main+0x107c>
    1712:	00 00       	nop
			_delay_ms(5000);
			//  Start command
			Send_Command(&SRT_Write_CMD,&Dummy,write);
    1714:	48 e0       	ldi	r20, 0x08	; 8
    1716:	be 01       	movw	r22, r28
    1718:	63 5d       	subi	r22, 0xD3	; 211
    171a:	7f 4f       	sbci	r23, 0xFF	; 255
    171c:	ce 01       	movw	r24, r28
    171e:	89 54       	subi	r24, 0x49	; 73
    1720:	9f 4f       	sbci	r25, 0xFF	; 255
    1722:	0e 94 83 02 	call	0x506	; 0x506 <Send_Command>
			flag_sms=1;
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	80 93 00 01 	sts	0x0100, r24
			_delay_ms(5000);
			sbi(PORTA,4);
		}
		else if((SmS_ShutOff==0x31) && (flag_sms==0))
		{
			NoFault=1;
    172c:	22 24       	eor	r2, r2
    172e:	23 94       	inc	r2
    1730:	e1 c8       	rjmp	.-3646   	; 0x8f4 <main+0x25e>

00001732 <__vector_15>:
	// Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
	return crc;
}

ISR(TIMER1_OVF_vect)
{
    1732:	1f 92       	push	r1
    1734:	0f 92       	push	r0
    1736:	0f b6       	in	r0, 0x3f	; 63
    1738:	0f 92       	push	r0
    173a:	11 24       	eor	r1, r1
    173c:	0b b6       	in	r0, 0x3b	; 59
    173e:	0f 92       	push	r0
    1740:	8f 93       	push	r24
    1742:	ef 93       	push	r30
    1744:	ff 93       	push	r31
	skip = 1;
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	80 93 1d 03 	sts	0x031D, r24
	cbi(TCCR1B,CS12);
    174c:	e1 e8       	ldi	r30, 0x81	; 129
    174e:	f0 e0       	ldi	r31, 0x00	; 0
    1750:	80 81       	ld	r24, Z
    1752:	8b 7f       	andi	r24, 0xFB	; 251
    1754:	80 83       	st	Z, r24
    1756:	ff 91       	pop	r31
    1758:	ef 91       	pop	r30
    175a:	8f 91       	pop	r24
    175c:	0f 90       	pop	r0
    175e:	0b be       	out	0x3b, r0	; 59
    1760:	0f 90       	pop	r0
    1762:	0f be       	out	0x3f, r0	; 63
    1764:	0f 90       	pop	r0
    1766:	1f 90       	pop	r1
    1768:	18 95       	reti

0000176a <UART_0_Init>:
#include <util/delay.h>
#include "UART_0.h"

void UART_0_Init()
{
	UBRR0H = (unsigned char) (((F_CPU/(BAUD*16UL))-1)>>8) ;
    176a:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char) (F_CPU/(BAUD*16UL))-1;
    176e:	83 e3       	ldi	r24, 0x33	; 51
    1770:	80 93 c4 00 	sts	0x00C4, r24
	
	UCSR0A=0x00;
    1774:	10 92 c0 00 	sts	0x00C0, r1
	UCSR0B=0x00;
    1778:	e1 ec       	ldi	r30, 0xC1	; 193
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	10 82       	st	Z, r1

	UCSR0C=0b10000110;
    177e:	86 e8       	ldi	r24, 0x86	; 134
    1780:	80 93 c2 00 	sts	0x00C2, r24
	// Set frame format: asynchronous, 8data, no parity, 1 stop bit

	UCSR0B=0x18;
    1784:	88 e1       	ldi	r24, 0x18	; 24
    1786:	80 83       	st	Z, r24
    1788:	08 95       	ret

0000178a <UART_0_Putc>:
	
}
void UART_0_Putc(unsigned char data)
{

	while ( !(UCSR0A & (1<<UDRE0)) );  /* Wait for empty transmit buffer */
    178a:	e0 ec       	ldi	r30, 0xC0	; 192
    178c:	f0 e0       	ldi	r31, 0x00	; 0
    178e:	90 81       	ld	r25, Z
    1790:	95 ff       	sbrs	r25, 5
    1792:	fd cf       	rjmp	.-6      	; 0x178e <UART_0_Putc+0x4>

	UDR0 = data;         /* Start transmition */
    1794:	80 93 c6 00 	sts	0x00C6, r24
    1798:	08 95       	ret

0000179a <UART_1_Init>:
#include <util/delay.h>
#include "UART_1.h"

void UART_1_Init()
{
	UBRR1H = (unsigned char) (((F_CPU/(BAUD*16UL))-1)>>8) ;
    179a:	10 92 cd 00 	sts	0x00CD, r1
	UBRR1L = (unsigned char) (F_CPU/(BAUD*16UL))-1;
    179e:	83 e3       	ldi	r24, 0x33	; 51
    17a0:	80 93 cc 00 	sts	0x00CC, r24
	
	UCSR1A=0x00;
    17a4:	10 92 c8 00 	sts	0x00C8, r1
	UCSR1B=0x00;
    17a8:	e9 ec       	ldi	r30, 0xC9	; 201
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	10 82       	st	Z, r1

	UCSR1C=0b10000110;
    17ae:	86 e8       	ldi	r24, 0x86	; 134
    17b0:	80 93 ca 00 	sts	0x00CA, r24
	// Set frame format: asynchronous, 8data, no parity, 1 stop bit

	UCSR1B=0x98;
    17b4:	88 e9       	ldi	r24, 0x98	; 152
    17b6:	80 83       	st	Z, r24
    17b8:	08 95       	ret

000017ba <UART_1_Putc>:
	
}
void UART_1_Putc(unsigned char data)
{

	while ( !(UCSR1A & (1<<UDRE1)) );  /* Wait for empty transmit buffer */
    17ba:	e8 ec       	ldi	r30, 0xC8	; 200
    17bc:	f0 e0       	ldi	r31, 0x00	; 0
    17be:	90 81       	ld	r25, Z
    17c0:	95 ff       	sbrs	r25, 5
    17c2:	fd cf       	rjmp	.-6      	; 0x17be <UART_1_Putc+0x4>

	UDR1 = data;         /* Start transmition */
    17c4:	80 93 ce 00 	sts	0x00CE, r24
    17c8:	08 95       	ret

000017ca <UART_1_Puts>:

}
void UART_1_Puts(char *str)
{
    17ca:	cf 93       	push	r28
    17cc:	df 93       	push	r29
    17ce:	ec 01       	movw	r28, r24
	
	while( *str != '\0' ){
    17d0:	88 81       	ld	r24, Y
    17d2:	88 23       	and	r24, r24
    17d4:	29 f0       	breq	.+10     	; 0x17e0 <UART_1_Puts+0x16>
    17d6:	21 96       	adiw	r28, 0x01	; 1
		
		UART_1_Putc( *str++ );
    17d8:	f0 df       	rcall	.-32     	; 0x17ba <UART_1_Putc>

}
void UART_1_Puts(char *str)
{
	
	while( *str != '\0' ){
    17da:	89 91       	ld	r24, Y+
    17dc:	81 11       	cpse	r24, r1
    17de:	fc cf       	rjmp	.-8      	; 0x17d8 <UART_1_Puts+0xe>
		
		UART_1_Putc( *str++ );
	}
}
    17e0:	df 91       	pop	r29
    17e2:	cf 91       	pop	r28
    17e4:	08 95       	ret

000017e6 <__subsf3>:
    17e6:	50 58       	subi	r21, 0x80	; 128

000017e8 <__addsf3>:
    17e8:	bb 27       	eor	r27, r27
    17ea:	aa 27       	eor	r26, r26
    17ec:	0e d0       	rcall	.+28     	; 0x180a <__addsf3x>
    17ee:	1c c1       	rjmp	.+568    	; 0x1a28 <__fp_round>
    17f0:	0d d1       	rcall	.+538    	; 0x1a0c <__fp_pscA>
    17f2:	30 f0       	brcs	.+12     	; 0x1800 <__addsf3+0x18>
    17f4:	12 d1       	rcall	.+548    	; 0x1a1a <__fp_pscB>
    17f6:	20 f0       	brcs	.+8      	; 0x1800 <__addsf3+0x18>
    17f8:	31 f4       	brne	.+12     	; 0x1806 <__addsf3+0x1e>
    17fa:	9f 3f       	cpi	r25, 0xFF	; 255
    17fc:	11 f4       	brne	.+4      	; 0x1802 <__addsf3+0x1a>
    17fe:	1e f4       	brtc	.+6      	; 0x1806 <__addsf3+0x1e>
    1800:	02 c1       	rjmp	.+516    	; 0x1a06 <__fp_nan>
    1802:	0e f4       	brtc	.+2      	; 0x1806 <__addsf3+0x1e>
    1804:	e0 95       	com	r30
    1806:	e7 fb       	bst	r30, 7
    1808:	f8 c0       	rjmp	.+496    	; 0x19fa <__fp_inf>

0000180a <__addsf3x>:
    180a:	e9 2f       	mov	r30, r25
    180c:	1e d1       	rcall	.+572    	; 0x1a4a <__fp_split3>
    180e:	80 f3       	brcs	.-32     	; 0x17f0 <__addsf3+0x8>
    1810:	ba 17       	cp	r27, r26
    1812:	62 07       	cpc	r22, r18
    1814:	73 07       	cpc	r23, r19
    1816:	84 07       	cpc	r24, r20
    1818:	95 07       	cpc	r25, r21
    181a:	18 f0       	brcs	.+6      	; 0x1822 <__addsf3x+0x18>
    181c:	71 f4       	brne	.+28     	; 0x183a <__addsf3x+0x30>
    181e:	9e f5       	brtc	.+102    	; 0x1886 <__addsf3x+0x7c>
    1820:	36 c1       	rjmp	.+620    	; 0x1a8e <__fp_zero>
    1822:	0e f4       	brtc	.+2      	; 0x1826 <__addsf3x+0x1c>
    1824:	e0 95       	com	r30
    1826:	0b 2e       	mov	r0, r27
    1828:	ba 2f       	mov	r27, r26
    182a:	a0 2d       	mov	r26, r0
    182c:	0b 01       	movw	r0, r22
    182e:	b9 01       	movw	r22, r18
    1830:	90 01       	movw	r18, r0
    1832:	0c 01       	movw	r0, r24
    1834:	ca 01       	movw	r24, r20
    1836:	a0 01       	movw	r20, r0
    1838:	11 24       	eor	r1, r1
    183a:	ff 27       	eor	r31, r31
    183c:	59 1b       	sub	r21, r25
    183e:	99 f0       	breq	.+38     	; 0x1866 <__addsf3x+0x5c>
    1840:	59 3f       	cpi	r21, 0xF9	; 249
    1842:	50 f4       	brcc	.+20     	; 0x1858 <__addsf3x+0x4e>
    1844:	50 3e       	cpi	r21, 0xE0	; 224
    1846:	68 f1       	brcs	.+90     	; 0x18a2 <__addsf3x+0x98>
    1848:	1a 16       	cp	r1, r26
    184a:	f0 40       	sbci	r31, 0x00	; 0
    184c:	a2 2f       	mov	r26, r18
    184e:	23 2f       	mov	r18, r19
    1850:	34 2f       	mov	r19, r20
    1852:	44 27       	eor	r20, r20
    1854:	58 5f       	subi	r21, 0xF8	; 248
    1856:	f3 cf       	rjmp	.-26     	; 0x183e <__addsf3x+0x34>
    1858:	46 95       	lsr	r20
    185a:	37 95       	ror	r19
    185c:	27 95       	ror	r18
    185e:	a7 95       	ror	r26
    1860:	f0 40       	sbci	r31, 0x00	; 0
    1862:	53 95       	inc	r21
    1864:	c9 f7       	brne	.-14     	; 0x1858 <__addsf3x+0x4e>
    1866:	7e f4       	brtc	.+30     	; 0x1886 <__addsf3x+0x7c>
    1868:	1f 16       	cp	r1, r31
    186a:	ba 0b       	sbc	r27, r26
    186c:	62 0b       	sbc	r22, r18
    186e:	73 0b       	sbc	r23, r19
    1870:	84 0b       	sbc	r24, r20
    1872:	ba f0       	brmi	.+46     	; 0x18a2 <__addsf3x+0x98>
    1874:	91 50       	subi	r25, 0x01	; 1
    1876:	a1 f0       	breq	.+40     	; 0x18a0 <__addsf3x+0x96>
    1878:	ff 0f       	add	r31, r31
    187a:	bb 1f       	adc	r27, r27
    187c:	66 1f       	adc	r22, r22
    187e:	77 1f       	adc	r23, r23
    1880:	88 1f       	adc	r24, r24
    1882:	c2 f7       	brpl	.-16     	; 0x1874 <__addsf3x+0x6a>
    1884:	0e c0       	rjmp	.+28     	; 0x18a2 <__addsf3x+0x98>
    1886:	ba 0f       	add	r27, r26
    1888:	62 1f       	adc	r22, r18
    188a:	73 1f       	adc	r23, r19
    188c:	84 1f       	adc	r24, r20
    188e:	48 f4       	brcc	.+18     	; 0x18a2 <__addsf3x+0x98>
    1890:	87 95       	ror	r24
    1892:	77 95       	ror	r23
    1894:	67 95       	ror	r22
    1896:	b7 95       	ror	r27
    1898:	f7 95       	ror	r31
    189a:	9e 3f       	cpi	r25, 0xFE	; 254
    189c:	08 f0       	brcs	.+2      	; 0x18a0 <__addsf3x+0x96>
    189e:	b3 cf       	rjmp	.-154    	; 0x1806 <__addsf3+0x1e>
    18a0:	93 95       	inc	r25
    18a2:	88 0f       	add	r24, r24
    18a4:	08 f0       	brcs	.+2      	; 0x18a8 <__addsf3x+0x9e>
    18a6:	99 27       	eor	r25, r25
    18a8:	ee 0f       	add	r30, r30
    18aa:	97 95       	ror	r25
    18ac:	87 95       	ror	r24
    18ae:	08 95       	ret

000018b0 <__divsf3>:
    18b0:	0c d0       	rcall	.+24     	; 0x18ca <__divsf3x>
    18b2:	ba c0       	rjmp	.+372    	; 0x1a28 <__fp_round>
    18b4:	b2 d0       	rcall	.+356    	; 0x1a1a <__fp_pscB>
    18b6:	40 f0       	brcs	.+16     	; 0x18c8 <__divsf3+0x18>
    18b8:	a9 d0       	rcall	.+338    	; 0x1a0c <__fp_pscA>
    18ba:	30 f0       	brcs	.+12     	; 0x18c8 <__divsf3+0x18>
    18bc:	21 f4       	brne	.+8      	; 0x18c6 <__divsf3+0x16>
    18be:	5f 3f       	cpi	r21, 0xFF	; 255
    18c0:	19 f0       	breq	.+6      	; 0x18c8 <__divsf3+0x18>
    18c2:	9b c0       	rjmp	.+310    	; 0x19fa <__fp_inf>
    18c4:	51 11       	cpse	r21, r1
    18c6:	e4 c0       	rjmp	.+456    	; 0x1a90 <__fp_szero>
    18c8:	9e c0       	rjmp	.+316    	; 0x1a06 <__fp_nan>

000018ca <__divsf3x>:
    18ca:	bf d0       	rcall	.+382    	; 0x1a4a <__fp_split3>
    18cc:	98 f3       	brcs	.-26     	; 0x18b4 <__divsf3+0x4>

000018ce <__divsf3_pse>:
    18ce:	99 23       	and	r25, r25
    18d0:	c9 f3       	breq	.-14     	; 0x18c4 <__divsf3+0x14>
    18d2:	55 23       	and	r21, r21
    18d4:	b1 f3       	breq	.-20     	; 0x18c2 <__divsf3+0x12>
    18d6:	95 1b       	sub	r25, r21
    18d8:	55 0b       	sbc	r21, r21
    18da:	bb 27       	eor	r27, r27
    18dc:	aa 27       	eor	r26, r26
    18de:	62 17       	cp	r22, r18
    18e0:	73 07       	cpc	r23, r19
    18e2:	84 07       	cpc	r24, r20
    18e4:	38 f0       	brcs	.+14     	; 0x18f4 <__divsf3_pse+0x26>
    18e6:	9f 5f       	subi	r25, 0xFF	; 255
    18e8:	5f 4f       	sbci	r21, 0xFF	; 255
    18ea:	22 0f       	add	r18, r18
    18ec:	33 1f       	adc	r19, r19
    18ee:	44 1f       	adc	r20, r20
    18f0:	aa 1f       	adc	r26, r26
    18f2:	a9 f3       	breq	.-22     	; 0x18de <__divsf3_pse+0x10>
    18f4:	33 d0       	rcall	.+102    	; 0x195c <__divsf3_pse+0x8e>
    18f6:	0e 2e       	mov	r0, r30
    18f8:	3a f0       	brmi	.+14     	; 0x1908 <__divsf3_pse+0x3a>
    18fa:	e0 e8       	ldi	r30, 0x80	; 128
    18fc:	30 d0       	rcall	.+96     	; 0x195e <__divsf3_pse+0x90>
    18fe:	91 50       	subi	r25, 0x01	; 1
    1900:	50 40       	sbci	r21, 0x00	; 0
    1902:	e6 95       	lsr	r30
    1904:	00 1c       	adc	r0, r0
    1906:	ca f7       	brpl	.-14     	; 0x18fa <__divsf3_pse+0x2c>
    1908:	29 d0       	rcall	.+82     	; 0x195c <__divsf3_pse+0x8e>
    190a:	fe 2f       	mov	r31, r30
    190c:	27 d0       	rcall	.+78     	; 0x195c <__divsf3_pse+0x8e>
    190e:	66 0f       	add	r22, r22
    1910:	77 1f       	adc	r23, r23
    1912:	88 1f       	adc	r24, r24
    1914:	bb 1f       	adc	r27, r27
    1916:	26 17       	cp	r18, r22
    1918:	37 07       	cpc	r19, r23
    191a:	48 07       	cpc	r20, r24
    191c:	ab 07       	cpc	r26, r27
    191e:	b0 e8       	ldi	r27, 0x80	; 128
    1920:	09 f0       	breq	.+2      	; 0x1924 <__divsf3_pse+0x56>
    1922:	bb 0b       	sbc	r27, r27
    1924:	80 2d       	mov	r24, r0
    1926:	bf 01       	movw	r22, r30
    1928:	ff 27       	eor	r31, r31
    192a:	93 58       	subi	r25, 0x83	; 131
    192c:	5f 4f       	sbci	r21, 0xFF	; 255
    192e:	2a f0       	brmi	.+10     	; 0x193a <__divsf3_pse+0x6c>
    1930:	9e 3f       	cpi	r25, 0xFE	; 254
    1932:	51 05       	cpc	r21, r1
    1934:	68 f0       	brcs	.+26     	; 0x1950 <__divsf3_pse+0x82>
    1936:	61 c0       	rjmp	.+194    	; 0x19fa <__fp_inf>
    1938:	ab c0       	rjmp	.+342    	; 0x1a90 <__fp_szero>
    193a:	5f 3f       	cpi	r21, 0xFF	; 255
    193c:	ec f3       	brlt	.-6      	; 0x1938 <__divsf3_pse+0x6a>
    193e:	98 3e       	cpi	r25, 0xE8	; 232
    1940:	dc f3       	brlt	.-10     	; 0x1938 <__divsf3_pse+0x6a>
    1942:	86 95       	lsr	r24
    1944:	77 95       	ror	r23
    1946:	67 95       	ror	r22
    1948:	b7 95       	ror	r27
    194a:	f7 95       	ror	r31
    194c:	9f 5f       	subi	r25, 0xFF	; 255
    194e:	c9 f7       	brne	.-14     	; 0x1942 <__divsf3_pse+0x74>
    1950:	88 0f       	add	r24, r24
    1952:	91 1d       	adc	r25, r1
    1954:	96 95       	lsr	r25
    1956:	87 95       	ror	r24
    1958:	97 f9       	bld	r25, 7
    195a:	08 95       	ret
    195c:	e1 e0       	ldi	r30, 0x01	; 1
    195e:	66 0f       	add	r22, r22
    1960:	77 1f       	adc	r23, r23
    1962:	88 1f       	adc	r24, r24
    1964:	bb 1f       	adc	r27, r27
    1966:	62 17       	cp	r22, r18
    1968:	73 07       	cpc	r23, r19
    196a:	84 07       	cpc	r24, r20
    196c:	ba 07       	cpc	r27, r26
    196e:	20 f0       	brcs	.+8      	; 0x1978 <__divsf3_pse+0xaa>
    1970:	62 1b       	sub	r22, r18
    1972:	73 0b       	sbc	r23, r19
    1974:	84 0b       	sbc	r24, r20
    1976:	ba 0b       	sbc	r27, r26
    1978:	ee 1f       	adc	r30, r30
    197a:	88 f7       	brcc	.-30     	; 0x195e <__divsf3_pse+0x90>
    197c:	e0 95       	com	r30
    197e:	08 95       	ret

00001980 <__floatunsisf>:
    1980:	e8 94       	clt
    1982:	09 c0       	rjmp	.+18     	; 0x1996 <__floatsisf+0x12>

00001984 <__floatsisf>:
    1984:	97 fb       	bst	r25, 7
    1986:	3e f4       	brtc	.+14     	; 0x1996 <__floatsisf+0x12>
    1988:	90 95       	com	r25
    198a:	80 95       	com	r24
    198c:	70 95       	com	r23
    198e:	61 95       	neg	r22
    1990:	7f 4f       	sbci	r23, 0xFF	; 255
    1992:	8f 4f       	sbci	r24, 0xFF	; 255
    1994:	9f 4f       	sbci	r25, 0xFF	; 255
    1996:	99 23       	and	r25, r25
    1998:	a9 f0       	breq	.+42     	; 0x19c4 <__floatsisf+0x40>
    199a:	f9 2f       	mov	r31, r25
    199c:	96 e9       	ldi	r25, 0x96	; 150
    199e:	bb 27       	eor	r27, r27
    19a0:	93 95       	inc	r25
    19a2:	f6 95       	lsr	r31
    19a4:	87 95       	ror	r24
    19a6:	77 95       	ror	r23
    19a8:	67 95       	ror	r22
    19aa:	b7 95       	ror	r27
    19ac:	f1 11       	cpse	r31, r1
    19ae:	f8 cf       	rjmp	.-16     	; 0x19a0 <__floatsisf+0x1c>
    19b0:	fa f4       	brpl	.+62     	; 0x19f0 <__floatsisf+0x6c>
    19b2:	bb 0f       	add	r27, r27
    19b4:	11 f4       	brne	.+4      	; 0x19ba <__floatsisf+0x36>
    19b6:	60 ff       	sbrs	r22, 0
    19b8:	1b c0       	rjmp	.+54     	; 0x19f0 <__floatsisf+0x6c>
    19ba:	6f 5f       	subi	r22, 0xFF	; 255
    19bc:	7f 4f       	sbci	r23, 0xFF	; 255
    19be:	8f 4f       	sbci	r24, 0xFF	; 255
    19c0:	9f 4f       	sbci	r25, 0xFF	; 255
    19c2:	16 c0       	rjmp	.+44     	; 0x19f0 <__floatsisf+0x6c>
    19c4:	88 23       	and	r24, r24
    19c6:	11 f0       	breq	.+4      	; 0x19cc <__floatsisf+0x48>
    19c8:	96 e9       	ldi	r25, 0x96	; 150
    19ca:	11 c0       	rjmp	.+34     	; 0x19ee <__floatsisf+0x6a>
    19cc:	77 23       	and	r23, r23
    19ce:	21 f0       	breq	.+8      	; 0x19d8 <__floatsisf+0x54>
    19d0:	9e e8       	ldi	r25, 0x8E	; 142
    19d2:	87 2f       	mov	r24, r23
    19d4:	76 2f       	mov	r23, r22
    19d6:	05 c0       	rjmp	.+10     	; 0x19e2 <__floatsisf+0x5e>
    19d8:	66 23       	and	r22, r22
    19da:	71 f0       	breq	.+28     	; 0x19f8 <__floatsisf+0x74>
    19dc:	96 e8       	ldi	r25, 0x86	; 134
    19de:	86 2f       	mov	r24, r22
    19e0:	70 e0       	ldi	r23, 0x00	; 0
    19e2:	60 e0       	ldi	r22, 0x00	; 0
    19e4:	2a f0       	brmi	.+10     	; 0x19f0 <__floatsisf+0x6c>
    19e6:	9a 95       	dec	r25
    19e8:	66 0f       	add	r22, r22
    19ea:	77 1f       	adc	r23, r23
    19ec:	88 1f       	adc	r24, r24
    19ee:	da f7       	brpl	.-10     	; 0x19e6 <__floatsisf+0x62>
    19f0:	88 0f       	add	r24, r24
    19f2:	96 95       	lsr	r25
    19f4:	87 95       	ror	r24
    19f6:	97 f9       	bld	r25, 7
    19f8:	08 95       	ret

000019fa <__fp_inf>:
    19fa:	97 f9       	bld	r25, 7
    19fc:	9f 67       	ori	r25, 0x7F	; 127
    19fe:	80 e8       	ldi	r24, 0x80	; 128
    1a00:	70 e0       	ldi	r23, 0x00	; 0
    1a02:	60 e0       	ldi	r22, 0x00	; 0
    1a04:	08 95       	ret

00001a06 <__fp_nan>:
    1a06:	9f ef       	ldi	r25, 0xFF	; 255
    1a08:	80 ec       	ldi	r24, 0xC0	; 192
    1a0a:	08 95       	ret

00001a0c <__fp_pscA>:
    1a0c:	00 24       	eor	r0, r0
    1a0e:	0a 94       	dec	r0
    1a10:	16 16       	cp	r1, r22
    1a12:	17 06       	cpc	r1, r23
    1a14:	18 06       	cpc	r1, r24
    1a16:	09 06       	cpc	r0, r25
    1a18:	08 95       	ret

00001a1a <__fp_pscB>:
    1a1a:	00 24       	eor	r0, r0
    1a1c:	0a 94       	dec	r0
    1a1e:	12 16       	cp	r1, r18
    1a20:	13 06       	cpc	r1, r19
    1a22:	14 06       	cpc	r1, r20
    1a24:	05 06       	cpc	r0, r21
    1a26:	08 95       	ret

00001a28 <__fp_round>:
    1a28:	09 2e       	mov	r0, r25
    1a2a:	03 94       	inc	r0
    1a2c:	00 0c       	add	r0, r0
    1a2e:	11 f4       	brne	.+4      	; 0x1a34 <__fp_round+0xc>
    1a30:	88 23       	and	r24, r24
    1a32:	52 f0       	brmi	.+20     	; 0x1a48 <__fp_round+0x20>
    1a34:	bb 0f       	add	r27, r27
    1a36:	40 f4       	brcc	.+16     	; 0x1a48 <__fp_round+0x20>
    1a38:	bf 2b       	or	r27, r31
    1a3a:	11 f4       	brne	.+4      	; 0x1a40 <__fp_round+0x18>
    1a3c:	60 ff       	sbrs	r22, 0
    1a3e:	04 c0       	rjmp	.+8      	; 0x1a48 <__fp_round+0x20>
    1a40:	6f 5f       	subi	r22, 0xFF	; 255
    1a42:	7f 4f       	sbci	r23, 0xFF	; 255
    1a44:	8f 4f       	sbci	r24, 0xFF	; 255
    1a46:	9f 4f       	sbci	r25, 0xFF	; 255
    1a48:	08 95       	ret

00001a4a <__fp_split3>:
    1a4a:	57 fd       	sbrc	r21, 7
    1a4c:	90 58       	subi	r25, 0x80	; 128
    1a4e:	44 0f       	add	r20, r20
    1a50:	55 1f       	adc	r21, r21
    1a52:	59 f0       	breq	.+22     	; 0x1a6a <__fp_splitA+0x10>
    1a54:	5f 3f       	cpi	r21, 0xFF	; 255
    1a56:	71 f0       	breq	.+28     	; 0x1a74 <__fp_splitA+0x1a>
    1a58:	47 95       	ror	r20

00001a5a <__fp_splitA>:
    1a5a:	88 0f       	add	r24, r24
    1a5c:	97 fb       	bst	r25, 7
    1a5e:	99 1f       	adc	r25, r25
    1a60:	61 f0       	breq	.+24     	; 0x1a7a <__fp_splitA+0x20>
    1a62:	9f 3f       	cpi	r25, 0xFF	; 255
    1a64:	79 f0       	breq	.+30     	; 0x1a84 <__fp_splitA+0x2a>
    1a66:	87 95       	ror	r24
    1a68:	08 95       	ret
    1a6a:	12 16       	cp	r1, r18
    1a6c:	13 06       	cpc	r1, r19
    1a6e:	14 06       	cpc	r1, r20
    1a70:	55 1f       	adc	r21, r21
    1a72:	f2 cf       	rjmp	.-28     	; 0x1a58 <__fp_split3+0xe>
    1a74:	46 95       	lsr	r20
    1a76:	f1 df       	rcall	.-30     	; 0x1a5a <__fp_splitA>
    1a78:	08 c0       	rjmp	.+16     	; 0x1a8a <__fp_splitA+0x30>
    1a7a:	16 16       	cp	r1, r22
    1a7c:	17 06       	cpc	r1, r23
    1a7e:	18 06       	cpc	r1, r24
    1a80:	99 1f       	adc	r25, r25
    1a82:	f1 cf       	rjmp	.-30     	; 0x1a66 <__fp_splitA+0xc>
    1a84:	86 95       	lsr	r24
    1a86:	71 05       	cpc	r23, r1
    1a88:	61 05       	cpc	r22, r1
    1a8a:	08 94       	sec
    1a8c:	08 95       	ret

00001a8e <__fp_zero>:
    1a8e:	e8 94       	clt

00001a90 <__fp_szero>:
    1a90:	bb 27       	eor	r27, r27
    1a92:	66 27       	eor	r22, r22
    1a94:	77 27       	eor	r23, r23
    1a96:	cb 01       	movw	r24, r22
    1a98:	97 f9       	bld	r25, 7
    1a9a:	08 95       	ret

00001a9c <__divmodhi4>:
    1a9c:	97 fb       	bst	r25, 7
    1a9e:	07 2e       	mov	r0, r23
    1aa0:	16 f4       	brtc	.+4      	; 0x1aa6 <__divmodhi4+0xa>
    1aa2:	00 94       	com	r0
    1aa4:	06 d0       	rcall	.+12     	; 0x1ab2 <__divmodhi4_neg1>
    1aa6:	77 fd       	sbrc	r23, 7
    1aa8:	08 d0       	rcall	.+16     	; 0x1aba <__divmodhi4_neg2>
    1aaa:	0b d0       	rcall	.+22     	; 0x1ac2 <__udivmodhi4>
    1aac:	07 fc       	sbrc	r0, 7
    1aae:	05 d0       	rcall	.+10     	; 0x1aba <__divmodhi4_neg2>
    1ab0:	3e f4       	brtc	.+14     	; 0x1ac0 <__divmodhi4_exit>

00001ab2 <__divmodhi4_neg1>:
    1ab2:	90 95       	com	r25
    1ab4:	81 95       	neg	r24
    1ab6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab8:	08 95       	ret

00001aba <__divmodhi4_neg2>:
    1aba:	70 95       	com	r23
    1abc:	61 95       	neg	r22
    1abe:	7f 4f       	sbci	r23, 0xFF	; 255

00001ac0 <__divmodhi4_exit>:
    1ac0:	08 95       	ret

00001ac2 <__udivmodhi4>:
    1ac2:	aa 1b       	sub	r26, r26
    1ac4:	bb 1b       	sub	r27, r27
    1ac6:	51 e1       	ldi	r21, 0x11	; 17
    1ac8:	07 c0       	rjmp	.+14     	; 0x1ad8 <__udivmodhi4_ep>

00001aca <__udivmodhi4_loop>:
    1aca:	aa 1f       	adc	r26, r26
    1acc:	bb 1f       	adc	r27, r27
    1ace:	a6 17       	cp	r26, r22
    1ad0:	b7 07       	cpc	r27, r23
    1ad2:	10 f0       	brcs	.+4      	; 0x1ad8 <__udivmodhi4_ep>
    1ad4:	a6 1b       	sub	r26, r22
    1ad6:	b7 0b       	sbc	r27, r23

00001ad8 <__udivmodhi4_ep>:
    1ad8:	88 1f       	adc	r24, r24
    1ada:	99 1f       	adc	r25, r25
    1adc:	5a 95       	dec	r21
    1ade:	a9 f7       	brne	.-22     	; 0x1aca <__udivmodhi4_loop>
    1ae0:	80 95       	com	r24
    1ae2:	90 95       	com	r25
    1ae4:	bc 01       	movw	r22, r24
    1ae6:	cd 01       	movw	r24, r26
    1ae8:	08 95       	ret

00001aea <dtostrf>:
    1aea:	ef 92       	push	r14
    1aec:	0f 93       	push	r16
    1aee:	1f 93       	push	r17
    1af0:	cf 93       	push	r28
    1af2:	df 93       	push	r29
    1af4:	e8 01       	movw	r28, r16
    1af6:	47 fd       	sbrc	r20, 7
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <dtostrf+0x14>
    1afa:	34 e0       	ldi	r19, 0x04	; 4
    1afc:	01 c0       	rjmp	.+2      	; 0x1b00 <dtostrf+0x16>
    1afe:	34 e1       	ldi	r19, 0x14	; 20
    1b00:	e4 2f       	mov	r30, r20
    1b02:	44 0f       	add	r20, r20
    1b04:	ff 0b       	sbc	r31, r31
    1b06:	f7 ff       	sbrs	r31, 7
    1b08:	03 c0       	rjmp	.+6      	; 0x1b10 <dtostrf+0x26>
    1b0a:	f1 95       	neg	r31
    1b0c:	e1 95       	neg	r30
    1b0e:	f1 09       	sbc	r31, r1
    1b10:	e3 2e       	mov	r14, r19
    1b12:	02 2f       	mov	r16, r18
    1b14:	2e 2f       	mov	r18, r30
    1b16:	ae 01       	movw	r20, r28
    1b18:	34 d0       	rcall	.+104    	; 0x1b82 <dtoa_prf>
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	df 91       	pop	r29
    1b1e:	cf 91       	pop	r28
    1b20:	1f 91       	pop	r17
    1b22:	0f 91       	pop	r16
    1b24:	ef 90       	pop	r14
    1b26:	08 95       	ret

00001b28 <itoa>:
    1b28:	45 32       	cpi	r20, 0x25	; 37
    1b2a:	51 05       	cpc	r21, r1
    1b2c:	18 f4       	brcc	.+6      	; 0x1b34 <itoa+0xc>
    1b2e:	42 30       	cpi	r20, 0x02	; 2
    1b30:	08 f0       	brcs	.+2      	; 0x1b34 <itoa+0xc>
    1b32:	04 c0       	rjmp	.+8      	; 0x1b3c <__itoa_ncheck>
    1b34:	fb 01       	movw	r30, r22
    1b36:	10 82       	st	Z, r1
    1b38:	cb 01       	movw	r24, r22
    1b3a:	08 95       	ret

00001b3c <__itoa_ncheck>:
    1b3c:	bb 27       	eor	r27, r27
    1b3e:	4a 30       	cpi	r20, 0x0A	; 10
    1b40:	31 f4       	brne	.+12     	; 0x1b4e <__itoa_ncheck+0x12>
    1b42:	99 23       	and	r25, r25
    1b44:	22 f4       	brpl	.+8      	; 0x1b4e <__itoa_ncheck+0x12>
    1b46:	bd e2       	ldi	r27, 0x2D	; 45
    1b48:	90 95       	com	r25
    1b4a:	81 95       	neg	r24
    1b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4e:	01 c0       	rjmp	.+2      	; 0x1b52 <__utoa_common>

00001b50 <__utoa_ncheck>:
    1b50:	bb 27       	eor	r27, r27

00001b52 <__utoa_common>:
    1b52:	fb 01       	movw	r30, r22
    1b54:	55 27       	eor	r21, r21
    1b56:	aa 27       	eor	r26, r26
    1b58:	88 0f       	add	r24, r24
    1b5a:	99 1f       	adc	r25, r25
    1b5c:	aa 1f       	adc	r26, r26
    1b5e:	a4 17       	cp	r26, r20
    1b60:	10 f0       	brcs	.+4      	; 0x1b66 <__utoa_common+0x14>
    1b62:	a4 1b       	sub	r26, r20
    1b64:	83 95       	inc	r24
    1b66:	50 51       	subi	r21, 0x10	; 16
    1b68:	b9 f7       	brne	.-18     	; 0x1b58 <__utoa_common+0x6>
    1b6a:	a0 5d       	subi	r26, 0xD0	; 208
    1b6c:	aa 33       	cpi	r26, 0x3A	; 58
    1b6e:	08 f0       	brcs	.+2      	; 0x1b72 <__utoa_common+0x20>
    1b70:	a9 5d       	subi	r26, 0xD9	; 217
    1b72:	a1 93       	st	Z+, r26
    1b74:	00 97       	sbiw	r24, 0x00	; 0
    1b76:	79 f7       	brne	.-34     	; 0x1b56 <__utoa_common+0x4>
    1b78:	b1 11       	cpse	r27, r1
    1b7a:	b1 93       	st	Z+, r27
    1b7c:	11 92       	st	Z+, r1
    1b7e:	cb 01       	movw	r24, r22
    1b80:	65 c2       	rjmp	.+1226   	; 0x204c <strrev>

00001b82 <dtoa_prf>:
    1b82:	4f 92       	push	r4
    1b84:	5f 92       	push	r5
    1b86:	6f 92       	push	r6
    1b88:	7f 92       	push	r7
    1b8a:	9f 92       	push	r9
    1b8c:	af 92       	push	r10
    1b8e:	bf 92       	push	r11
    1b90:	cf 92       	push	r12
    1b92:	df 92       	push	r13
    1b94:	ef 92       	push	r14
    1b96:	ff 92       	push	r15
    1b98:	0f 93       	push	r16
    1b9a:	1f 93       	push	r17
    1b9c:	cf 93       	push	r28
    1b9e:	df 93       	push	r29
    1ba0:	cd b7       	in	r28, 0x3d	; 61
    1ba2:	de b7       	in	r29, 0x3e	; 62
    1ba4:	29 97       	sbiw	r28, 0x09	; 9
    1ba6:	0f b6       	in	r0, 0x3f	; 63
    1ba8:	f8 94       	cli
    1baa:	de bf       	out	0x3e, r29	; 62
    1bac:	0f be       	out	0x3f, r0	; 63
    1bae:	cd bf       	out	0x3d, r28	; 61
    1bb0:	6a 01       	movw	r12, r20
    1bb2:	12 2f       	mov	r17, r18
    1bb4:	b0 2e       	mov	r11, r16
    1bb6:	2b e3       	ldi	r18, 0x3B	; 59
    1bb8:	20 17       	cp	r18, r16
    1bba:	20 f0       	brcs	.+8      	; 0x1bc4 <dtoa_prf+0x42>
    1bbc:	ff 24       	eor	r15, r15
    1bbe:	f3 94       	inc	r15
    1bc0:	f0 0e       	add	r15, r16
    1bc2:	02 c0       	rjmp	.+4      	; 0x1bc8 <dtoa_prf+0x46>
    1bc4:	bc e3       	ldi	r27, 0x3C	; 60
    1bc6:	fb 2e       	mov	r15, r27
    1bc8:	0f 2d       	mov	r16, r15
    1bca:	27 e0       	ldi	r18, 0x07	; 7
    1bcc:	ae 01       	movw	r20, r28
    1bce:	4f 5f       	subi	r20, 0xFF	; 255
    1bd0:	5f 4f       	sbci	r21, 0xFF	; 255
    1bd2:	64 d1       	rcall	.+712    	; 0x1e9c <__ftoa_engine>
    1bd4:	ac 01       	movw	r20, r24
    1bd6:	89 81       	ldd	r24, Y+1	; 0x01
    1bd8:	98 2f       	mov	r25, r24
    1bda:	99 70       	andi	r25, 0x09	; 9
    1bdc:	91 30       	cpi	r25, 0x01	; 1
    1bde:	31 f0       	breq	.+12     	; 0x1bec <dtoa_prf+0x6a>
    1be0:	e1 fc       	sbrc	r14, 1
    1be2:	06 c0       	rjmp	.+12     	; 0x1bf0 <dtoa_prf+0x6e>
    1be4:	e0 fe       	sbrs	r14, 0
    1be6:	06 c0       	rjmp	.+12     	; 0x1bf4 <dtoa_prf+0x72>
    1be8:	90 e2       	ldi	r25, 0x20	; 32
    1bea:	05 c0       	rjmp	.+10     	; 0x1bf6 <dtoa_prf+0x74>
    1bec:	9d e2       	ldi	r25, 0x2D	; 45
    1bee:	03 c0       	rjmp	.+6      	; 0x1bf6 <dtoa_prf+0x74>
    1bf0:	9b e2       	ldi	r25, 0x2B	; 43
    1bf2:	01 c0       	rjmp	.+2      	; 0x1bf6 <dtoa_prf+0x74>
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	ee 2d       	mov	r30, r14
    1bf8:	e0 71       	andi	r30, 0x10	; 16
    1bfa:	83 ff       	sbrs	r24, 3
    1bfc:	3c c0       	rjmp	.+120    	; 0x1c76 <dtoa_prf+0xf4>
    1bfe:	91 11       	cpse	r25, r1
    1c00:	02 c0       	rjmp	.+4      	; 0x1c06 <dtoa_prf+0x84>
    1c02:	83 e0       	ldi	r24, 0x03	; 3
    1c04:	01 c0       	rjmp	.+2      	; 0x1c08 <dtoa_prf+0x86>
    1c06:	84 e0       	ldi	r24, 0x04	; 4
    1c08:	81 17       	cp	r24, r17
    1c0a:	18 f4       	brcc	.+6      	; 0x1c12 <dtoa_prf+0x90>
    1c0c:	21 2f       	mov	r18, r17
    1c0e:	28 1b       	sub	r18, r24
    1c10:	01 c0       	rjmp	.+2      	; 0x1c14 <dtoa_prf+0x92>
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	e1 11       	cpse	r30, r1
    1c16:	0b c0       	rjmp	.+22     	; 0x1c2e <dtoa_prf+0xac>
    1c18:	f6 01       	movw	r30, r12
    1c1a:	82 2f       	mov	r24, r18
    1c1c:	30 e2       	ldi	r19, 0x20	; 32
    1c1e:	88 23       	and	r24, r24
    1c20:	19 f0       	breq	.+6      	; 0x1c28 <dtoa_prf+0xa6>
    1c22:	31 93       	st	Z+, r19
    1c24:	81 50       	subi	r24, 0x01	; 1
    1c26:	fb cf       	rjmp	.-10     	; 0x1c1e <dtoa_prf+0x9c>
    1c28:	c2 0e       	add	r12, r18
    1c2a:	d1 1c       	adc	r13, r1
    1c2c:	20 e0       	ldi	r18, 0x00	; 0
    1c2e:	99 23       	and	r25, r25
    1c30:	29 f0       	breq	.+10     	; 0x1c3c <dtoa_prf+0xba>
    1c32:	d6 01       	movw	r26, r12
    1c34:	9c 93       	st	X, r25
    1c36:	f6 01       	movw	r30, r12
    1c38:	31 96       	adiw	r30, 0x01	; 1
    1c3a:	6f 01       	movw	r12, r30
    1c3c:	c6 01       	movw	r24, r12
    1c3e:	03 96       	adiw	r24, 0x03	; 3
    1c40:	e2 fe       	sbrs	r14, 2
    1c42:	0a c0       	rjmp	.+20     	; 0x1c58 <dtoa_prf+0xd6>
    1c44:	3e e4       	ldi	r19, 0x4E	; 78
    1c46:	d6 01       	movw	r26, r12
    1c48:	3c 93       	st	X, r19
    1c4a:	41 e4       	ldi	r20, 0x41	; 65
    1c4c:	11 96       	adiw	r26, 0x01	; 1
    1c4e:	4c 93       	st	X, r20
    1c50:	11 97       	sbiw	r26, 0x01	; 1
    1c52:	12 96       	adiw	r26, 0x02	; 2
    1c54:	3c 93       	st	X, r19
    1c56:	06 c0       	rjmp	.+12     	; 0x1c64 <dtoa_prf+0xe2>
    1c58:	3e e6       	ldi	r19, 0x6E	; 110
    1c5a:	f6 01       	movw	r30, r12
    1c5c:	30 83       	st	Z, r19
    1c5e:	41 e6       	ldi	r20, 0x61	; 97
    1c60:	41 83       	std	Z+1, r20	; 0x01
    1c62:	32 83       	std	Z+2, r19	; 0x02
    1c64:	fc 01       	movw	r30, r24
    1c66:	32 2f       	mov	r19, r18
    1c68:	40 e2       	ldi	r20, 0x20	; 32
    1c6a:	33 23       	and	r19, r19
    1c6c:	09 f4       	brne	.+2      	; 0x1c70 <dtoa_prf+0xee>
    1c6e:	42 c0       	rjmp	.+132    	; 0x1cf4 <dtoa_prf+0x172>
    1c70:	41 93       	st	Z+, r20
    1c72:	31 50       	subi	r19, 0x01	; 1
    1c74:	fa cf       	rjmp	.-12     	; 0x1c6a <dtoa_prf+0xe8>
    1c76:	82 ff       	sbrs	r24, 2
    1c78:	44 c0       	rjmp	.+136    	; 0x1d02 <dtoa_prf+0x180>
    1c7a:	91 11       	cpse	r25, r1
    1c7c:	02 c0       	rjmp	.+4      	; 0x1c82 <dtoa_prf+0x100>
    1c7e:	83 e0       	ldi	r24, 0x03	; 3
    1c80:	01 c0       	rjmp	.+2      	; 0x1c84 <dtoa_prf+0x102>
    1c82:	84 e0       	ldi	r24, 0x04	; 4
    1c84:	81 17       	cp	r24, r17
    1c86:	18 f4       	brcc	.+6      	; 0x1c8e <dtoa_prf+0x10c>
    1c88:	21 2f       	mov	r18, r17
    1c8a:	28 1b       	sub	r18, r24
    1c8c:	01 c0       	rjmp	.+2      	; 0x1c90 <dtoa_prf+0x10e>
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	e1 11       	cpse	r30, r1
    1c92:	0b c0       	rjmp	.+22     	; 0x1caa <dtoa_prf+0x128>
    1c94:	f6 01       	movw	r30, r12
    1c96:	82 2f       	mov	r24, r18
    1c98:	30 e2       	ldi	r19, 0x20	; 32
    1c9a:	88 23       	and	r24, r24
    1c9c:	19 f0       	breq	.+6      	; 0x1ca4 <dtoa_prf+0x122>
    1c9e:	31 93       	st	Z+, r19
    1ca0:	81 50       	subi	r24, 0x01	; 1
    1ca2:	fb cf       	rjmp	.-10     	; 0x1c9a <dtoa_prf+0x118>
    1ca4:	c2 0e       	add	r12, r18
    1ca6:	d1 1c       	adc	r13, r1
    1ca8:	20 e0       	ldi	r18, 0x00	; 0
    1caa:	99 23       	and	r25, r25
    1cac:	29 f0       	breq	.+10     	; 0x1cb8 <dtoa_prf+0x136>
    1cae:	d6 01       	movw	r26, r12
    1cb0:	9c 93       	st	X, r25
    1cb2:	f6 01       	movw	r30, r12
    1cb4:	31 96       	adiw	r30, 0x01	; 1
    1cb6:	6f 01       	movw	r12, r30
    1cb8:	c6 01       	movw	r24, r12
    1cba:	03 96       	adiw	r24, 0x03	; 3
    1cbc:	e2 fe       	sbrs	r14, 2
    1cbe:	0b c0       	rjmp	.+22     	; 0x1cd6 <dtoa_prf+0x154>
    1cc0:	39 e4       	ldi	r19, 0x49	; 73
    1cc2:	d6 01       	movw	r26, r12
    1cc4:	3c 93       	st	X, r19
    1cc6:	3e e4       	ldi	r19, 0x4E	; 78
    1cc8:	11 96       	adiw	r26, 0x01	; 1
    1cca:	3c 93       	st	X, r19
    1ccc:	11 97       	sbiw	r26, 0x01	; 1
    1cce:	36 e4       	ldi	r19, 0x46	; 70
    1cd0:	12 96       	adiw	r26, 0x02	; 2
    1cd2:	3c 93       	st	X, r19
    1cd4:	07 c0       	rjmp	.+14     	; 0x1ce4 <dtoa_prf+0x162>
    1cd6:	39 e6       	ldi	r19, 0x69	; 105
    1cd8:	f6 01       	movw	r30, r12
    1cda:	30 83       	st	Z, r19
    1cdc:	3e e6       	ldi	r19, 0x6E	; 110
    1cde:	31 83       	std	Z+1, r19	; 0x01
    1ce0:	36 e6       	ldi	r19, 0x66	; 102
    1ce2:	32 83       	std	Z+2, r19	; 0x02
    1ce4:	fc 01       	movw	r30, r24
    1ce6:	32 2f       	mov	r19, r18
    1ce8:	40 e2       	ldi	r20, 0x20	; 32
    1cea:	33 23       	and	r19, r19
    1cec:	19 f0       	breq	.+6      	; 0x1cf4 <dtoa_prf+0x172>
    1cee:	41 93       	st	Z+, r20
    1cf0:	31 50       	subi	r19, 0x01	; 1
    1cf2:	fb cf       	rjmp	.-10     	; 0x1cea <dtoa_prf+0x168>
    1cf4:	fc 01       	movw	r30, r24
    1cf6:	e2 0f       	add	r30, r18
    1cf8:	f1 1d       	adc	r31, r1
    1cfa:	10 82       	st	Z, r1
    1cfc:	8e ef       	ldi	r24, 0xFE	; 254
    1cfe:	9f ef       	ldi	r25, 0xFF	; 255
    1d00:	b7 c0       	rjmp	.+366    	; 0x1e70 <dtoa_prf+0x2ee>
    1d02:	f1 e0       	ldi	r31, 0x01	; 1
    1d04:	91 11       	cpse	r25, r1
    1d06:	01 c0       	rjmp	.+2      	; 0x1d0a <dtoa_prf+0x188>
    1d08:	f0 e0       	ldi	r31, 0x00	; 0
    1d0a:	6f 2f       	mov	r22, r31
    1d0c:	70 e0       	ldi	r23, 0x00	; 0
    1d0e:	14 16       	cp	r1, r20
    1d10:	15 06       	cpc	r1, r21
    1d12:	24 f4       	brge	.+8      	; 0x1d1c <dtoa_prf+0x19a>
    1d14:	9a 01       	movw	r18, r20
    1d16:	2f 5f       	subi	r18, 0xFF	; 255
    1d18:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1a:	02 c0       	rjmp	.+4      	; 0x1d20 <dtoa_prf+0x19e>
    1d1c:	21 e0       	ldi	r18, 0x01	; 1
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	26 0f       	add	r18, r22
    1d22:	37 1f       	adc	r19, r23
    1d24:	bb 20       	and	r11, r11
    1d26:	29 f0       	breq	.+10     	; 0x1d32 <dtoa_prf+0x1b0>
    1d28:	6b 2d       	mov	r22, r11
    1d2a:	70 e0       	ldi	r23, 0x00	; 0
    1d2c:	6f 5f       	subi	r22, 0xFF	; 255
    1d2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d30:	02 c0       	rjmp	.+4      	; 0x1d36 <dtoa_prf+0x1b4>
    1d32:	60 e0       	ldi	r22, 0x00	; 0
    1d34:	70 e0       	ldi	r23, 0x00	; 0
    1d36:	26 0f       	add	r18, r22
    1d38:	37 1f       	adc	r19, r23
    1d3a:	61 2f       	mov	r22, r17
    1d3c:	70 e0       	ldi	r23, 0x00	; 0
    1d3e:	26 17       	cp	r18, r22
    1d40:	37 07       	cpc	r19, r23
    1d42:	1c f4       	brge	.+6      	; 0x1d4a <dtoa_prf+0x1c8>
    1d44:	12 1b       	sub	r17, r18
    1d46:	21 2f       	mov	r18, r17
    1d48:	01 c0       	rjmp	.+2      	; 0x1d4c <dtoa_prf+0x1ca>
    1d4a:	20 e0       	ldi	r18, 0x00	; 0
    1d4c:	3e 2d       	mov	r19, r14
    1d4e:	38 71       	andi	r19, 0x18	; 24
    1d50:	59 f4       	brne	.+22     	; 0x1d68 <dtoa_prf+0x1e6>
    1d52:	d6 01       	movw	r26, r12
    1d54:	32 2f       	mov	r19, r18
    1d56:	60 e2       	ldi	r22, 0x20	; 32
    1d58:	33 23       	and	r19, r19
    1d5a:	19 f0       	breq	.+6      	; 0x1d62 <dtoa_prf+0x1e0>
    1d5c:	6d 93       	st	X+, r22
    1d5e:	31 50       	subi	r19, 0x01	; 1
    1d60:	fb cf       	rjmp	.-10     	; 0x1d58 <dtoa_prf+0x1d6>
    1d62:	c2 0e       	add	r12, r18
    1d64:	d1 1c       	adc	r13, r1
    1d66:	20 e0       	ldi	r18, 0x00	; 0
    1d68:	ff 23       	and	r31, r31
    1d6a:	31 f0       	breq	.+12     	; 0x1d78 <dtoa_prf+0x1f6>
    1d6c:	d6 01       	movw	r26, r12
    1d6e:	9c 93       	st	X, r25
    1d70:	b6 01       	movw	r22, r12
    1d72:	6f 5f       	subi	r22, 0xFF	; 255
    1d74:	7f 4f       	sbci	r23, 0xFF	; 255
    1d76:	6b 01       	movw	r12, r22
    1d78:	e1 11       	cpse	r30, r1
    1d7a:	0b c0       	rjmp	.+22     	; 0x1d92 <dtoa_prf+0x210>
    1d7c:	f6 01       	movw	r30, r12
    1d7e:	92 2f       	mov	r25, r18
    1d80:	30 e3       	ldi	r19, 0x30	; 48
    1d82:	99 23       	and	r25, r25
    1d84:	19 f0       	breq	.+6      	; 0x1d8c <dtoa_prf+0x20a>
    1d86:	31 93       	st	Z+, r19
    1d88:	91 50       	subi	r25, 0x01	; 1
    1d8a:	fb cf       	rjmp	.-10     	; 0x1d82 <dtoa_prf+0x200>
    1d8c:	c2 0e       	add	r12, r18
    1d8e:	d1 1c       	adc	r13, r1
    1d90:	20 e0       	ldi	r18, 0x00	; 0
    1d92:	9f 2d       	mov	r25, r15
    1d94:	94 0f       	add	r25, r20
    1d96:	3a 81       	ldd	r19, Y+2	; 0x02
    1d98:	78 2f       	mov	r23, r24
    1d9a:	70 71       	andi	r23, 0x10	; 16
    1d9c:	a7 2e       	mov	r10, r23
    1d9e:	84 ff       	sbrs	r24, 4
    1da0:	03 c0       	rjmp	.+6      	; 0x1da8 <dtoa_prf+0x226>
    1da2:	31 33       	cpi	r19, 0x31	; 49
    1da4:	09 f4       	brne	.+2      	; 0x1da8 <dtoa_prf+0x226>
    1da6:	91 50       	subi	r25, 0x01	; 1
    1da8:	19 16       	cp	r1, r25
    1daa:	24 f4       	brge	.+8      	; 0x1db4 <dtoa_prf+0x232>
    1dac:	99 30       	cpi	r25, 0x09	; 9
    1dae:	18 f0       	brcs	.+6      	; 0x1db6 <dtoa_prf+0x234>
    1db0:	98 e0       	ldi	r25, 0x08	; 8
    1db2:	01 c0       	rjmp	.+2      	; 0x1db6 <dtoa_prf+0x234>
    1db4:	91 e0       	ldi	r25, 0x01	; 1
    1db6:	e4 2f       	mov	r30, r20
    1db8:	85 2f       	mov	r24, r21
    1dba:	57 ff       	sbrs	r21, 7
    1dbc:	02 c0       	rjmp	.+4      	; 0x1dc2 <dtoa_prf+0x240>
    1dbe:	e0 e0       	ldi	r30, 0x00	; 0
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	6e 2f       	mov	r22, r30
    1dc4:	78 2f       	mov	r23, r24
    1dc6:	e0 e0       	ldi	r30, 0x00	; 0
    1dc8:	f0 e0       	ldi	r31, 0x00	; 0
    1dca:	ae e2       	ldi	r26, 0x2E	; 46
    1dcc:	9a 2e       	mov	r9, r26
    1dce:	3a 01       	movw	r6, r20
    1dd0:	69 1a       	sub	r6, r25
    1dd2:	71 08       	sbc	r7, r1
    1dd4:	2a 01       	movw	r4, r20
    1dd6:	46 1a       	sub	r4, r22
    1dd8:	57 0a       	sbc	r5, r23
    1dda:	0b 2d       	mov	r16, r11
    1ddc:	10 e0       	ldi	r17, 0x00	; 0
    1dde:	11 95       	neg	r17
    1de0:	01 95       	neg	r16
    1de2:	11 09       	sbc	r17, r1
    1de4:	6f 3f       	cpi	r22, 0xFF	; 255
    1de6:	8f ef       	ldi	r24, 0xFF	; 255
    1de8:	78 07       	cpc	r23, r24
    1dea:	29 f4       	brne	.+10     	; 0x1df6 <dtoa_prf+0x274>
    1dec:	d6 01       	movw	r26, r12
    1dee:	9c 92       	st	X, r9
    1df0:	c6 01       	movw	r24, r12
    1df2:	01 96       	adiw	r24, 0x01	; 1
    1df4:	6c 01       	movw	r12, r24
    1df6:	46 17       	cp	r20, r22
    1df8:	57 07       	cpc	r21, r23
    1dfa:	84 f0       	brlt	.+32     	; 0x1e1c <dtoa_prf+0x29a>
    1dfc:	66 16       	cp	r6, r22
    1dfe:	77 06       	cpc	r7, r23
    1e00:	6c f4       	brge	.+26     	; 0x1e1c <dtoa_prf+0x29a>
    1e02:	7f 01       	movw	r14, r30
    1e04:	e4 0c       	add	r14, r4
    1e06:	f5 1c       	adc	r15, r5
    1e08:	a1 e0       	ldi	r26, 0x01	; 1
    1e0a:	b0 e0       	ldi	r27, 0x00	; 0
    1e0c:	ac 0f       	add	r26, r28
    1e0e:	bd 1f       	adc	r27, r29
    1e10:	ea 0e       	add	r14, r26
    1e12:	fb 1e       	adc	r15, r27
    1e14:	d7 01       	movw	r26, r14
    1e16:	11 96       	adiw	r26, 0x01	; 1
    1e18:	bc 90       	ld	r11, X
    1e1a:	02 c0       	rjmp	.+4      	; 0x1e20 <dtoa_prf+0x29e>
    1e1c:	90 e3       	ldi	r25, 0x30	; 48
    1e1e:	b9 2e       	mov	r11, r25
    1e20:	61 50       	subi	r22, 0x01	; 1
    1e22:	71 09       	sbc	r23, r1
    1e24:	31 96       	adiw	r30, 0x01	; 1
    1e26:	c6 01       	movw	r24, r12
    1e28:	01 96       	adiw	r24, 0x01	; 1
    1e2a:	7c 01       	movw	r14, r24
    1e2c:	60 17       	cp	r22, r16
    1e2e:	71 07       	cpc	r23, r17
    1e30:	24 f0       	brlt	.+8      	; 0x1e3a <dtoa_prf+0x2b8>
    1e32:	d6 01       	movw	r26, r12
    1e34:	bc 92       	st	X, r11
    1e36:	6c 01       	movw	r12, r24
    1e38:	d5 cf       	rjmp	.-86     	; 0x1de4 <dtoa_prf+0x262>
    1e3a:	64 17       	cp	r22, r20
    1e3c:	75 07       	cpc	r23, r21
    1e3e:	41 f4       	brne	.+16     	; 0x1e50 <dtoa_prf+0x2ce>
    1e40:	36 33       	cpi	r19, 0x36	; 54
    1e42:	20 f4       	brcc	.+8      	; 0x1e4c <dtoa_prf+0x2ca>
    1e44:	35 33       	cpi	r19, 0x35	; 53
    1e46:	21 f4       	brne	.+8      	; 0x1e50 <dtoa_prf+0x2ce>
    1e48:	a1 10       	cpse	r10, r1
    1e4a:	02 c0       	rjmp	.+4      	; 0x1e50 <dtoa_prf+0x2ce>
    1e4c:	81 e3       	ldi	r24, 0x31	; 49
    1e4e:	b8 2e       	mov	r11, r24
    1e50:	f6 01       	movw	r30, r12
    1e52:	b0 82       	st	Z, r11
    1e54:	f7 01       	movw	r30, r14
    1e56:	82 2f       	mov	r24, r18
    1e58:	90 e2       	ldi	r25, 0x20	; 32
    1e5a:	88 23       	and	r24, r24
    1e5c:	19 f0       	breq	.+6      	; 0x1e64 <dtoa_prf+0x2e2>
    1e5e:	91 93       	st	Z+, r25
    1e60:	81 50       	subi	r24, 0x01	; 1
    1e62:	fb cf       	rjmp	.-10     	; 0x1e5a <dtoa_prf+0x2d8>
    1e64:	f7 01       	movw	r30, r14
    1e66:	e2 0f       	add	r30, r18
    1e68:	f1 1d       	adc	r31, r1
    1e6a:	10 82       	st	Z, r1
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	29 96       	adiw	r28, 0x09	; 9
    1e72:	0f b6       	in	r0, 0x3f	; 63
    1e74:	f8 94       	cli
    1e76:	de bf       	out	0x3e, r29	; 62
    1e78:	0f be       	out	0x3f, r0	; 63
    1e7a:	cd bf       	out	0x3d, r28	; 61
    1e7c:	df 91       	pop	r29
    1e7e:	cf 91       	pop	r28
    1e80:	1f 91       	pop	r17
    1e82:	0f 91       	pop	r16
    1e84:	ff 90       	pop	r15
    1e86:	ef 90       	pop	r14
    1e88:	df 90       	pop	r13
    1e8a:	cf 90       	pop	r12
    1e8c:	bf 90       	pop	r11
    1e8e:	af 90       	pop	r10
    1e90:	9f 90       	pop	r9
    1e92:	7f 90       	pop	r7
    1e94:	6f 90       	pop	r6
    1e96:	5f 90       	pop	r5
    1e98:	4f 90       	pop	r4
    1e9a:	08 95       	ret

00001e9c <__ftoa_engine>:
    1e9c:	28 30       	cpi	r18, 0x08	; 8
    1e9e:	08 f0       	brcs	.+2      	; 0x1ea2 <__ftoa_engine+0x6>
    1ea0:	27 e0       	ldi	r18, 0x07	; 7
    1ea2:	33 27       	eor	r19, r19
    1ea4:	da 01       	movw	r26, r20
    1ea6:	99 0f       	add	r25, r25
    1ea8:	31 1d       	adc	r19, r1
    1eaa:	87 fd       	sbrc	r24, 7
    1eac:	91 60       	ori	r25, 0x01	; 1
    1eae:	00 96       	adiw	r24, 0x00	; 0
    1eb0:	61 05       	cpc	r22, r1
    1eb2:	71 05       	cpc	r23, r1
    1eb4:	39 f4       	brne	.+14     	; 0x1ec4 <__ftoa_engine+0x28>
    1eb6:	32 60       	ori	r19, 0x02	; 2
    1eb8:	2e 5f       	subi	r18, 0xFE	; 254
    1eba:	3d 93       	st	X+, r19
    1ebc:	30 e3       	ldi	r19, 0x30	; 48
    1ebe:	2a 95       	dec	r18
    1ec0:	e1 f7       	brne	.-8      	; 0x1eba <__ftoa_engine+0x1e>
    1ec2:	08 95       	ret
    1ec4:	9f 3f       	cpi	r25, 0xFF	; 255
    1ec6:	30 f0       	brcs	.+12     	; 0x1ed4 <__ftoa_engine+0x38>
    1ec8:	80 38       	cpi	r24, 0x80	; 128
    1eca:	71 05       	cpc	r23, r1
    1ecc:	61 05       	cpc	r22, r1
    1ece:	09 f0       	breq	.+2      	; 0x1ed2 <__ftoa_engine+0x36>
    1ed0:	3c 5f       	subi	r19, 0xFC	; 252
    1ed2:	3c 5f       	subi	r19, 0xFC	; 252
    1ed4:	3d 93       	st	X+, r19
    1ed6:	91 30       	cpi	r25, 0x01	; 1
    1ed8:	08 f0       	brcs	.+2      	; 0x1edc <__ftoa_engine+0x40>
    1eda:	80 68       	ori	r24, 0x80	; 128
    1edc:	91 1d       	adc	r25, r1
    1ede:	df 93       	push	r29
    1ee0:	cf 93       	push	r28
    1ee2:	1f 93       	push	r17
    1ee4:	0f 93       	push	r16
    1ee6:	ff 92       	push	r15
    1ee8:	ef 92       	push	r14
    1eea:	19 2f       	mov	r17, r25
    1eec:	98 7f       	andi	r25, 0xF8	; 248
    1eee:	96 95       	lsr	r25
    1ef0:	e9 2f       	mov	r30, r25
    1ef2:	96 95       	lsr	r25
    1ef4:	96 95       	lsr	r25
    1ef6:	e9 0f       	add	r30, r25
    1ef8:	ff 27       	eor	r31, r31
    1efa:	ea 51       	subi	r30, 0x1A	; 26
    1efc:	ff 4f       	sbci	r31, 0xFF	; 255
    1efe:	99 27       	eor	r25, r25
    1f00:	33 27       	eor	r19, r19
    1f02:	ee 24       	eor	r14, r14
    1f04:	ff 24       	eor	r15, r15
    1f06:	a7 01       	movw	r20, r14
    1f08:	e7 01       	movw	r28, r14
    1f0a:	05 90       	lpm	r0, Z+
    1f0c:	08 94       	sec
    1f0e:	07 94       	ror	r0
    1f10:	28 f4       	brcc	.+10     	; 0x1f1c <__ftoa_engine+0x80>
    1f12:	36 0f       	add	r19, r22
    1f14:	e7 1e       	adc	r14, r23
    1f16:	f8 1e       	adc	r15, r24
    1f18:	49 1f       	adc	r20, r25
    1f1a:	51 1d       	adc	r21, r1
    1f1c:	66 0f       	add	r22, r22
    1f1e:	77 1f       	adc	r23, r23
    1f20:	88 1f       	adc	r24, r24
    1f22:	99 1f       	adc	r25, r25
    1f24:	06 94       	lsr	r0
    1f26:	a1 f7       	brne	.-24     	; 0x1f10 <__ftoa_engine+0x74>
    1f28:	05 90       	lpm	r0, Z+
    1f2a:	07 94       	ror	r0
    1f2c:	28 f4       	brcc	.+10     	; 0x1f38 <__ftoa_engine+0x9c>
    1f2e:	e7 0e       	add	r14, r23
    1f30:	f8 1e       	adc	r15, r24
    1f32:	49 1f       	adc	r20, r25
    1f34:	56 1f       	adc	r21, r22
    1f36:	c1 1d       	adc	r28, r1
    1f38:	77 0f       	add	r23, r23
    1f3a:	88 1f       	adc	r24, r24
    1f3c:	99 1f       	adc	r25, r25
    1f3e:	66 1f       	adc	r22, r22
    1f40:	06 94       	lsr	r0
    1f42:	a1 f7       	brne	.-24     	; 0x1f2c <__ftoa_engine+0x90>
    1f44:	05 90       	lpm	r0, Z+
    1f46:	07 94       	ror	r0
    1f48:	28 f4       	brcc	.+10     	; 0x1f54 <__ftoa_engine+0xb8>
    1f4a:	f8 0e       	add	r15, r24
    1f4c:	49 1f       	adc	r20, r25
    1f4e:	56 1f       	adc	r21, r22
    1f50:	c7 1f       	adc	r28, r23
    1f52:	d1 1d       	adc	r29, r1
    1f54:	88 0f       	add	r24, r24
    1f56:	99 1f       	adc	r25, r25
    1f58:	66 1f       	adc	r22, r22
    1f5a:	77 1f       	adc	r23, r23
    1f5c:	06 94       	lsr	r0
    1f5e:	a1 f7       	brne	.-24     	; 0x1f48 <__ftoa_engine+0xac>
    1f60:	05 90       	lpm	r0, Z+
    1f62:	07 94       	ror	r0
    1f64:	20 f4       	brcc	.+8      	; 0x1f6e <__ftoa_engine+0xd2>
    1f66:	49 0f       	add	r20, r25
    1f68:	56 1f       	adc	r21, r22
    1f6a:	c7 1f       	adc	r28, r23
    1f6c:	d8 1f       	adc	r29, r24
    1f6e:	99 0f       	add	r25, r25
    1f70:	66 1f       	adc	r22, r22
    1f72:	77 1f       	adc	r23, r23
    1f74:	88 1f       	adc	r24, r24
    1f76:	06 94       	lsr	r0
    1f78:	a9 f7       	brne	.-22     	; 0x1f64 <__ftoa_engine+0xc8>
    1f7a:	84 91       	lpm	r24, Z
    1f7c:	10 95       	com	r17
    1f7e:	17 70       	andi	r17, 0x07	; 7
    1f80:	41 f0       	breq	.+16     	; 0x1f92 <__ftoa_engine+0xf6>
    1f82:	d6 95       	lsr	r29
    1f84:	c7 95       	ror	r28
    1f86:	57 95       	ror	r21
    1f88:	47 95       	ror	r20
    1f8a:	f7 94       	ror	r15
    1f8c:	e7 94       	ror	r14
    1f8e:	1a 95       	dec	r17
    1f90:	c1 f7       	brne	.-16     	; 0x1f82 <__ftoa_engine+0xe6>
    1f92:	ec e8       	ldi	r30, 0x8C	; 140
    1f94:	f0 e0       	ldi	r31, 0x00	; 0
    1f96:	68 94       	set
    1f98:	15 90       	lpm	r1, Z+
    1f9a:	15 91       	lpm	r17, Z+
    1f9c:	35 91       	lpm	r19, Z+
    1f9e:	65 91       	lpm	r22, Z+
    1fa0:	95 91       	lpm	r25, Z+
    1fa2:	05 90       	lpm	r0, Z+
    1fa4:	7f e2       	ldi	r23, 0x2F	; 47
    1fa6:	73 95       	inc	r23
    1fa8:	e1 18       	sub	r14, r1
    1faa:	f1 0a       	sbc	r15, r17
    1fac:	43 0b       	sbc	r20, r19
    1fae:	56 0b       	sbc	r21, r22
    1fb0:	c9 0b       	sbc	r28, r25
    1fb2:	d0 09       	sbc	r29, r0
    1fb4:	c0 f7       	brcc	.-16     	; 0x1fa6 <__ftoa_engine+0x10a>
    1fb6:	e1 0c       	add	r14, r1
    1fb8:	f1 1e       	adc	r15, r17
    1fba:	43 1f       	adc	r20, r19
    1fbc:	56 1f       	adc	r21, r22
    1fbe:	c9 1f       	adc	r28, r25
    1fc0:	d0 1d       	adc	r29, r0
    1fc2:	7e f4       	brtc	.+30     	; 0x1fe2 <__ftoa_engine+0x146>
    1fc4:	70 33       	cpi	r23, 0x30	; 48
    1fc6:	11 f4       	brne	.+4      	; 0x1fcc <__ftoa_engine+0x130>
    1fc8:	8a 95       	dec	r24
    1fca:	e6 cf       	rjmp	.-52     	; 0x1f98 <__ftoa_engine+0xfc>
    1fcc:	e8 94       	clt
    1fce:	01 50       	subi	r16, 0x01	; 1
    1fd0:	30 f0       	brcs	.+12     	; 0x1fde <__ftoa_engine+0x142>
    1fd2:	08 0f       	add	r16, r24
    1fd4:	0a f4       	brpl	.+2      	; 0x1fd8 <__ftoa_engine+0x13c>
    1fd6:	00 27       	eor	r16, r16
    1fd8:	02 17       	cp	r16, r18
    1fda:	08 f4       	brcc	.+2      	; 0x1fde <__ftoa_engine+0x142>
    1fdc:	20 2f       	mov	r18, r16
    1fde:	23 95       	inc	r18
    1fe0:	02 2f       	mov	r16, r18
    1fe2:	7a 33       	cpi	r23, 0x3A	; 58
    1fe4:	28 f0       	brcs	.+10     	; 0x1ff0 <__ftoa_engine+0x154>
    1fe6:	79 e3       	ldi	r23, 0x39	; 57
    1fe8:	7d 93       	st	X+, r23
    1fea:	2a 95       	dec	r18
    1fec:	e9 f7       	brne	.-6      	; 0x1fe8 <__ftoa_engine+0x14c>
    1fee:	10 c0       	rjmp	.+32     	; 0x2010 <__ftoa_engine+0x174>
    1ff0:	7d 93       	st	X+, r23
    1ff2:	2a 95       	dec	r18
    1ff4:	89 f6       	brne	.-94     	; 0x1f98 <__ftoa_engine+0xfc>
    1ff6:	06 94       	lsr	r0
    1ff8:	97 95       	ror	r25
    1ffa:	67 95       	ror	r22
    1ffc:	37 95       	ror	r19
    1ffe:	17 95       	ror	r17
    2000:	17 94       	ror	r1
    2002:	e1 18       	sub	r14, r1
    2004:	f1 0a       	sbc	r15, r17
    2006:	43 0b       	sbc	r20, r19
    2008:	56 0b       	sbc	r21, r22
    200a:	c9 0b       	sbc	r28, r25
    200c:	d0 09       	sbc	r29, r0
    200e:	98 f0       	brcs	.+38     	; 0x2036 <__ftoa_engine+0x19a>
    2010:	23 95       	inc	r18
    2012:	7e 91       	ld	r23, -X
    2014:	73 95       	inc	r23
    2016:	7a 33       	cpi	r23, 0x3A	; 58
    2018:	08 f0       	brcs	.+2      	; 0x201c <__ftoa_engine+0x180>
    201a:	70 e3       	ldi	r23, 0x30	; 48
    201c:	7c 93       	st	X, r23
    201e:	20 13       	cpse	r18, r16
    2020:	b8 f7       	brcc	.-18     	; 0x2010 <__ftoa_engine+0x174>
    2022:	7e 91       	ld	r23, -X
    2024:	70 61       	ori	r23, 0x10	; 16
    2026:	7d 93       	st	X+, r23
    2028:	30 f0       	brcs	.+12     	; 0x2036 <__ftoa_engine+0x19a>
    202a:	83 95       	inc	r24
    202c:	71 e3       	ldi	r23, 0x31	; 49
    202e:	7d 93       	st	X+, r23
    2030:	70 e3       	ldi	r23, 0x30	; 48
    2032:	2a 95       	dec	r18
    2034:	e1 f7       	brne	.-8      	; 0x202e <__ftoa_engine+0x192>
    2036:	11 24       	eor	r1, r1
    2038:	ef 90       	pop	r14
    203a:	ff 90       	pop	r15
    203c:	0f 91       	pop	r16
    203e:	1f 91       	pop	r17
    2040:	cf 91       	pop	r28
    2042:	df 91       	pop	r29
    2044:	99 27       	eor	r25, r25
    2046:	87 fd       	sbrc	r24, 7
    2048:	90 95       	com	r25
    204a:	08 95       	ret

0000204c <strrev>:
    204c:	dc 01       	movw	r26, r24
    204e:	fc 01       	movw	r30, r24
    2050:	67 2f       	mov	r22, r23
    2052:	71 91       	ld	r23, Z+
    2054:	77 23       	and	r23, r23
    2056:	e1 f7       	brne	.-8      	; 0x2050 <strrev+0x4>
    2058:	32 97       	sbiw	r30, 0x02	; 2
    205a:	04 c0       	rjmp	.+8      	; 0x2064 <strrev+0x18>
    205c:	7c 91       	ld	r23, X
    205e:	6d 93       	st	X+, r22
    2060:	70 83       	st	Z, r23
    2062:	62 91       	ld	r22, -Z
    2064:	ae 17       	cp	r26, r30
    2066:	bf 07       	cpc	r27, r31
    2068:	c8 f3       	brcs	.-14     	; 0x205c <strrev+0x10>
    206a:	08 95       	ret

0000206c <_exit>:
    206c:	f8 94       	cli

0000206e <__stop_program>:
    206e:	ff cf       	rjmp	.-2      	; 0x206e <__stop_program>
