
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015a  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000015a  000001ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002a  00800060  00800060  000001ee  2**0
                  ALLOC
  3 .noinit       00000000  0080008a  0080008a  000001ee  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  000001ee  2**0
                  CONTENTS
  5 .stab         0000036c  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000084  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000014  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00000092  00000000  00000000  000005f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000002da  00000000  00000000  00000686  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000129  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000187  00000000  00000000  00000a89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000134  00000000  00000000  00000c10  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2b c0       	rjmp	.+86     	; 0x5a <__bad_interrupt>
   4:	2a c0       	rjmp	.+84     	; 0x5a <__bad_interrupt>
   6:	29 c0       	rjmp	.+82     	; 0x5a <__bad_interrupt>
   8:	28 c0       	rjmp	.+80     	; 0x5a <__bad_interrupt>
   a:	27 c0       	rjmp	.+78     	; 0x5a <__bad_interrupt>
   c:	26 c0       	rjmp	.+76     	; 0x5a <__bad_interrupt>
   e:	25 c0       	rjmp	.+74     	; 0x5a <__bad_interrupt>
  10:	24 c0       	rjmp	.+72     	; 0x5a <__bad_interrupt>
  12:	23 c0       	rjmp	.+70     	; 0x5a <__bad_interrupt>
  14:	22 c0       	rjmp	.+68     	; 0x5a <__bad_interrupt>
  16:	21 c0       	rjmp	.+66     	; 0x5a <__bad_interrupt>
  18:	20 c0       	rjmp	.+64     	; 0x5a <__bad_interrupt>
  1a:	1f c0       	rjmp	.+62     	; 0x5a <__bad_interrupt>
  1c:	1e c0       	rjmp	.+60     	; 0x5a <__bad_interrupt>
  1e:	1d c0       	rjmp	.+58     	; 0x5a <__bad_interrupt>
  20:	1c c0       	rjmp	.+56     	; 0x5a <__bad_interrupt>
  22:	1b c0       	rjmp	.+54     	; 0x5a <__bad_interrupt>
  24:	1a c0       	rjmp	.+52     	; 0x5a <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e5       	ldi	r30, 0x5A	; 90
  3a:	f1 e0       	ldi	r31, 0x01	; 1
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	aa 38       	cpi	r26, 0x8A	; 138
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	6e c0       	rjmp	.+220    	; 0x136 <main>

0000005a <__bad_interrupt>:
  5a:	d2 cf       	rjmp	.-92     	; 0x0 <__vectors>

0000005c <spi_init>:
}

void spi_init()
{
DDRB=0b00101100;
  5c:	8c e2       	ldi	r24, 0x2C	; 44
  5e:	87 bb       	out	0x17, r24	; 23
DDRD=0b11111111;
  60:	8f ef       	ldi	r24, 0xFF	; 255
  62:	81 bb       	out	0x11, r24	; 17
SPCR=(1<<MSTR) |(1<<CPOL)|(1<<DORD)|(1<<CPHA);
  64:	8c e3       	ldi	r24, 0x3C	; 60
  66:	8d b9       	out	0x0d, r24	; 13
  68:	08 95       	ret

0000006a <spi_txrx>:
}

uint8_t spi_txrx(uint8_t dataout)
{
	SPCR |= (1<<SPE);
  6a:	6e 9a       	sbi	0x0d, 6	; 13
    uint8_t datain;

    SPDR = dataout;
  6c:	8f b9       	out	0x0f, r24	; 15

    while(!(SPSR & (1<<SPIF)));
  6e:	77 9b       	sbis	0x0e, 7	; 14
  70:	fe cf       	rjmp	.-4      	; 0x6e <spi_txrx+0x4>
		__ticks = 1;
	else if (__tmp > 255)
		__ticks = 0;	/* i.e. 256 */
	else
		__ticks = (uint8_t)__tmp;
  72:	8a e0       	ldi	r24, 0x0A	; 10
  74:	8a 95       	dec	r24
  76:	f1 f7       	brne	.-4      	; 0x74 <spi_txrx+0xa>

    _delay_us(30);  
    datain = SPDR;
  78:	2f b1       	in	r18, 0x0f	; 15
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
	else if (__tmp > 65535)
		__ticks = 0;	/* i.e. 65536 */
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	01 97       	sbiw	r24, 0x01	; 1
  80:	f1 f7       	brne	.-4      	; 0x7e <spi_txrx+0x14>
	//PORTD = datain;
	_delay_ms(1000);
    return datain;
	SPCR &= ~(1<<SPE);
	PORTB |= (1<<PB5);

}
  82:	82 2f       	mov	r24, r18
  84:	99 27       	eor	r25, r25
  86:	08 95       	ret

00000088 <ps2_poll>:


void ps2_init()
{

	PORTB &= ~(1<<PB2);
	rx_buffer[0] = spi_txrx(0x01);
    rx_buffer[1] = spi_txrx(0x42);
    rx_buffer[2] = spi_txrx(0x00);
	rx_buffer[3] = spi_txrx(0x00);
	rx_buffer[4] = spi_txrx(0x00);
	
   // PORTB |= (1<<PB2);
	
	_delay_ms(250);

}

void ps2_poll()
{
  88:	cf 93       	push	r28
  8a:	df 93       	push	r29
int i;
	//PORTB &= ~(1<<PB2);
	ps2rx=spi_txrx(0x00);
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	ed df       	rcall	.-38     	; 0x6a <spi_txrx>
  90:	99 27       	eor	r25, r25
  92:	90 93 67 00 	sts	0x0067, r25
  96:	80 93 66 00 	sts	0x0066, r24
	ps2ry=spi_txrx(0x00);
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	e6 df       	rcall	.-52     	; 0x6a <spi_txrx>
  9e:	99 27       	eor	r25, r25
  a0:	90 93 65 00 	sts	0x0065, r25
  a4:	80 93 64 00 	sts	0x0064, r24
	ps2lx=spi_txrx(0x00);
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	df df       	rcall	.-66     	; 0x6a <spi_txrx>
  ac:	99 27       	eor	r25, r25
  ae:	90 93 63 00 	sts	0x0063, r25
  b2:	80 93 62 00 	sts	0x0062, r24
	ps2ly=spi_txrx(0x00);
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	d8 df       	rcall	.-80     	; 0x6a <spi_txrx>
  ba:	99 27       	eor	r25, r25
  bc:	90 93 61 00 	sts	0x0061, r25
  c0:	80 93 60 00 	sts	0x0060, r24
  c4:	c8 e6       	ldi	r28, 0x68	; 104
  c6:	d0 e0       	ldi	r29, 0x00	; 0
	
	for(i=0;i<12;i++)
	{
		pressure[i]=spi_txrx(0x00);
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	cf df       	rcall	.-98     	; 0x6a <spi_txrx>
  cc:	99 27       	eor	r25, r25
  ce:	89 93       	st	Y+, r24
  d0:	99 93       	st	Y+, r25
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	ce 37       	cpi	r28, 0x7E	; 126
  d6:	d8 07       	cpc	r29, r24
  d8:	b9 f3       	breq	.-18     	; 0xc8 <ps2_poll+0x40>
  da:	b4 f3       	brlt	.-20     	; 0xc8 <ps2_poll+0x40>
	}
	PORTB |= (1<<PB2);
  dc:	c2 9a       	sbi	0x18, 2	; 24
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <ps2_init>:
  e4:	c2 98       	cbi	0x18, 2	; 24
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	c0 df       	rcall	.-128    	; 0x6a <spi_txrx>
  ea:	99 27       	eor	r25, r25
  ec:	90 93 81 00 	sts	0x0081, r25
  f0:	80 93 80 00 	sts	0x0080, r24
  f4:	82 e4       	ldi	r24, 0x42	; 66
  f6:	b9 df       	rcall	.-142    	; 0x6a <spi_txrx>
  f8:	99 27       	eor	r25, r25
  fa:	90 93 83 00 	sts	0x0083, r25
  fe:	80 93 82 00 	sts	0x0082, r24
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	b2 df       	rcall	.-156    	; 0x6a <spi_txrx>
 106:	99 27       	eor	r25, r25
 108:	90 93 85 00 	sts	0x0085, r25
 10c:	80 93 84 00 	sts	0x0084, r24
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	ab df       	rcall	.-170    	; 0x6a <spi_txrx>
 114:	99 27       	eor	r25, r25
 116:	90 93 87 00 	sts	0x0087, r25
 11a:	80 93 86 00 	sts	0x0086, r24
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	a4 df       	rcall	.-184    	; 0x6a <spi_txrx>
 122:	99 27       	eor	r25, r25
 124:	90 93 89 00 	sts	0x0089, r25
 128:	80 93 88 00 	sts	0x0088, r24
		__ticks = 1;
	else if (__tmp > 65535)
		__ticks = 0;	/* i.e. 65536 */
	else
		__ticks = (uint16_t)__tmp;
 12c:	84 e2       	ldi	r24, 0x24	; 36
 12e:	94 ef       	ldi	r25, 0xF4	; 244
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <ps2_init+0x4c>
 134:	08 95       	ret

00000136 <main>:
 136:	cf e5       	ldi	r28, 0x5F	; 95
 138:	d4 e0       	ldi	r29, 0x04	; 4
 13a:	de bf       	out	0x3e, r29	; 62
 13c:	cd bf       	out	0x3d, r28	; 61
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	84 bb       	out	0x14, r24	; 20
 142:	8c df       	rcall	.-232    	; 0x5c <spi_init>
 144:	cf df       	rcall	.-98     	; 0xe4 <ps2_init>
 146:	80 91 84 00 	lds	r24, 0x0084
 14a:	90 91 85 00 	lds	r25, 0x0085
 14e:	8a 35       	cpi	r24, 0x5A	; 90
 150:	91 05       	cpc	r25, r1
 152:	c1 f7       	brne	.-16     	; 0x144 <main+0xe>
 154:	a8 9a       	sbi	0x15, 0	; 21
 156:	98 df       	rcall	.-208    	; 0x88 <ps2_poll>
 158:	f5 cf       	rjmp	.-22     	; 0x144 <main+0xe>
