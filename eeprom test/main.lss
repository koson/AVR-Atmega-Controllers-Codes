
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000750  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000750  000007e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  0080006a  0080006a  000007ee  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000007ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000010e  00000000  00000000  0000080e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000331  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000011a  00000000  00000000  00000c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e7  00000000  00000000  00000d67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00001050  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000109  00000000  00000000  00001120  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000183  00000000  00000000  00001229  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e5       	ldi	r30, 0x50	; 80
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 9e 01 	call	0x33c	; 0x33c <main>
  8a:	0c 94 a6 03 	jmp	0x74c	; 0x74c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <delay_ns>:
WaitMs(1);
CLEARBIT(PORTD, Enable);
}

void delay_ns(unsigned char tim)
{
  92:	20 91 6a 00 	lds	r18, 0x006A
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <delay_ns+0xc>
	for(j=0;j<tim;j++)
  9a:	9f 5f       	subi	r25, 0xFF	; 255
  9c:	2a e0       	ldi	r18, 0x0A	; 10
  9e:	98 17       	cp	r25, r24
  a0:	e0 f3       	brcs	.-8      	; 0x9a <delay_ns+0x8>
  a2:	20 93 6a 00 	sts	0x006A, r18
  a6:	90 93 6b 00 	sts	0x006B, r25
	{
		for(k=0;k<10;k++)
		{};
	}
}
  aa:	08 95       	ret

000000ac <WaitMs>:
	PORTB=save;
}*/

/* waits (pauses) for ms milliseconds (assumes clock at 16MHz) */
void WaitMs(unsigned int ms)
{
  ac:	0a c0       	rjmp	.+20     	; 0xc2 <WaitMs+0x16>
	int i;

	while (ms-- > 0)
  ae:	20 e0       	ldi	r18, 0x00	; 0
  b0:	30 e0       	ldi	r19, 0x00	; 0
	{
		/* 16380 (16k) clock cycles for 1ms; each time through loop
		   is 5 cycles (for loop control + nop) */
		for (i = 0; i < 3276; ++i)
			asm("nop");
  b2:	00 00       	nop

	while (ms-- > 0)
	{
		/* 16380 (16k) clock cycles for 1ms; each time through loop
		   is 5 cycles (for loop control + nop) */
		for (i = 0; i < 3276; ++i)
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	4c e0       	ldi	r20, 0x0C	; 12
  ba:	2c 3c       	cpi	r18, 0xCC	; 204
  bc:	34 07       	cpc	r19, r20
  be:	c9 f7       	brne	.-14     	; 0xb2 <WaitMs+0x6>
  c0:	01 97       	sbiw	r24, 0x01	; 1
/* waits (pauses) for ms milliseconds (assumes clock at 16MHz) */
void WaitMs(unsigned int ms)
{
	int i;

	while (ms-- > 0)
  c2:	00 97       	sbiw	r24, 0x00	; 0
  c4:	a1 f7       	brne	.-24     	; 0xae <WaitMs+0x2>
		/* 16380 (16k) clock cycles for 1ms; each time through loop
		   is 5 cycles (for loop control + nop) */
		for (i = 0; i < 3276; ++i)
			asm("nop");
	}
  c6:	08 95       	ret

000000c8 <toggleE>:
	lcd_cmd(LINE1);	
}

void toggleE(void)
{
SETBIT(PORTD, Enable);
  c8:	93 9a       	sbi	0x12, 3	; 18
WaitMs(1);
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	0e 94 56 00 	call	0xac	; 0xac <WaitMs>
CLEARBIT(PORTD, Enable);
  d2:	93 98       	cbi	0x12, 3	; 18
}
  d4:	08 95       	ret

000000d6 <lcd_char>:
	//CLEARBIT(PORTD,BIT(5));	// RW PD2 = 0	
	toggleE();
}

void lcd_char(unsigned char single)
{
  d6:	1f 93       	push	r17
  d8:	18 2f       	mov	r17, r24
    WaitMs(1);
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 56 00 	call	0xac	; 0xac <WaitMs>
		
	SETBIT(PORTD, Enable);		//Enable
  e2:	93 9a       	sbi	0x12, 3	; 18
	SETBIT(PORTD, RS);
  e4:	94 9a       	sbi	0x12, 4	; 18
	PORTC=single;		//RS
  e6:	15 bb       	out	0x15, r17	; 21
	//CLEARBIT(PORTD,BIT(3));		//RW
	toggleE();
  e8:	0e 94 64 00 	call	0xc8	; 0xc8 <toggleE>

}
  ec:	1f 91       	pop	r17
  ee:	08 95       	ret

000000f0 <lcd_showvalue>:
		}
}


void lcd_showvalue(long int num)	//prints the decimal 3digit value of num
{
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	1f 93       	push	r17
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	6b 01       	movw	r12, r22
 104:	7c 01       	movw	r14, r24
	unsigned char H=0;
	int n = 0,flag = 0;

	if(num%10000 == 0)
 106:	20 e1       	ldi	r18, 0x10	; 16
 108:	37 e2       	ldi	r19, 0x27	; 39
 10a:	40 e0       	ldi	r20, 0x00	; 0
 10c:	50 e0       	ldi	r21, 0x00	; 0
 10e:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 112:	61 15       	cp	r22, r1
 114:	71 05       	cpc	r23, r1
 116:	81 05       	cpc	r24, r1
 118:	91 05       	cpc	r25, r1
 11a:	21 f4       	brne	.+8      	; 0x124 <lcd_showvalue+0x34>
 11c:	74 e0       	ldi	r23, 0x04	; 4
 11e:	a7 2e       	mov	r10, r23
 120:	b1 2c       	mov	r11, r1
 122:	34 c0       	rjmp	.+104    	; 0x18c <lcd_showvalue+0x9c>
	{
		flag = 4;
	}

	else if(num%1000 == 0)
 124:	c7 01       	movw	r24, r14
 126:	b6 01       	movw	r22, r12
 128:	28 ee       	ldi	r18, 0xE8	; 232
 12a:	33 e0       	ldi	r19, 0x03	; 3
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	50 e0       	ldi	r21, 0x00	; 0
 130:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 134:	61 15       	cp	r22, r1
 136:	71 05       	cpc	r23, r1
 138:	81 05       	cpc	r24, r1
 13a:	91 05       	cpc	r25, r1
 13c:	21 f4       	brne	.+8      	; 0x146 <lcd_showvalue+0x56>
 13e:	63 e0       	ldi	r22, 0x03	; 3
 140:	a6 2e       	mov	r10, r22
 142:	b1 2c       	mov	r11, r1
 144:	23 c0       	rjmp	.+70     	; 0x18c <lcd_showvalue+0x9c>
	{
		flag = 3;
	}

	else if(num%100 == 0)
 146:	c7 01       	movw	r24, r14
 148:	b6 01       	movw	r22, r12
 14a:	24 e6       	ldi	r18, 0x64	; 100
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	40 e0       	ldi	r20, 0x00	; 0
 150:	50 e0       	ldi	r21, 0x00	; 0
 152:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 156:	61 15       	cp	r22, r1
 158:	71 05       	cpc	r23, r1
 15a:	81 05       	cpc	r24, r1
 15c:	91 05       	cpc	r25, r1
 15e:	21 f4       	brne	.+8      	; 0x168 <lcd_showvalue+0x78>
 160:	52 e0       	ldi	r21, 0x02	; 2
 162:	a5 2e       	mov	r10, r21
 164:	b1 2c       	mov	r11, r1
 166:	12 c0       	rjmp	.+36     	; 0x18c <lcd_showvalue+0x9c>
 168:	aa 24       	eor	r10, r10
 16a:	bb 24       	eor	r11, r11
 16c:	c7 01       	movw	r24, r14
 16e:	b6 01       	movw	r22, r12
 170:	2a e0       	ldi	r18, 0x0A	; 10
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	50 e0       	ldi	r21, 0x00	; 0
 178:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 17c:	61 15       	cp	r22, r1
 17e:	71 05       	cpc	r23, r1
 180:	81 05       	cpc	r24, r1
 182:	91 05       	cpc	r25, r1
 184:	19 f4       	brne	.+6      	; 0x18c <lcd_showvalue+0x9c>
 186:	41 e0       	ldi	r20, 0x01	; 1
 188:	a4 2e       	mov	r10, r20
 18a:	b1 2c       	mov	r11, r1
 18c:	c0 e0       	ldi	r28, 0x00	; 0
 18e:	d0 e0       	ldi	r29, 0x00	; 0
 190:	21 c0       	rjmp	.+66     	; 0x1d4 <lcd_showvalue+0xe4>



	while(num>0)
	{
		H = num%10;
 192:	c7 01       	movw	r24, r14
 194:	b6 01       	movw	r22, r12
 196:	2a e0       	ldi	r18, 0x0A	; 10
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e0       	ldi	r20, 0x00	; 0
 19c:	50 e0       	ldi	r21, 0x00	; 0
 19e:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 1a2:	16 2f       	mov	r17, r22
		num = num/10;
 1a4:	c7 01       	movw	r24, r14
 1a6:	b6 01       	movw	r22, r12
 1a8:	2a e0       	ldi	r18, 0x0A	; 10
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	50 e0       	ldi	r21, 0x00	; 0
 1b0:	0e 94 48 03 	call	0x690	; 0x690 <__divmodsi4>
 1b4:	c9 01       	movw	r24, r18
 1b6:	da 01       	movw	r26, r20
 1b8:	6c 01       	movw	r12, r24
 1ba:	7d 01       	movw	r14, r26
		n = (n*10)+H;
 1bc:	ce 01       	movw	r24, r28
 1be:	33 e0       	ldi	r19, 0x03	; 3
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	3a 95       	dec	r19
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <lcd_showvalue+0xd0>
 1c8:	cc 0f       	add	r28, r28
 1ca:	dd 1f       	adc	r29, r29
 1cc:	c8 0f       	add	r28, r24
 1ce:	d9 1f       	adc	r29, r25
 1d0:	c1 0f       	add	r28, r17
 1d2:	d1 1d       	adc	r29, r1
		flag = 0;
	}



	while(num>0)
 1d4:	1c 14       	cp	r1, r12
 1d6:	1d 04       	cpc	r1, r13
 1d8:	1e 04       	cpc	r1, r14
 1da:	1f 04       	cpc	r1, r15
 1dc:	d4 f2       	brlt	.-76     	; 0x192 <lcd_showvalue+0xa2>
 1de:	10 c0       	rjmp	.+32     	; 0x200 <lcd_showvalue+0x110>
	}
	
	while(n>0)
	{
		
		H = n%10;
 1e0:	ce 01       	movw	r24, r28
 1e2:	6a e0       	ldi	r22, 0x0A	; 10
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	0e 94 35 03 	call	0x66a	; 0x66a <__divmodhi4>
 1ea:	48 2f       	mov	r20, r24
		n = n/10;
 1ec:	ce 01       	movw	r24, r28
 1ee:	6a e0       	ldi	r22, 0x0A	; 10
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	0e 94 35 03 	call	0x66a	; 0x66a <__divmodhi4>
 1f6:	eb 01       	movw	r28, r22
		lcd_char(H+48);
 1f8:	84 2f       	mov	r24, r20
 1fa:	80 5d       	subi	r24, 0xD0	; 208
 1fc:	0e 94 6b 00 	call	0xd6	; 0xd6 <lcd_char>
		H = num%10;
		num = num/10;
		n = (n*10)+H;
	}
	
	while(n>0)
 200:	20 97       	sbiw	r28, 0x00	; 0
 202:	71 f7       	brne	.-36     	; 0x1e0 <lcd_showvalue+0xf0>
 204:	06 c0       	rjmp	.+12     	; 0x212 <lcd_showvalue+0x122>
	}
	
	
	while(flag > 0)
	{
		lcd_char('0');
 206:	80 e3       	ldi	r24, 0x30	; 48
 208:	0e 94 6b 00 	call	0xd6	; 0xd6 <lcd_char>
		flag--;
 20c:	08 94       	sec
 20e:	a1 08       	sbc	r10, r1
 210:	b1 08       	sbc	r11, r1
		lcd_char(H+48);

	}
	
	
	while(flag > 0)
 212:	a1 14       	cp	r10, r1
 214:	b1 04       	cpc	r11, r1
 216:	b9 f7       	brne	.-18     	; 0x206 <lcd_showvalue+0x116>
	{
		lcd_char('0');
		flag--;
	}

}
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	ff 90       	pop	r15
 220:	ef 90       	pop	r14
 222:	df 90       	pop	r13
 224:	cf 90       	pop	r12
 226:	bf 90       	pop	r11
 228:	af 90       	pop	r10
 22a:	08 95       	ret

0000022c <lcd_showvaluef>:

void lcd_showvaluef(float num)
{
 22c:	af 92       	push	r10
 22e:	bf 92       	push	r11
 230:	cf 92       	push	r12
 232:	df 92       	push	r13
 234:	ef 92       	push	r14
 236:	ff 92       	push	r15
 238:	0f 93       	push	r16
 23a:	1f 93       	push	r17
 23c:	5b 01       	movw	r10, r22
 23e:	6c 01       	movw	r12, r24
	unsigned long l;

	l = (int)num;
 240:	0e 94 13 02 	call	0x426	; 0x426 <__fixsfsi>
 244:	7b 01       	movw	r14, r22
 246:	8c 01       	movw	r16, r24
 248:	00 27       	eor	r16, r16
 24a:	f7 fc       	sbrc	r15, 7
 24c:	00 95       	com	r16
 24e:	10 2f       	mov	r17, r16

	lcd_showvalue(l);
 250:	c8 01       	movw	r24, r16
 252:	b7 01       	movw	r22, r14
 254:	0e 94 78 00 	call	0xf0	; 0xf0 <lcd_showvalue>

	num = num - l;
 258:	c8 01       	movw	r24, r16
 25a:	b7 01       	movw	r22, r14
 25c:	0e 94 44 02 	call	0x488	; 0x488 <__floatunsisf>
 260:	9b 01       	movw	r18, r22
 262:	ac 01       	movw	r20, r24
 264:	c6 01       	movw	r24, r12
 266:	b5 01       	movw	r22, r10
 268:	0e 94 ae 01 	call	0x35c	; 0x35c <__subsf3>
 26c:	7b 01       	movw	r14, r22
 26e:	8c 01       	movw	r16, r24

	num = num * 10000;

	l = (int)num;

	lcd_char('.');
 270:	8e e2       	ldi	r24, 0x2E	; 46
 272:	0e 94 6b 00 	call	0xd6	; 0xd6 <lcd_char>

	lcd_showvalue(l);
 276:	c8 01       	movw	r24, r16
 278:	b7 01       	movw	r22, r14
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e4       	ldi	r19, 0x40	; 64
 27e:	4c e1       	ldi	r20, 0x1C	; 28
 280:	56 e4       	ldi	r21, 0x46	; 70
 282:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__mulsf3>
 286:	0e 94 13 02 	call	0x426	; 0x426 <__fixsfsi>
 28a:	88 27       	eor	r24, r24
 28c:	77 fd       	sbrc	r23, 7
 28e:	80 95       	com	r24
 290:	98 2f       	mov	r25, r24
 292:	0e 94 78 00 	call	0xf0	; 0xf0 <lcd_showvalue>
}
 296:	1f 91       	pop	r17
 298:	0f 91       	pop	r16
 29a:	ff 90       	pop	r15
 29c:	ef 90       	pop	r14
 29e:	df 90       	pop	r13
 2a0:	cf 90       	pop	r12
 2a2:	bf 90       	pop	r11
 2a4:	af 90       	pop	r10
 2a6:	08 95       	ret

000002a8 <lcd_cmd>:
		{};
	}
}

void lcd_cmd(unsigned char cmd)
{   
 2a8:	1f 93       	push	r17
 2aa:	18 2f       	mov	r17, r24
    WaitMs(2);
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 56 00 	call	0xac	; 0xac <WaitMs>
	CLEARBIT(PORTD, RS);		// RS
 2b4:	94 98       	cbi	0x12, 4	; 18
	PORTC=cmd;
 2b6:	15 bb       	out	0x15, r17	; 21
	//SETBIT(PORTD,BIT(3));	// ENABLE PD0 = 1
		// RS PD1 = 0
	//CLEARBIT(PORTD,BIT(5));	// RW PD2 = 0	
	toggleE();
 2b8:	0e 94 64 00 	call	0xc8	; 0xc8 <toggleE>
}
 2bc:	1f 91       	pop	r17
 2be:	08 95       	ret

000002c0 <lcd_gotoxy2>:
}


void lcd_gotoxy2(unsigned char pos)
{
	lcd_cmd(LINE2+pos);
 2c0:	80 54       	subi	r24, 0x40	; 64
 2c2:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
}
 2c6:	08 95       	ret

000002c8 <lcd_gotoxy1>:
}


void lcd_gotoxy1(unsigned char pos)
{
	lcd_cmd(LINE1+pos);
 2c8:	80 58       	subi	r24, 0x80	; 128
 2ca:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
}
 2ce:	08 95       	ret

000002d0 <lcd_init>:
void lcd_exit(void);
void WaitMs(unsigned int ms);

void lcd_init(void)	//init the lcd
{	
	DDRC=0xFF;				//lcd data bits
 2d0:	8f ef       	ldi	r24, 0xFF	; 255
 2d2:	84 bb       	out	0x14, r24	; 20
	DDRD=0xFF;				
 2d4:	81 bb       	out	0x11, r24	; 17
	toggleE();
 2d6:	0e 94 64 00 	call	0xc8	; 0xc8 <toggleE>
	SETBIT(PORTD, RS);		// RS
 2da:	94 9a       	sbi	0x12, 4	; 18
	lcd_cmd(0x38);		// Initialization in 8bit mode
 2dc:	88 e3       	ldi	r24, 0x38	; 56
 2de:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
	lcd_cmd(0x01);		// Clear LCD
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
	lcd_cmd(0x0E);		// Cursor ON
 2e8:	8e e0       	ldi	r24, 0x0E	; 14
 2ea:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
	lcd_cmd(LINE1);	
 2ee:	80 e8       	ldi	r24, 0x80	; 128
 2f0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
}
 2f4:	08 95       	ret

000002f6 <lcd_string>:
	toggleE();

}

void lcd_string(unsigned char str[32])
{
 2f6:	ef 92       	push	r14
 2f8:	ff 92       	push	r15
 2fa:	1f 93       	push	r17
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	7c 01       	movw	r14, r24
	unsigned char k=0;
	SETBIT(PORTD, RS);
 302:	94 9a       	sbi	0x12, 4	; 18
 304:	10 e0       	ldi	r17, 0x00	; 0
 306:	0e c0       	rjmp	.+28     	; 0x324 <lcd_string+0x2e>
	while(str[k]!='\0')	//Till null character is encountered
		{
			WaitMs(1);
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	0e 94 56 00 	call	0xac	; 0xac <WaitMs>
			if(k==16)
 310:	10 31       	cpi	r17, 0x10	; 16
 312:	19 f4       	brne	.+6      	; 0x31a <lcd_string+0x24>
				lcd_cmd(LINE2);
 314:	80 ec       	ldi	r24, 0xC0	; 192
 316:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_cmd>
			PORTC=str[k];
 31a:	88 81       	ld	r24, Y
 31c:	85 bb       	out	0x15, r24	; 21
			toggleE();
 31e:	0e 94 64 00 	call	0xc8	; 0xc8 <toggleE>
			k++;
 322:	1f 5f       	subi	r17, 0xFF	; 255

void lcd_string(unsigned char str[32])
{
	unsigned char k=0;
	SETBIT(PORTD, RS);
	while(str[k]!='\0')	//Till null character is encountered
 324:	e7 01       	movw	r28, r14
 326:	c1 0f       	add	r28, r17
 328:	d1 1d       	adc	r29, r1
 32a:	88 81       	ld	r24, Y
 32c:	88 23       	and	r24, r24
 32e:	61 f7       	brne	.-40     	; 0x308 <lcd_string+0x12>
				lcd_cmd(LINE2);
			PORTC=str[k];
			toggleE();
			k++;
		}
}
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	1f 91       	pop	r17
 336:	ff 90       	pop	r15
 338:	ef 90       	pop	r14
 33a:	08 95       	ret

0000033c <main>:
#include<avr/eeprom.h>
#include"LCD.h"
#define	yateen 0x3B800
//#define data 11
int main()
{
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
	lcd_init();
 340:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_init>
 344:	c0 e0       	ldi	r28, 0x00	; 0
 346:	d0 e0       	ldi	r29, 0x00	; 0

	long int i = 0, j = 0, k = 0;
	
	for(i = 0x00, j = 0; i <= 1023 ; i++, j++)	
	{	
		eeprom_write_byte(i, j);
 348:	ce 01       	movw	r24, r28
 34a:	6c 2f       	mov	r22, r28
 34c:	0e 94 99 03 	call	0x732	; 0x732 <__eewr_byte_m32>
 350:	21 96       	adiw	r28, 0x01	; 1
{
	lcd_init();

	long int i = 0, j = 0, k = 0;
	
	for(i = 0x00, j = 0; i <= 1023 ; i++, j++)	
 352:	84 e0       	ldi	r24, 0x04	; 4
 354:	c0 30       	cpi	r28, 0x00	; 0
 356:	d8 07       	cpc	r29, r24
 358:	b9 f7       	brne	.-18     	; 0x348 <main+0xc>
 35a:	ff cf       	rjmp	.-2      	; 0x35a <main+0x1e>

0000035c <__subsf3>:
 35c:	50 58       	subi	r21, 0x80	; 128

0000035e <__addsf3>:
 35e:	bb 27       	eor	r27, r27
 360:	aa 27       	eor	r26, r26
 362:	0e d0       	rcall	.+28     	; 0x380 <__addsf3x>
 364:	e5 c0       	rjmp	.+458    	; 0x530 <__fp_round>
 366:	d6 d0       	rcall	.+428    	; 0x514 <__fp_pscA>
 368:	30 f0       	brcs	.+12     	; 0x376 <__addsf3+0x18>
 36a:	db d0       	rcall	.+438    	; 0x522 <__fp_pscB>
 36c:	20 f0       	brcs	.+8      	; 0x376 <__addsf3+0x18>
 36e:	31 f4       	brne	.+12     	; 0x37c <__addsf3+0x1e>
 370:	9f 3f       	cpi	r25, 0xFF	; 255
 372:	11 f4       	brne	.+4      	; 0x378 <__addsf3+0x1a>
 374:	1e f4       	brtc	.+6      	; 0x37c <__addsf3+0x1e>
 376:	cb c0       	rjmp	.+406    	; 0x50e <__fp_nan>
 378:	0e f4       	brtc	.+2      	; 0x37c <__addsf3+0x1e>
 37a:	e0 95       	com	r30
 37c:	e7 fb       	bst	r30, 7
 37e:	c1 c0       	rjmp	.+386    	; 0x502 <__fp_inf>

00000380 <__addsf3x>:
 380:	e9 2f       	mov	r30, r25
 382:	e7 d0       	rcall	.+462    	; 0x552 <__fp_split3>
 384:	80 f3       	brcs	.-32     	; 0x366 <__addsf3+0x8>
 386:	ba 17       	cp	r27, r26
 388:	62 07       	cpc	r22, r18
 38a:	73 07       	cpc	r23, r19
 38c:	84 07       	cpc	r24, r20
 38e:	95 07       	cpc	r25, r21
 390:	18 f0       	brcs	.+6      	; 0x398 <__addsf3x+0x18>
 392:	71 f4       	brne	.+28     	; 0x3b0 <__addsf3x+0x30>
 394:	9e f5       	brtc	.+102    	; 0x3fc <__addsf3x+0x7c>
 396:	ff c0       	rjmp	.+510    	; 0x596 <__fp_zero>
 398:	0e f4       	brtc	.+2      	; 0x39c <__addsf3x+0x1c>
 39a:	e0 95       	com	r30
 39c:	0b 2e       	mov	r0, r27
 39e:	ba 2f       	mov	r27, r26
 3a0:	a0 2d       	mov	r26, r0
 3a2:	0b 01       	movw	r0, r22
 3a4:	b9 01       	movw	r22, r18
 3a6:	90 01       	movw	r18, r0
 3a8:	0c 01       	movw	r0, r24
 3aa:	ca 01       	movw	r24, r20
 3ac:	a0 01       	movw	r20, r0
 3ae:	11 24       	eor	r1, r1
 3b0:	ff 27       	eor	r31, r31
 3b2:	59 1b       	sub	r21, r25
 3b4:	99 f0       	breq	.+38     	; 0x3dc <__addsf3x+0x5c>
 3b6:	59 3f       	cpi	r21, 0xF9	; 249
 3b8:	50 f4       	brcc	.+20     	; 0x3ce <__addsf3x+0x4e>
 3ba:	50 3e       	cpi	r21, 0xE0	; 224
 3bc:	68 f1       	brcs	.+90     	; 0x418 <__addsf3x+0x98>
 3be:	1a 16       	cp	r1, r26
 3c0:	f0 40       	sbci	r31, 0x00	; 0
 3c2:	a2 2f       	mov	r26, r18
 3c4:	23 2f       	mov	r18, r19
 3c6:	34 2f       	mov	r19, r20
 3c8:	44 27       	eor	r20, r20
 3ca:	58 5f       	subi	r21, 0xF8	; 248
 3cc:	f3 cf       	rjmp	.-26     	; 0x3b4 <__addsf3x+0x34>
 3ce:	46 95       	lsr	r20
 3d0:	37 95       	ror	r19
 3d2:	27 95       	ror	r18
 3d4:	a7 95       	ror	r26
 3d6:	f0 40       	sbci	r31, 0x00	; 0
 3d8:	53 95       	inc	r21
 3da:	c9 f7       	brne	.-14     	; 0x3ce <__addsf3x+0x4e>
 3dc:	7e f4       	brtc	.+30     	; 0x3fc <__addsf3x+0x7c>
 3de:	1f 16       	cp	r1, r31
 3e0:	ba 0b       	sbc	r27, r26
 3e2:	62 0b       	sbc	r22, r18
 3e4:	73 0b       	sbc	r23, r19
 3e6:	84 0b       	sbc	r24, r20
 3e8:	ba f0       	brmi	.+46     	; 0x418 <__addsf3x+0x98>
 3ea:	91 50       	subi	r25, 0x01	; 1
 3ec:	a1 f0       	breq	.+40     	; 0x416 <__addsf3x+0x96>
 3ee:	ff 0f       	add	r31, r31
 3f0:	bb 1f       	adc	r27, r27
 3f2:	66 1f       	adc	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	88 1f       	adc	r24, r24
 3f8:	c2 f7       	brpl	.-16     	; 0x3ea <__addsf3x+0x6a>
 3fa:	0e c0       	rjmp	.+28     	; 0x418 <__addsf3x+0x98>
 3fc:	ba 0f       	add	r27, r26
 3fe:	62 1f       	adc	r22, r18
 400:	73 1f       	adc	r23, r19
 402:	84 1f       	adc	r24, r20
 404:	48 f4       	brcc	.+18     	; 0x418 <__addsf3x+0x98>
 406:	87 95       	ror	r24
 408:	77 95       	ror	r23
 40a:	67 95       	ror	r22
 40c:	b7 95       	ror	r27
 40e:	f7 95       	ror	r31
 410:	9e 3f       	cpi	r25, 0xFE	; 254
 412:	08 f0       	brcs	.+2      	; 0x416 <__addsf3x+0x96>
 414:	b3 cf       	rjmp	.-154    	; 0x37c <__addsf3+0x1e>
 416:	93 95       	inc	r25
 418:	88 0f       	add	r24, r24
 41a:	08 f0       	brcs	.+2      	; 0x41e <__addsf3x+0x9e>
 41c:	99 27       	eor	r25, r25
 41e:	ee 0f       	add	r30, r30
 420:	97 95       	ror	r25
 422:	87 95       	ror	r24
 424:	08 95       	ret

00000426 <__fixsfsi>:
 426:	04 d0       	rcall	.+8      	; 0x430 <__fixunssfsi>
 428:	68 94       	set
 42a:	b1 11       	cpse	r27, r1
 42c:	b5 c0       	rjmp	.+362    	; 0x598 <__fp_szero>
 42e:	08 95       	ret

00000430 <__fixunssfsi>:
 430:	98 d0       	rcall	.+304    	; 0x562 <__fp_splitA>
 432:	88 f0       	brcs	.+34     	; 0x456 <__fixunssfsi+0x26>
 434:	9f 57       	subi	r25, 0x7F	; 127
 436:	90 f0       	brcs	.+36     	; 0x45c <__fixunssfsi+0x2c>
 438:	b9 2f       	mov	r27, r25
 43a:	99 27       	eor	r25, r25
 43c:	b7 51       	subi	r27, 0x17	; 23
 43e:	a0 f0       	brcs	.+40     	; 0x468 <__fixunssfsi+0x38>
 440:	d1 f0       	breq	.+52     	; 0x476 <__fixunssfsi+0x46>
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	1a f0       	brmi	.+6      	; 0x452 <__fixunssfsi+0x22>
 44c:	ba 95       	dec	r27
 44e:	c9 f7       	brne	.-14     	; 0x442 <__fixunssfsi+0x12>
 450:	12 c0       	rjmp	.+36     	; 0x476 <__fixunssfsi+0x46>
 452:	b1 30       	cpi	r27, 0x01	; 1
 454:	81 f0       	breq	.+32     	; 0x476 <__fixunssfsi+0x46>
 456:	9f d0       	rcall	.+318    	; 0x596 <__fp_zero>
 458:	b1 e0       	ldi	r27, 0x01	; 1
 45a:	08 95       	ret
 45c:	9c c0       	rjmp	.+312    	; 0x596 <__fp_zero>
 45e:	67 2f       	mov	r22, r23
 460:	78 2f       	mov	r23, r24
 462:	88 27       	eor	r24, r24
 464:	b8 5f       	subi	r27, 0xF8	; 248
 466:	39 f0       	breq	.+14     	; 0x476 <__fixunssfsi+0x46>
 468:	b9 3f       	cpi	r27, 0xF9	; 249
 46a:	cc f3       	brlt	.-14     	; 0x45e <__fixunssfsi+0x2e>
 46c:	86 95       	lsr	r24
 46e:	77 95       	ror	r23
 470:	67 95       	ror	r22
 472:	b3 95       	inc	r27
 474:	d9 f7       	brne	.-10     	; 0x46c <__fixunssfsi+0x3c>
 476:	3e f4       	brtc	.+14     	; 0x486 <__fixunssfsi+0x56>
 478:	90 95       	com	r25
 47a:	80 95       	com	r24
 47c:	70 95       	com	r23
 47e:	61 95       	neg	r22
 480:	7f 4f       	sbci	r23, 0xFF	; 255
 482:	8f 4f       	sbci	r24, 0xFF	; 255
 484:	9f 4f       	sbci	r25, 0xFF	; 255
 486:	08 95       	ret

00000488 <__floatunsisf>:
 488:	e8 94       	clt
 48a:	09 c0       	rjmp	.+18     	; 0x49e <__floatsisf+0x12>

0000048c <__floatsisf>:
 48c:	97 fb       	bst	r25, 7
 48e:	3e f4       	brtc	.+14     	; 0x49e <__floatsisf+0x12>
 490:	90 95       	com	r25
 492:	80 95       	com	r24
 494:	70 95       	com	r23
 496:	61 95       	neg	r22
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f 4f       	sbci	r24, 0xFF	; 255
 49c:	9f 4f       	sbci	r25, 0xFF	; 255
 49e:	99 23       	and	r25, r25
 4a0:	a9 f0       	breq	.+42     	; 0x4cc <__floatsisf+0x40>
 4a2:	f9 2f       	mov	r31, r25
 4a4:	96 e9       	ldi	r25, 0x96	; 150
 4a6:	bb 27       	eor	r27, r27
 4a8:	93 95       	inc	r25
 4aa:	f6 95       	lsr	r31
 4ac:	87 95       	ror	r24
 4ae:	77 95       	ror	r23
 4b0:	67 95       	ror	r22
 4b2:	b7 95       	ror	r27
 4b4:	f1 11       	cpse	r31, r1
 4b6:	f8 cf       	rjmp	.-16     	; 0x4a8 <__floatsisf+0x1c>
 4b8:	fa f4       	brpl	.+62     	; 0x4f8 <__floatsisf+0x6c>
 4ba:	bb 0f       	add	r27, r27
 4bc:	11 f4       	brne	.+4      	; 0x4c2 <__floatsisf+0x36>
 4be:	60 ff       	sbrs	r22, 0
 4c0:	1b c0       	rjmp	.+54     	; 0x4f8 <__floatsisf+0x6c>
 4c2:	6f 5f       	subi	r22, 0xFF	; 255
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255
 4c6:	8f 4f       	sbci	r24, 0xFF	; 255
 4c8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ca:	16 c0       	rjmp	.+44     	; 0x4f8 <__floatsisf+0x6c>
 4cc:	88 23       	and	r24, r24
 4ce:	11 f0       	breq	.+4      	; 0x4d4 <__floatsisf+0x48>
 4d0:	96 e9       	ldi	r25, 0x96	; 150
 4d2:	11 c0       	rjmp	.+34     	; 0x4f6 <__floatsisf+0x6a>
 4d4:	77 23       	and	r23, r23
 4d6:	21 f0       	breq	.+8      	; 0x4e0 <__floatsisf+0x54>
 4d8:	9e e8       	ldi	r25, 0x8E	; 142
 4da:	87 2f       	mov	r24, r23
 4dc:	76 2f       	mov	r23, r22
 4de:	05 c0       	rjmp	.+10     	; 0x4ea <__floatsisf+0x5e>
 4e0:	66 23       	and	r22, r22
 4e2:	71 f0       	breq	.+28     	; 0x500 <__floatsisf+0x74>
 4e4:	96 e8       	ldi	r25, 0x86	; 134
 4e6:	86 2f       	mov	r24, r22
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	60 e0       	ldi	r22, 0x00	; 0
 4ec:	2a f0       	brmi	.+10     	; 0x4f8 <__floatsisf+0x6c>
 4ee:	9a 95       	dec	r25
 4f0:	66 0f       	add	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	da f7       	brpl	.-10     	; 0x4ee <__floatsisf+0x62>
 4f8:	88 0f       	add	r24, r24
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	97 f9       	bld	r25, 7
 500:	08 95       	ret

00000502 <__fp_inf>:
 502:	97 f9       	bld	r25, 7
 504:	9f 67       	ori	r25, 0x7F	; 127
 506:	80 e8       	ldi	r24, 0x80	; 128
 508:	70 e0       	ldi	r23, 0x00	; 0
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	08 95       	ret

0000050e <__fp_nan>:
 50e:	9f ef       	ldi	r25, 0xFF	; 255
 510:	80 ec       	ldi	r24, 0xC0	; 192
 512:	08 95       	ret

00000514 <__fp_pscA>:
 514:	00 24       	eor	r0, r0
 516:	0a 94       	dec	r0
 518:	16 16       	cp	r1, r22
 51a:	17 06       	cpc	r1, r23
 51c:	18 06       	cpc	r1, r24
 51e:	09 06       	cpc	r0, r25
 520:	08 95       	ret

00000522 <__fp_pscB>:
 522:	00 24       	eor	r0, r0
 524:	0a 94       	dec	r0
 526:	12 16       	cp	r1, r18
 528:	13 06       	cpc	r1, r19
 52a:	14 06       	cpc	r1, r20
 52c:	05 06       	cpc	r0, r21
 52e:	08 95       	ret

00000530 <__fp_round>:
 530:	09 2e       	mov	r0, r25
 532:	03 94       	inc	r0
 534:	00 0c       	add	r0, r0
 536:	11 f4       	brne	.+4      	; 0x53c <__fp_round+0xc>
 538:	88 23       	and	r24, r24
 53a:	52 f0       	brmi	.+20     	; 0x550 <__fp_round+0x20>
 53c:	bb 0f       	add	r27, r27
 53e:	40 f4       	brcc	.+16     	; 0x550 <__fp_round+0x20>
 540:	bf 2b       	or	r27, r31
 542:	11 f4       	brne	.+4      	; 0x548 <__fp_round+0x18>
 544:	60 ff       	sbrs	r22, 0
 546:	04 c0       	rjmp	.+8      	; 0x550 <__fp_round+0x20>
 548:	6f 5f       	subi	r22, 0xFF	; 255
 54a:	7f 4f       	sbci	r23, 0xFF	; 255
 54c:	8f 4f       	sbci	r24, 0xFF	; 255
 54e:	9f 4f       	sbci	r25, 0xFF	; 255
 550:	08 95       	ret

00000552 <__fp_split3>:
 552:	57 fd       	sbrc	r21, 7
 554:	90 58       	subi	r25, 0x80	; 128
 556:	44 0f       	add	r20, r20
 558:	55 1f       	adc	r21, r21
 55a:	59 f0       	breq	.+22     	; 0x572 <__fp_splitA+0x10>
 55c:	5f 3f       	cpi	r21, 0xFF	; 255
 55e:	71 f0       	breq	.+28     	; 0x57c <__fp_splitA+0x1a>
 560:	47 95       	ror	r20

00000562 <__fp_splitA>:
 562:	88 0f       	add	r24, r24
 564:	97 fb       	bst	r25, 7
 566:	99 1f       	adc	r25, r25
 568:	61 f0       	breq	.+24     	; 0x582 <__fp_splitA+0x20>
 56a:	9f 3f       	cpi	r25, 0xFF	; 255
 56c:	79 f0       	breq	.+30     	; 0x58c <__fp_splitA+0x2a>
 56e:	87 95       	ror	r24
 570:	08 95       	ret
 572:	12 16       	cp	r1, r18
 574:	13 06       	cpc	r1, r19
 576:	14 06       	cpc	r1, r20
 578:	55 1f       	adc	r21, r21
 57a:	f2 cf       	rjmp	.-28     	; 0x560 <__fp_split3+0xe>
 57c:	46 95       	lsr	r20
 57e:	f1 df       	rcall	.-30     	; 0x562 <__fp_splitA>
 580:	08 c0       	rjmp	.+16     	; 0x592 <__fp_splitA+0x30>
 582:	16 16       	cp	r1, r22
 584:	17 06       	cpc	r1, r23
 586:	18 06       	cpc	r1, r24
 588:	99 1f       	adc	r25, r25
 58a:	f1 cf       	rjmp	.-30     	; 0x56e <__fp_splitA+0xc>
 58c:	86 95       	lsr	r24
 58e:	71 05       	cpc	r23, r1
 590:	61 05       	cpc	r22, r1
 592:	08 94       	sec
 594:	08 95       	ret

00000596 <__fp_zero>:
 596:	e8 94       	clt

00000598 <__fp_szero>:
 598:	bb 27       	eor	r27, r27
 59a:	66 27       	eor	r22, r22
 59c:	77 27       	eor	r23, r23
 59e:	cb 01       	movw	r24, r22
 5a0:	97 f9       	bld	r25, 7
 5a2:	08 95       	ret

000005a4 <__mulsf3>:
 5a4:	0b d0       	rcall	.+22     	; 0x5bc <__mulsf3x>
 5a6:	c4 cf       	rjmp	.-120    	; 0x530 <__fp_round>
 5a8:	b5 df       	rcall	.-150    	; 0x514 <__fp_pscA>
 5aa:	28 f0       	brcs	.+10     	; 0x5b6 <__mulsf3+0x12>
 5ac:	ba df       	rcall	.-140    	; 0x522 <__fp_pscB>
 5ae:	18 f0       	brcs	.+6      	; 0x5b6 <__mulsf3+0x12>
 5b0:	95 23       	and	r25, r21
 5b2:	09 f0       	breq	.+2      	; 0x5b6 <__mulsf3+0x12>
 5b4:	a6 cf       	rjmp	.-180    	; 0x502 <__fp_inf>
 5b6:	ab cf       	rjmp	.-170    	; 0x50e <__fp_nan>
 5b8:	11 24       	eor	r1, r1
 5ba:	ee cf       	rjmp	.-36     	; 0x598 <__fp_szero>

000005bc <__mulsf3x>:
 5bc:	ca df       	rcall	.-108    	; 0x552 <__fp_split3>
 5be:	a0 f3       	brcs	.-24     	; 0x5a8 <__mulsf3+0x4>

000005c0 <__mulsf3_pse>:
 5c0:	95 9f       	mul	r25, r21
 5c2:	d1 f3       	breq	.-12     	; 0x5b8 <__mulsf3+0x14>
 5c4:	95 0f       	add	r25, r21
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	55 1f       	adc	r21, r21
 5ca:	62 9f       	mul	r22, r18
 5cc:	f0 01       	movw	r30, r0
 5ce:	72 9f       	mul	r23, r18
 5d0:	bb 27       	eor	r27, r27
 5d2:	f0 0d       	add	r31, r0
 5d4:	b1 1d       	adc	r27, r1
 5d6:	63 9f       	mul	r22, r19
 5d8:	aa 27       	eor	r26, r26
 5da:	f0 0d       	add	r31, r0
 5dc:	b1 1d       	adc	r27, r1
 5de:	aa 1f       	adc	r26, r26
 5e0:	64 9f       	mul	r22, r20
 5e2:	66 27       	eor	r22, r22
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	66 1f       	adc	r22, r22
 5ea:	82 9f       	mul	r24, r18
 5ec:	22 27       	eor	r18, r18
 5ee:	b0 0d       	add	r27, r0
 5f0:	a1 1d       	adc	r26, r1
 5f2:	62 1f       	adc	r22, r18
 5f4:	73 9f       	mul	r23, r19
 5f6:	b0 0d       	add	r27, r0
 5f8:	a1 1d       	adc	r26, r1
 5fa:	62 1f       	adc	r22, r18
 5fc:	83 9f       	mul	r24, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	22 1f       	adc	r18, r18
 604:	74 9f       	mul	r23, r20
 606:	33 27       	eor	r19, r19
 608:	a0 0d       	add	r26, r0
 60a:	61 1d       	adc	r22, r1
 60c:	23 1f       	adc	r18, r19
 60e:	84 9f       	mul	r24, r20
 610:	60 0d       	add	r22, r0
 612:	21 1d       	adc	r18, r1
 614:	82 2f       	mov	r24, r18
 616:	76 2f       	mov	r23, r22
 618:	6a 2f       	mov	r22, r26
 61a:	11 24       	eor	r1, r1
 61c:	9f 57       	subi	r25, 0x7F	; 127
 61e:	50 40       	sbci	r21, 0x00	; 0
 620:	8a f0       	brmi	.+34     	; 0x644 <__mulsf3_pse+0x84>
 622:	e1 f0       	breq	.+56     	; 0x65c <__mulsf3_pse+0x9c>
 624:	88 23       	and	r24, r24
 626:	4a f0       	brmi	.+18     	; 0x63a <__mulsf3_pse+0x7a>
 628:	ee 0f       	add	r30, r30
 62a:	ff 1f       	adc	r31, r31
 62c:	bb 1f       	adc	r27, r27
 62e:	66 1f       	adc	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	91 50       	subi	r25, 0x01	; 1
 636:	50 40       	sbci	r21, 0x00	; 0
 638:	a9 f7       	brne	.-22     	; 0x624 <__mulsf3_pse+0x64>
 63a:	9e 3f       	cpi	r25, 0xFE	; 254
 63c:	51 05       	cpc	r21, r1
 63e:	70 f0       	brcs	.+28     	; 0x65c <__mulsf3_pse+0x9c>
 640:	60 cf       	rjmp	.-320    	; 0x502 <__fp_inf>
 642:	aa cf       	rjmp	.-172    	; 0x598 <__fp_szero>
 644:	5f 3f       	cpi	r21, 0xFF	; 255
 646:	ec f3       	brlt	.-6      	; 0x642 <__mulsf3_pse+0x82>
 648:	98 3e       	cpi	r25, 0xE8	; 232
 64a:	dc f3       	brlt	.-10     	; 0x642 <__mulsf3_pse+0x82>
 64c:	86 95       	lsr	r24
 64e:	77 95       	ror	r23
 650:	67 95       	ror	r22
 652:	b7 95       	ror	r27
 654:	f7 95       	ror	r31
 656:	e7 95       	ror	r30
 658:	9f 5f       	subi	r25, 0xFF	; 255
 65a:	c1 f7       	brne	.-16     	; 0x64c <__mulsf3_pse+0x8c>
 65c:	fe 2b       	or	r31, r30
 65e:	88 0f       	add	r24, r24
 660:	91 1d       	adc	r25, r1
 662:	96 95       	lsr	r25
 664:	87 95       	ror	r24
 666:	97 f9       	bld	r25, 7
 668:	08 95       	ret

0000066a <__divmodhi4>:
 66a:	97 fb       	bst	r25, 7
 66c:	09 2e       	mov	r0, r25
 66e:	07 26       	eor	r0, r23
 670:	0a d0       	rcall	.+20     	; 0x686 <__divmodhi4_neg1>
 672:	77 fd       	sbrc	r23, 7
 674:	04 d0       	rcall	.+8      	; 0x67e <__divmodhi4_neg2>
 676:	27 d0       	rcall	.+78     	; 0x6c6 <__udivmodhi4>
 678:	06 d0       	rcall	.+12     	; 0x686 <__divmodhi4_neg1>
 67a:	00 20       	and	r0, r0
 67c:	1a f4       	brpl	.+6      	; 0x684 <__divmodhi4_exit>

0000067e <__divmodhi4_neg2>:
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255

00000684 <__divmodhi4_exit>:
 684:	08 95       	ret

00000686 <__divmodhi4_neg1>:
 686:	f6 f7       	brtc	.-4      	; 0x684 <__divmodhi4_exit>
 688:	90 95       	com	r25
 68a:	81 95       	neg	r24
 68c:	9f 4f       	sbci	r25, 0xFF	; 255
 68e:	08 95       	ret

00000690 <__divmodsi4>:
 690:	97 fb       	bst	r25, 7
 692:	09 2e       	mov	r0, r25
 694:	05 26       	eor	r0, r21
 696:	0e d0       	rcall	.+28     	; 0x6b4 <__divmodsi4_neg1>
 698:	57 fd       	sbrc	r21, 7
 69a:	04 d0       	rcall	.+8      	; 0x6a4 <__divmodsi4_neg2>
 69c:	28 d0       	rcall	.+80     	; 0x6ee <__udivmodsi4>
 69e:	0a d0       	rcall	.+20     	; 0x6b4 <__divmodsi4_neg1>
 6a0:	00 1c       	adc	r0, r0
 6a2:	38 f4       	brcc	.+14     	; 0x6b2 <__divmodsi4_exit>

000006a4 <__divmodsi4_neg2>:
 6a4:	50 95       	com	r21
 6a6:	40 95       	com	r20
 6a8:	30 95       	com	r19
 6aa:	21 95       	neg	r18
 6ac:	3f 4f       	sbci	r19, 0xFF	; 255
 6ae:	4f 4f       	sbci	r20, 0xFF	; 255
 6b0:	5f 4f       	sbci	r21, 0xFF	; 255

000006b2 <__divmodsi4_exit>:
 6b2:	08 95       	ret

000006b4 <__divmodsi4_neg1>:
 6b4:	f6 f7       	brtc	.-4      	; 0x6b2 <__divmodsi4_exit>
 6b6:	90 95       	com	r25
 6b8:	80 95       	com	r24
 6ba:	70 95       	com	r23
 6bc:	61 95       	neg	r22
 6be:	7f 4f       	sbci	r23, 0xFF	; 255
 6c0:	8f 4f       	sbci	r24, 0xFF	; 255
 6c2:	9f 4f       	sbci	r25, 0xFF	; 255
 6c4:	08 95       	ret

000006c6 <__udivmodhi4>:
 6c6:	aa 1b       	sub	r26, r26
 6c8:	bb 1b       	sub	r27, r27
 6ca:	51 e1       	ldi	r21, 0x11	; 17
 6cc:	07 c0       	rjmp	.+14     	; 0x6dc <__udivmodhi4_ep>

000006ce <__udivmodhi4_loop>:
 6ce:	aa 1f       	adc	r26, r26
 6d0:	bb 1f       	adc	r27, r27
 6d2:	a6 17       	cp	r26, r22
 6d4:	b7 07       	cpc	r27, r23
 6d6:	10 f0       	brcs	.+4      	; 0x6dc <__udivmodhi4_ep>
 6d8:	a6 1b       	sub	r26, r22
 6da:	b7 0b       	sbc	r27, r23

000006dc <__udivmodhi4_ep>:
 6dc:	88 1f       	adc	r24, r24
 6de:	99 1f       	adc	r25, r25
 6e0:	5a 95       	dec	r21
 6e2:	a9 f7       	brne	.-22     	; 0x6ce <__udivmodhi4_loop>
 6e4:	80 95       	com	r24
 6e6:	90 95       	com	r25
 6e8:	bc 01       	movw	r22, r24
 6ea:	cd 01       	movw	r24, r26
 6ec:	08 95       	ret

000006ee <__udivmodsi4>:
 6ee:	a1 e2       	ldi	r26, 0x21	; 33
 6f0:	1a 2e       	mov	r1, r26
 6f2:	aa 1b       	sub	r26, r26
 6f4:	bb 1b       	sub	r27, r27
 6f6:	fd 01       	movw	r30, r26
 6f8:	0d c0       	rjmp	.+26     	; 0x714 <__udivmodsi4_ep>

000006fa <__udivmodsi4_loop>:
 6fa:	aa 1f       	adc	r26, r26
 6fc:	bb 1f       	adc	r27, r27
 6fe:	ee 1f       	adc	r30, r30
 700:	ff 1f       	adc	r31, r31
 702:	a2 17       	cp	r26, r18
 704:	b3 07       	cpc	r27, r19
 706:	e4 07       	cpc	r30, r20
 708:	f5 07       	cpc	r31, r21
 70a:	20 f0       	brcs	.+8      	; 0x714 <__udivmodsi4_ep>
 70c:	a2 1b       	sub	r26, r18
 70e:	b3 0b       	sbc	r27, r19
 710:	e4 0b       	sbc	r30, r20
 712:	f5 0b       	sbc	r31, r21

00000714 <__udivmodsi4_ep>:
 714:	66 1f       	adc	r22, r22
 716:	77 1f       	adc	r23, r23
 718:	88 1f       	adc	r24, r24
 71a:	99 1f       	adc	r25, r25
 71c:	1a 94       	dec	r1
 71e:	69 f7       	brne	.-38     	; 0x6fa <__udivmodsi4_loop>
 720:	60 95       	com	r22
 722:	70 95       	com	r23
 724:	80 95       	com	r24
 726:	90 95       	com	r25
 728:	9b 01       	movw	r18, r22
 72a:	ac 01       	movw	r20, r24
 72c:	bd 01       	movw	r22, r26
 72e:	cf 01       	movw	r24, r30
 730:	08 95       	ret

00000732 <__eewr_byte_m32>:
 732:	26 2f       	mov	r18, r22

00000734 <__eewr_r18_m32>:
 734:	e1 99       	sbic	0x1c, 1	; 28
 736:	fe cf       	rjmp	.-4      	; 0x734 <__eewr_r18_m32>
 738:	9f bb       	out	0x1f, r25	; 31
 73a:	8e bb       	out	0x1e, r24	; 30
 73c:	2d bb       	out	0x1d, r18	; 29
 73e:	0f b6       	in	r0, 0x3f	; 63
 740:	f8 94       	cli
 742:	e2 9a       	sbi	0x1c, 2	; 28
 744:	e1 9a       	sbi	0x1c, 1	; 28
 746:	0f be       	out	0x3f, r0	; 63
 748:	01 96       	adiw	r24, 0x01	; 1
 74a:	08 95       	ret

0000074c <_exit>:
 74c:	f8 94       	cli

0000074e <__stop_program>:
 74e:	ff cf       	rjmp	.-2      	; 0x74e <__stop_program>
